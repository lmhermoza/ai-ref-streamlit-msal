{"version":3,"file":"static/js/main.2b159d2a.js","mappings":"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","sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/object-assign/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../node_modules/@azure/msal-browser/src/config/Configuration.ts","../node_modules/@azure/msal-common/src/cache/entities/AuthorityMetadataEntity.ts","../node_modules/@azure/msal-common/src/utils/FunctionWrappers.ts","../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../node_modules/@azure/msal-common/src/authority/Authority.ts","../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryErrorResponse.ts","../node_modules/@azure/msal-common/src/cache/entities/AppMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ThrottlingEntity.ts","../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../node_modules/@azure/msal-common/src/cache/entities/CacheRecord.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../node_modules/@azure/msal-browser/src/cache/BrowserStorage.ts","../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../node_modules/@azure/msal-common/src/network/NetworkManager.ts","../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../node_modules/@azure/msal-common/src/client/BaseClient.ts","../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeStatusCodes.ts","../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/NativeInteractionClient.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeMessageHandler.ts","../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/RedirectHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../node_modules/@azure/msal-browser/src/controllers/StandardController.ts","../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/CryptoKeyStore.ts","../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../node_modules/@azure/msal-browser/src/event/EventType.ts","../node_modules/@azure/msal-browser/src/packageMetadata.ts","../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../node_modules/@azure/msal-common/src/account/AuthToken.ts","../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../node_modules/@azure/msal-common/src/cache/utils/CacheHelpers.ts","../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../node_modules/@azure/msal-common/src/error/AuthError.ts","../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../node_modules/@azure/msal-common/src/error/ClientAuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationErrorCodes.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../node_modules/@azure/msal-common/src/logger/Logger.ts","../node_modules/@azure/msal-common/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","../node_modules/@azure/msal-common/src/url/UrlString.ts","../node_modules/@azure/msal-common/src/utils/Constants.ts","../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../node_modules/@azure/msal-common/src/utils/UrlUtils.ts","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/apache-arrow/src/enum.ts","../node_modules/apache-arrow/src/util/compat.ts","../node_modules/apache-arrow/src/util/pretty.ts","../node_modules/tslib/tslib.es6.mjs","../node_modules/apache-arrow/src/util/utf8.ts","../node_modules/apache-arrow/src/util/buffer.ts","../node_modules/apache-arrow/src/util/bn.ts","../node_modules/apache-arrow/src/type.ts","../node_modules/apache-arrow/src/visitor.ts","../node_modules/apache-arrow/src/util/math.ts","../node_modules/apache-arrow/src/visitor/set.ts","../node_modules/apache-arrow/src/row/struct.ts","../node_modules/apache-arrow/src/visitor/get.ts","../node_modules/apache-arrow/src/row/map.ts","../node_modules/apache-arrow/src/util/vector.ts","../node_modules/apache-arrow/src/util/chunk.ts","../node_modules/apache-arrow/src/util/bit.ts","../node_modules/apache-arrow/src/visitor/indexof.ts","../node_modules/apache-arrow/src/visitor/iterator.ts","../node_modules/apache-arrow/src/visitor/bytelength.ts","../node_modules/apache-arrow/src/vector.ts","../node_modules/apache-arrow/src/data.ts","../node_modules/apache-arrow/src/schema.ts","../node_modules/apache-arrow/src/visitor/typecomparator.ts","../node_modules/apache-arrow/src/recordbatch.ts","../node_modules/apache-arrow/src/util/recordbatch.ts","../node_modules/apache-arrow/src/table.ts","../node_modules/apache-arrow/src/fb/block.ts","../node_modules/flatbuffers/mjs/constants.js","../node_modules/flatbuffers/mjs/utils.js","../node_modules/flatbuffers/mjs/long.js","../node_modules/flatbuffers/mjs/encoding.js","../node_modules/apache-arrow/src/fb/metadata-version.ts","../node_modules/apache-arrow/src/fb/endianness.ts","../node_modules/apache-arrow/src/fb/dictionary-kind.ts","../node_modules/apache-arrow/src/fb/type.ts","../node_modules/flatbuffers/mjs/byte-buffer.js","../node_modules/flatbuffers/mjs/builder.js","../node_modules/apache-arrow/src/fb/key-value.ts","../node_modules/apache-arrow/src/fb/int.ts","../node_modules/apache-arrow/src/fb/dictionary-encoding.ts","../node_modules/apache-arrow/src/fb/field.ts","../node_modules/apache-arrow/src/fb/schema.ts","../node_modules/apache-arrow/src/fb/footer.ts","../node_modules/apache-arrow/src/ipc/metadata/file.ts","../node_modules/apache-arrow/src/io/adapters.ts","../node_modules/apache-arrow/src/io/interfaces.ts","../node_modules/apache-arrow/src/io/stream.ts","../node_modules/apache-arrow/src/io/file.ts","../node_modules/apache-arrow/src/util/int.ts","../node_modules/apache-arrow/src/visitor/vectorloader.ts","../node_modules/apache-arrow/src/fb/body-compression-method.ts","../node_modules/apache-arrow/src/fb/compression-type.ts","../node_modules/apache-arrow/src/fb/precision.ts","../node_modules/apache-arrow/src/fb/date-unit.ts","../node_modules/apache-arrow/src/fb/time-unit.ts","../node_modules/apache-arrow/src/fb/interval-unit.ts","../node_modules/apache-arrow/src/fb/union-mode.ts","../node_modules/apache-arrow/src/fb/message-header.ts","../node_modules/apache-arrow/src/fb/body-compression.ts","../node_modules/apache-arrow/src/fb/buffer.ts","../node_modules/apache-arrow/src/fb/field-node.ts","../node_modules/apache-arrow/src/fb/record-batch.ts","../node_modules/apache-arrow/src/fb/dictionary-batch.ts","../node_modules/apache-arrow/src/fb/floating-point.ts","../node_modules/apache-arrow/src/fb/decimal.ts","../node_modules/apache-arrow/src/fb/date.ts","../node_modules/apache-arrow/src/fb/time.ts","../node_modules/apache-arrow/src/fb/timestamp.ts","../node_modules/apache-arrow/src/fb/interval.ts","../node_modules/apache-arrow/src/fb/union.ts","../node_modules/apache-arrow/src/fb/fixed-size-binary.ts","../node_modules/apache-arrow/src/fb/fixed-size-list.ts","../node_modules/apache-arrow/src/fb/map.ts","../node_modules/apache-arrow/src/fb/message.ts","../node_modules/apache-arrow/src/fb/null.ts","../node_modules/apache-arrow/src/fb/binary.ts","../node_modules/apache-arrow/src/fb/bool.ts","../node_modules/apache-arrow/src/fb/utf8.ts","../node_modules/apache-arrow/src/fb/list.ts","../node_modules/apache-arrow/src/fb/struct_.ts","../node_modules/apache-arrow/src/visitor/typeassembler.ts","../node_modules/apache-arrow/src/ipc/metadata/json.ts","../node_modules/apache-arrow/src/ipc/metadata/message.ts","../node_modules/apache-arrow/src/ipc/message.ts","../node_modules/apache-arrow/src/ipc/reader.ts","../node_modules/apache-arrow/src/visitor/vectorassembler.ts","../node_modules/apache-arrow/src/ipc/writer.ts","../node_modules/apache-arrow/src/ipc/serialization.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/@azure/msal-browser/src/operatingcontext/BaseOperatingContext.ts","../node_modules/@azure/msal-browser/src/operatingcontext/StandardOperatingContext.ts","../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","Msal.tsx","index.tsx"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.14.0\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function u(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(u(227));\nfunction ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;\nfunction oa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};\nfunction ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}\nfunction ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),za=null,Aa=null,Ba=null;\nfunction Ca(a){if(a=ma(a)){if(\"function\"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}\nfunction Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};\nfunction Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction Ta(a,b,c,d){if(null===b||\"undefined\"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});[\"capture\",\"download\"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});[\"rowSpan\",\"start\"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Ua,\nVa);C[b]=new v(b,1,!1,a,null,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});\nC.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty(\"ReactCurrentDispatcher\")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty(\"ReactCurrentBatchConfig\")||(Wa.ReactCurrentBatchConfig={suspense:null});\nfunction Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar Ya=/^(.*)[\\\\\\/]/,E=\"function\"===typeof Symbol&&Symbol.for,Za=E?Symbol.for(\"react.element\"):60103,$a=E?Symbol.for(\"react.portal\"):60106,ab=E?Symbol.for(\"react.fragment\"):60107,bb=E?Symbol.for(\"react.strict_mode\"):60108,cb=E?Symbol.for(\"react.profiler\"):60114,db=E?Symbol.for(\"react.provider\"):60109,eb=E?Symbol.for(\"react.context\"):60110,fb=E?Symbol.for(\"react.concurrent_mode\"):60111,gb=E?Symbol.for(\"react.forward_ref\"):60112,hb=E?Symbol.for(\"react.suspense\"):60113,ib=E?Symbol.for(\"react.suspense_list\"):\n60120,jb=E?Symbol.for(\"react.memo\"):60115,kb=E?Symbol.for(\"react.lazy\"):60116,lb=E?Symbol.for(\"react.block\"):60121,mb=\"function\"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||\"object\"!==typeof a)return null;a=mb&&a[mb]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}\nfunction pb(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ab:return\"Fragment\";case $a:return\"Portal\";case cb:return\"Profiler\";case bb:return\"StrictMode\";case hb:return\"Suspense\";case ib:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case eb:return\"Context.Consumer\";case db:return\"Context.Provider\";case gb:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ya,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nfunction rb(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function sb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction tb(a){var b=sb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=sb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Ab(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,\"checked\",b,!1)}\nfunction Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Db(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Eb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Db(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function Fb(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}\nfunction Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:rb(c)}}\nfunction Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var Mb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Nb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Ob(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Nb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Pb,Qb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||\"innerHTML\"in a)a.innerHTML=b;else{Pb=Pb||document.createElement(\"div\");Pb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Tb={animationend:Sb(\"Animation\",\"AnimationEnd\"),animationiteration:Sb(\"Animation\",\"AnimationIteration\"),animationstart:Sb(\"Animation\",\"AnimationStart\"),transitionend:Sb(\"Transition\",\"TransitionEnd\")},Ub={},Vb={};\nya&&(Vb=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),\"TransitionEvent\"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}\nvar Xb=Wb(\"animationend\"),Yb=Wb(\"animationiteration\"),Zb=Wb(\"animationstart\"),$b=Wb(\"transitionend\"),ac=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bc=new (\"function\"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}\nfunction dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}\nfunction gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;\nfunction lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}\nfunction nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}\nfunction rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}\nfunction sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=\nic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case \"scroll\":vc(b,\"scroll\",!0);break;case \"focus\":case \"blur\":vc(b,\"focus\",!0);vc(b,\"blur\",!0);c.set(\"blur\",null);c.set(\"focus\",null);break;case \"cancel\":case \"close\":oc(a)&&vc(b,a,!0);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}\nvar wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit\".split(\" \"),Ic=\"focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture\".split(\" \");\nfunction Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}\nfunction Lc(a,b){switch(a){case \"focus\":case \"blur\":Bc=null;break;case \"dragenter\":case \"dragleave\":Cc=null;break;case \"mouseover\":case \"mouseout\":Dc=null;break;case \"pointerover\":case \"pointerout\":Ec.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}\nfunction Oc(a,b,c,d,e){switch(b){case \"focus\":return Bc=Mc(Bc,a,b,c,d,e),!0;case \"dragenter\":return Cc=Mc(Cc,a,b,c,d,e),!0;case \"mouseover\":return Dc=Mc(Dc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}\nfunction Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}\nfunction Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}\nvar Wc={},Yc=new Map,Zc=new Map,$c=[\"abort\",\"abort\",Xb,\"animationEnd\",Yb,\"animationIteration\",Zb,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\n\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",$b,\"transitionEnd\",\"waiting\",\"waiting\"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f=\"on\"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+\"Capture\"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}\nad(\"blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),0);\nad(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);ad($c,2);for(var bd=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);\nvar dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}\nfunction id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}\nfunction Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}\nvar jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(\"\"+b).trim():b+\"px\"}\nfunction md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ld(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,\"\"));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(u(62,\"\"));}}\nfunction pd(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}\nfunction td(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}\nfunction wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}\nfunction yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}var zd=\"$\",Ad=\"/$\",Bd=\"$?\",Cd=\"$!\",Dd=null,Ed=null;function Fd(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction Gd(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd=\"function\"===typeof setTimeout?setTimeout:void 0,Id=\"function\"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}\nfunction Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md=\"__reactInternalInstance$\"+Ld,Nd=\"__reactEventHandlers$\"+Ld,Od=\"__reactContainere$\"+Ld;\nfunction tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}\nfunction Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(u(231,\nb,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],\"captured\",a);for(b=0;b<c.length;b++)Td(c[b],\"bubbled\",a)}}\nfunction Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;\nfunction ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e=\"value\"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}\nfunction G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}\nn(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nG.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&\"CompositionEvent\"in window,ke=null;ya&&\"documentMode\"in document&&(ke=document.documentMode);\nvar le=ya&&\"TextEvent\"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},pe=!1;\nfunction qe(a,b){switch(a){case \"keyup\":return-1!==ie.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function re(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var se=!1;function te(a,b){switch(a){case \"compositionend\":return re(b);case \"keypress\":if(32!==b.which)return null;pe=!0;return ne;case \"textInput\":return a=b.data,a===ne&&pe?null:a;default:return null}}\nfunction ue(a,b){if(se)return\"compositionend\"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return me&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case \"compositionstart\":var f=oe.compositionStart;break b;case \"compositionend\":f=oe.compositionEnd;break b;case \"compositionupdate\":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&\"ko\"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd=\"value\"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,\nb,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!we[a.type]:\"textarea\"===b?!0:!1}\nvar ye={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type=\"change\";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if(\"change\"===a)return b}var Fe=!1;ya&&(Fe=oc(\"input\")&&(!document.documentMode||9<document.documentMode));\nfunction Ge(){Ae&&(Ae.detachEvent(\"onpropertychange\",He),Be=Ae=null)}function He(a){if(\"value\"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){\"focus\"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent(\"onpropertychange\",He)):\"blur\"===a&&Ge()}function Je(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return De(Be)}function Ke(a,b){if(\"click\"===a)return De(b)}function Le(a,b){if(\"input\"===a||\"change\"===a)return De(b)}\nvar Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&\"input\"===f.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Db(e,\"number\",e.value)}},Ne=G.extend({view:null,detail:null}),\nOe={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}\nvar Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?\"mousemove\"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Se;Se=a.screenY;return Ue?\"mousemove\"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f=\"mouseover\"===a||\"pointerover\"===a,g=\"mouseout\"===a||\"pointerout\"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if(\"mouseout\"===a||\"mouseover\"===\na){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p=\"mouse\"}else if(\"pointerout\"===a||\"pointerover\"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p=\"pointer\";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+\"leave\";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+\"enter\";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;\nk=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],\"bubbled\",l);for(p=d.length;0<p--;)Vd(d[p],\"captured\",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e=\"function\"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;\nfunction bf(a,b){if($e(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}\nvar cf=ya&&\"documentMode\"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},ef=null,ff=null,gf=null,hf=!1;\nfunction jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;\"selectionStart\"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type=\"select\",a.target=ef,Xd(a),a)}\nvar kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case \"focus\":if(xe(e)||\"true\"===e.contentEditable)ef=e,ff=b,gf=null;break;case \"blur\":gf=ff=ef=null;break;case \"mousedown\":hf=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return hf=!1,jf(c,d);case \"selectionchange\":if(cf)break;\ncase \"keydown\":case \"keyup\":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar pf={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},qf={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=of(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?qf[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return\"keypress\"===\na.type?of(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?of(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case \"keypress\":if(0===of(c))return null;case \"keydown\":case \"keyup\":a=rf;break;case \"blur\":case \"focus\":a=nf;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=\nVe;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=sf;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case \"scroll\":a=Ne;break;case \"wheel\":a=vf;break;case \"copy\":case \"cut\":case \"paste\":a=mf;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=\nWe;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}\nfunction I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}\nfunction Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||\"Unknown\",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}\nfunction Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}\nvar If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};\nfunction ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}\nfunction fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}\nfunction og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}\nfunction sg(a,b){if(mg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}\nfunction vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}\nfunction zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=\nca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if(\"function\"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g=\"function\"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&\n(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}\nfunction Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if(\"function\"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}\nvar Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;\nc=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}\nfunction Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;\"object\"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Mg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}\nfunction Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;\nfunction Pg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}\nfunction Qg(a,b){if(\"textarea\"!==a.type)throw Error(u(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\"));}\nfunction Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Tg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||\nnb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&\nm&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if(\"function\"!==typeof k)throw Error(u(150));h=k.call(h);\nif(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==\nq.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,\nk.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=\nd.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||\"Component\"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};\nfunction ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};\nfunction hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}\nvar jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}\nfunction oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}\nfunction th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&\n(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction yh(a){var b=th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}\nfunction Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}\nfunction Hh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}\nfunction zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,\nd)}}\nvar sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,\nb];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=\nc}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=\nwh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,\nb,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}\nfunction Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}\nfunction Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}\nfunction ai(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}\nfunction fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?(\"function\"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,\"object\"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p=\"function\"===typeof m||\"function\"===\ntypeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?(\"function\"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,l),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):\n(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}\nfunction gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}\nvar ii={dehydrated:null,retryTime:0};\nfunction ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=\nb;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=\nc}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}\nfunction ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case \"together\":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;\nni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};\npi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case \"input\":f=zb(g,f);d=zb(g,d);a=[];break;case \"option\":f=Gb(g,f);d=Gb(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=Ib(g,f);d=Ib(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if(\"style\"===\nh)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]=\"\");else\"dangerouslySetInnerHTML\"!==h&&\"children\"!==h&&\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if(\"style\"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]=\"\");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),\nc[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else\"dangerouslySetInnerHTML\"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):\"children\"===h?g===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(h,\"\"+l):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push(\"style\",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};\nqi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));\nreturn null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case \"iframe\":case \"object\":case \"embed\":F(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<ac.length;a++)F(ac[a],d);break;case \"source\":F(\"error\",d);break;case \"img\":case \"image\":case \"link\":F(\"error\",d);F(\"load\",d);break;case \"form\":F(\"reset\",d);F(\"submit\",d);break;case \"details\":F(\"toggle\",d);break;case \"input\":Ab(d,f);F(\"invalid\",d);rd(c,\"onChange\");break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};F(\"invalid\",d);rd(c,\"onChange\");break;case \"textarea\":Jb(d,f),F(\"invalid\",d),rd(c,\"onChange\")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(a=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(a=[\"children\",\"\"+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case \"input\":xb(d);Eb(d,f,!0);break;case \"textarea\":xb(d);Lb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&\n(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?\"script\"===e?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),\"select\"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case \"iframe\":case \"object\":case \"embed\":F(\"load\",\na);h=d;break;case \"video\":case \"audio\":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case \"source\":F(\"error\",a);h=d;break;case \"img\":case \"image\":case \"link\":F(\"error\",a);F(\"load\",a);h=d;break;case \"form\":F(\"reset\",a);F(\"submit\",a);h=d;break;case \"details\":F(\"toggle\",a);h=d;break;case \"input\":Ab(a,d);h=zb(a,d);F(\"invalid\",a);rd(c,\"onChange\");break;case \"option\":h=Gb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F(\"invalid\",a);rd(c,\"onChange\");break;case \"textarea\":Jb(a,\nd);h=Ib(a,d);F(\"invalid\",a);rd(c,\"onChange\");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];\"style\"===f?md(a,l):\"dangerouslySetInnerHTML\"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):\"children\"===f?\"string\"===typeof l?(\"textarea\"!==e||\"\"!==l)&&Rb(a,l):\"number\"===typeof l&&Rb(a,\"\"+l):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case \"input\":xb(a);Eb(a,d,!1);\nbreak;case \"textarea\":xb(a);Lb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+rb(d.value));break;case \"select\":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(u(166));\nc=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=\ne,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&\n64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,\ne.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!f.alternate)return b=\nb.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,\nb.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}\nvar Bi=\"function\"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}\nfunction Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}\nfunction Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}\nfunction Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;\ncase 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}\nfunction Ki(a,b,c){\"function\"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;\"function\"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}\nfunction Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}\nfunction Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}\nfunction Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}\nfunction Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=\nf,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}\nfunction Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?md(c,h):\"dangerouslySetInnerHTML\"===g?Qb(c,h):\"children\"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case \"input\":Cb(c,d);break;\ncase \"textarea\":Kb(c,d);break;case \"select\":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?\nd=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null,f.style.display=ld(\"display\",e));else if(6===a.tag)a.stateNode.nodeValue=d?\"\":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=\nf;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nvar Wi=\"function\"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}\nfunction $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nvar bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}\nfunction Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}\nfunction Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}\nfunction xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}\nfunction zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}\nfunction Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=\nb;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}\nfunction Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;\nc===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=\nd;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=\nHd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}\nfunction yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}\nfunction Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}\nfunction Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}\nfunction Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&\"object\"===typeof h&&\"function\"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=\nnull,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;\nbreak a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+qb(g))}S!==\njj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&(\"function\"===typeof w.getDerivedStateFromError||null!==ub&&\"function\"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}\nfunction Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}\nfunction Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==\na.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}\nfunction Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=\nd-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if(\"selectionStart\"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,\nm=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=\nnull;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,\"\");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&(\"function\"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=\n-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),\"selectionStart\"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&\n(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,\ntop:w.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}\"function\"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=\nnull;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;\"function\"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}\nfunction Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}\nfunction Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}\nfunction Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;\nRj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;\nif(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,\nb,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=\nnull,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);\ncase 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:\nnull,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,\nb,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==\nk){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=\ng}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,\nb,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}\nfunction Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}\nfunction bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if(\"function\"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}\nfunction Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,\nfirstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Ug(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bi(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case db:g=\n10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,\"\"));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}\nfunction Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}\nfunction Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}\nfunction yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}\nfunction bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===\nd?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}\nfunction fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};\nfunction gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}\nfunction ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nwc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};\nza=function(a,b,c){switch(b){case \"input\":Cb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case \"textarea\":Kb(a,c);break;case \"select\":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;\nGa=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};\n(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:\"16.14.0\",\nrendererPackageName:\"react-dom\"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if(\"function\"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};\nexports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};\nexports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version=\"16.14.0\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.14.0\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/** @license React v0.19.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};\nexports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear(): void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { NetworkResponse } from \"./NetworkManager\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>;\n    body?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions,\n        cancellationToken?: number\n    ): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IPerformanceClient,\n    InProgressPerformanceEvent,\n} from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceEvent, PerformanceEventStatus } from \"./PerformanceEvent\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    startMeasurement(): void {\n        return;\n    }\n    endMeasurement(): void {\n        return;\n    }\n    flushMeasurement(): number | null {\n        return null;\n    }\n}\n\nexport class StubPerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n\n    startMeasurement(\n        measureName: string,\n        correlationId?: string | undefined\n    ): InProgressPerformanceEvent {\n        return {\n            end: () => null,\n            discard: () => {},\n            add: () => {},\n            increment: () => {},\n            event: {\n                eventId: this.generateId(),\n                status: PerformanceEventStatus.InProgress,\n                authority: \"\",\n                libraryName: \"\",\n                libraryVersion: \"\",\n                clientId: \"\",\n                name: measureName,\n                startTimeMs: Date.now(),\n                correlationId: correlationId || \"\",\n            },\n            measurement: new StubPerformanceMeasurement(),\n        };\n    }\n\n    startPerformanceMeasurement(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n\n    calculateQueuedTime(): number {\n        return 0;\n    }\n\n    addQueueMeasurement(): void {\n        return;\n    }\n\n    setPreQueueTime(): void {\n        return;\n    }\n\n    endMeasurement(): PerformanceEvent | null {\n        return null;\n    }\n\n    discardMeasurements(): void {\n        return;\n    }\n\n    removePerformanceCallback(): boolean {\n        return true;\n    }\n\n    addPerformanceCallback(): string {\n        return \"\";\n    }\n\n    emitEvents(): void {\n        return;\n    }\n\n    addFields(): void {\n        return;\n    }\n\n    incrementFields(): void {\n        return;\n    }\n\n    cacheEventByCorrelationId(): void {\n        return;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    private static defaultNavigateWindow(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    INetworkModule,\n    NetworkRequestOptions,\n    NetworkResponse,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options),\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.getRequestFailed\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()) as T,\n                status: response.status,\n            };\n        } catch (e) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.failedToParseResponse\n            );\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody,\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.postRequestFailed\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()) as T,\n                status: response.status,\n            };\n        } catch (e) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.failedToParseResponse\n            );\n        }\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders\n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n\n    private getHeaderDict(headers: Headers): Record<string, string> {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SystemOptions,\n    LoggerOptions,\n    INetworkModule,\n    DEFAULT_SYSTEM_OPTIONS,\n    Constants,\n    ProtocolMode,\n    OIDCOptions,\n    ServerResponseType,\n    LogLevel,\n    StubbedNetworkModule,\n    AzureCloudInstance,\n    AzureCloudOptions,\n    ApplicationTelemetry,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    IPerformanceClient,\n    StubPerformanceClient,\n    Logger,\n} from \"@azure/msal-common\";\nimport {\n    BrowserCacheLocation,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationClient } from \"../navigation/NavigationClient\";\nimport { FetchClient } from \"../network/FetchClient\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n */\nexport type BrowserAuthOptions = {\n    /**\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n     */\n    clientId: string;\n    /**\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n     */\n    authority?: string;\n    /**\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\n     */\n    knownAuthorities?: Array<string>;\n    /**\n     * A string containing the cloud discovery response. Used in AAD scenarios.\n     */\n    cloudDiscoveryMetadata?: string;\n    /**\n     * A string containing the .well-known/openid-configuration endpoint response\n     */\n    authorityMetadata?: string;\n    /**\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n     */\n    redirectUri?: string;\n    /**\n     * The redirect URI where the window navigates after a successful logout.\n     */\n    postLogoutRedirectUri?: string | null;\n    /**\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n     */\n    navigateToLoginRequestUrl?: boolean;\n    /**\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n     */\n    clientCapabilities?: Array<string>;\n    /**\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n     */\n    protocolMode?: ProtocolMode;\n    /**\n     * Enum that configures options for the OIDC protocol mode.\n     */\n    OIDCOptions?: OIDCOptions;\n    /**\n     * Enum that represents the Azure Cloud to use.\n     */\n    azureCloudOptions?: AzureCloudOptions;\n    /**\n     * Flag of whether to use the local metadata cache\n     */\n    skipAuthorityMetadataCache?: boolean;\n    /**\n     * App supports nested app auth or not; defaults to false\n     */\n    supportsNestedAppAuth?: boolean;\n};\n\n/** @internal */\nexport type InternalAuthOptions = Required<BrowserAuthOptions> & {\n    OIDCOptions: Required<OIDCOptions>;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n */\nexport type CacheOptions = {\n    /**\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    cacheLocation?: BrowserCacheLocation | string;\n    /**\n     * Used to specify the temporaryCacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    temporaryCacheLocation?: BrowserCacheLocation | string;\n    /**\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n     */\n    storeAuthStateInCookie?: boolean;\n    /**\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\n     */\n    secureCookies?: boolean;\n    /**\n     * If set, MSAL will attempt to migrate cache entries from older versions on initialization. By default this flag is set to true if cacheLocation is localStorage, otherwise false.\n     */\n    cacheMigrationEnabled?: boolean;\n    /**\n     * Flag that determines whether access tokens are stored based on requested claims\n     */\n    claimsBasedCachingEnabled?: boolean;\n};\n\nexport type BrowserSystemOptions = SystemOptions & {\n    /**\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\n     */\n    loggerOptions?: LoggerOptions;\n    /**\n     * Network interface implementation\n     */\n    networkClient?: INetworkModule;\n    /**\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\n     */\n    navigationClient?: INavigationClient;\n    /**\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n     */\n    windowHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n     */\n    iframeHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe or popup\n     */\n    loadFrameTimeout?: number;\n    /**\n     * Maximum time the library should wait for a frame to load\n     * @deprecated This was previously needed for older browsers which are no longer supported by MSAL.js. This option will be removed in the next major version\n     */\n    navigateFrameWait?: number;\n    /**\n     * Time to wait for redirection to occur before resolving promise\n     */\n    redirectNavigationTimeout?: number;\n    /**\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n     */\n    asyncPopups?: boolean;\n    /**\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n     */\n    allowRedirectInIframe?: boolean;\n    /**\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows)\n     */\n    allowNativeBroker?: boolean;\n    /**\n     * Sets the timeout for waiting for the native broker handshake to resolve\n     */\n    nativeBrokerHandshakeTimeout?: number;\n    /**\n     * Sets the interval length in milliseconds for polling the location attribute in popup windows (default is 30ms)\n     */\n    pollIntervalMilliseconds?: number;\n};\n\n/**\n * Telemetry Options\n */\nexport type BrowserTelemetryOptions = {\n    /**\n     * Telemetry information sent on request\n     * - appName: Unique string name of an application\n     * - appVersion: Version of the application using MSAL\n     */\n    application?: ApplicationTelemetry;\n\n    client?: IPerformanceClient;\n};\n\n/**\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\n */\nexport type Configuration = {\n    /**\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n     */\n    auth: BrowserAuthOptions;\n    /**\n     * This is where you configure cache location and whether to store cache in cookies\n     */\n    cache?: CacheOptions;\n    /**\n     * This is where you can configure the network client, logger, token renewal offset\n     */\n    system?: BrowserSystemOptions;\n    /**\n     * This is where you can configure telemetry data and options\n     */\n    telemetry?: BrowserTelemetryOptions;\n};\n\n/** @internal */\nexport type BrowserConfiguration = {\n    auth: InternalAuthOptions;\n    cache: Required<CacheOptions>;\n    system: Required<BrowserSystemOptions>;\n    telemetry: Required<BrowserTelemetryOptions>;\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration(\n    {\n        auth: userInputAuth,\n        cache: userInputCache,\n        system: userInputSystem,\n        telemetry: userInputTelemetry,\n    }: Configuration,\n    isBrowserEnvironment: boolean\n): BrowserConfiguration {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: InternalAuthOptions = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                Constants.OPENID_SCOPE,\n                Constants.PROFILE_SCOPE,\n                Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n        supportsNestedAppAuth: false,\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled:\n            userInputCache &&\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\n                ? true\n                : false,\n        claimsBasedCachingEnabled: false,\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {\n            // allow users to not set logger call back\n        },\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? new FetchClient()\n            : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout:\n            userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n\n    const providedSystemOptions: Required<BrowserSystemOptions> = {\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING,\n        },\n        client: new StubPerformanceClient(),\n    };\n\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (\n        userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions\n    ) {\n        const logger = new Logger(providedSystemOptions.loggerOptions);\n        logger.warning(\n            JSON.stringify(\n                createClientConfigurationError(\n                    ClientConfigurationErrorCodes.cannotSetOIDCOptions\n                )\n            )\n        );\n    }\n\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\n    if (\n        userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\n        providedSystemOptions?.allowNativeBroker\n    ) {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.cannotAllowNativeBroker\n        );\n    }\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: providedSystemOptions,\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n\n    return overlayedConfig;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\n/** @internal */\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n    jwks_uri: string;\n\n    constructor() {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n            AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateCloudDiscoveryMetadata(\n        metadata: CloudDiscoveryMetadata,\n        fromNetwork: boolean\n    ): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateEndpointMetadata(\n        metadata: OpenIdConfigResponse,\n        fromNetwork: boolean\n    ): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority\n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n            AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\n\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invoke = <T extends Array<any>, U>(\n    callback: (...args: T) => U,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): U => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        } catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            } catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            });\n            throw e;\n        }\n    };\n};\n\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invokeAsync = <T extends Array<any>, U>(\n    callback: (...args: T) => Promise<U>,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): Promise<U> => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n                logger.trace(`Returning result from ${eventName}`);\n                inProgressEvent?.end({\n                    success: true,\n                });\n                return response;\n            })\n            .catch((e) => {\n                logger.trace(`Error occurred in ${eventName}`);\n                try {\n                    logger.trace(JSON.stringify(e));\n                } catch (e) {\n                    logger.trace(\"Unable to print error message.\");\n                }\n                inProgressEvent?.end({\n                    success: false,\n                });\n                throw e;\n            });\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse\";\nimport {\n    Constants,\n    RegionDiscoverySources,\n    ResponseCodes,\n} from \"../utils/Constants\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { Logger } from \"../logger/Logger\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Logger\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // CorrelationId\n    protected correlationId: string | undefined;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS: ImdsOptions = {\n        headers: {\n            Metadata: \"true\",\n        },\n    };\n\n    constructor(\n        networkInterface: INetworkModule,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    public async detectRegion(\n        environmentRegion: string | undefined,\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryDetectRegion,\n            this.correlationId\n        );\n\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n\n            try {\n                const localIMDSVersionResponse = await invokeAsync(\n                    this.getRegionFromIMDS.bind(this),\n                    PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(Constants.IMDS_VERSION, options);\n                if (\n                    localIMDSVersionResponse.status ===\n                    ResponseCodes.httpSuccess\n                ) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        RegionDiscoverySources.IMDS;\n                }\n\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (\n                    localIMDSVersionResponse.status ===\n                    ResponseCodes.httpBadRequest\n                ) {\n                    const currentIMDSVersion = await invokeAsync(\n                        this.getCurrentVersion.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await invokeAsync(\n                        this.getRegionFromIMDS.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(currentIMDSVersion, options);\n                    if (\n                        currentIMDSVersionResponse.status ===\n                        ResponseCodes.httpSuccess\n                    ) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        } else {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(\n        version: string,\n        options: ImdsOptions\n    ): Promise<NetworkResponse<string>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n            this.correlationId\n        );\n        return this.networkInterface.sendGetRequestAsync<string>(\n            `${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`,\n            options,\n            Constants.IMDS_TIMEOUT\n        );\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(\n        options: ImdsOptions\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n            this.correlationId\n        );\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(\n                    `${Constants.IMDS_ENDPOINT}?format=json`,\n                    options\n                );\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (\n                response.status === ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0\n            ) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType\";\nimport {\n    isOpenIdConfigResponse,\n    OpenIdConfigResponse,\n} from \"./OpenIdConfigResponse\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IUri } from \"../url/IUri\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport {\n    AADAuthorityConstants,\n    AuthorityMetadataSource,\n    Constants,\n    RegionDiscoveryOutcomes,\n} from \"../utils/Constants\";\nimport {\n    EndpointMetadata,\n    getCloudDiscoveryMetadataFromHardcodedValues,\n    getCloudDiscoveryMetadataFromNetworkResponse,\n    InstanceDiscoveryMetadataAliases,\n} from \"./AuthorityMetadata\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity\";\nimport {\n    AuthorityOptions,\n    AzureCloudInstance,\n    StaticAuthorityOptions,\n} from \"./AuthorityOptions\";\nimport {\n    CloudInstanceDiscoveryResponse,\n    isCloudInstanceDiscoveryResponse,\n} from \"./CloudInstanceDiscoveryResponse\";\nimport {\n    CloudInstanceDiscoveryErrorResponse,\n    isCloudInstanceDiscoveryErrorResponse,\n} from \"./CloudInstanceDiscoveryErrorResponse\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { RegionDiscovery } from \"./RegionDiscovery\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { AzureCloudOptions } from \"../config/ClientConfiguration\";\nimport { Logger } from \"../logger/Logger\";\nimport { AuthError } from \"../error/AuthError\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nexport class Authority {\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n    // Logger object\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // Correlation Id\n    protected correlationId: string | undefined;\n    // Reserved tenant domain names that will not be replaced with tenant id\n    private static reservedTenantDomains: Set<string> = new Set([\n        \"{tenant}\",\n        \"{tenantid}\",\n        AADAuthorityConstants.COMMON,\n        AADAuthorityConstants.CONSUMERS,\n        AADAuthorityConstants.ORGANIZATIONS,\n    ]);\n\n    constructor(\n        authority: string,\n        networkInterface: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.regionDiscovery = new RegionDiscovery(\n            networkInterface,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        );\n    }\n\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private getAuthorityType(authorityUri: IUri): AuthorityType {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            return AuthorityType.Ciam;\n        }\n\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case Constants.ADFS:\n                    return AuthorityType.Adfs;\n                case Constants.DSTS:\n                    return AuthorityType.Dsts;\n                default:\n                    break;\n            }\n        }\n        return AuthorityType.Default;\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(\n                this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\")\n            );\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.endSessionEndpointNotSupported\n                );\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Jwks_uri for token signing keys\n     */\n    public get jwksUri(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private canReplaceTenant(authorityUri: IUri): boolean {\n        return (\n            authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(\n                authorityUri.PathSegments[0]\n            ) &&\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\n            this.protocolMode === ProtocolMode.AAD\n        );\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(\n            this.metadata.canonical_authority\n        );\n        const cachedAuthorityUrlComponents =\n            cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts =\n            this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (\n                index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)\n            ) {\n                const tenantId = new UrlString(\n                    this.metadata.authorization_endpoint\n                ).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(\n                        `Replacing tenant domain name ${cachedPart} with id ${tenantId}`\n                    );\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(\n                    `/${cachedPart}/`,\n                    `/${currentPart}/`\n                );\n            }\n        });\n\n        return this.replaceTenant(endpoint);\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (\n            this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === AuthorityType.Adfs ||\n            (this.protocolMode !== ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))\n        ) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            this.correlationId\n        );\n\n        const metadataEntity = this.getCurrentMetadataEntity();\n\n        const cloudDiscoverySource = await invokeAsync(\n            this.updateCloudDiscoveryMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(\n            this.hostnameAndPort,\n            metadataEntity.preferred_network\n        );\n        const endpointSource = await invokeAsync(\n            this.updateEndpointMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\n            source: endpointSource,\n        });\n    }\n\n    /**\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\n     * from the configured canonical authority\n     * @returns\n     */\n    private getCurrentMetadataEntity(): AuthorityMetadataEntity {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(\n            this.hostnameAndPort\n        );\n\n        if (!metadataEntity) {\n            metadataEntity = new AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n        return metadataEntity;\n    }\n\n    /**\n     * Updates cached metadata based on metadata source and sets the instance's metadata\n     * property to the same value\n     * @param metadataEntity\n     * @param cloudDiscoverySource\n     * @param endpointMetadataResult\n     */\n    private updateCachedMetadata(\n        metadataEntity: AuthorityMetadataEntity,\n        cloudDiscoverySource: AuthorityMetadataSource | null,\n        endpointMetadataResult: {\n            source: AuthorityMetadataSource;\n            metadata?: OpenIdConfigResponse;\n        } | null\n    ): void {\n        if (\n            cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE\n        ) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(\n            metadataEntity.preferred_cache\n        );\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    private async updateEndpointMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.correlationId\n        );\n\n        const localMetadata =\n            this.updateEndpointMetadataFromLocalSources(metadataEntity);\n\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\n        if (localMetadata) {\n            if (\n                localMetadata.source ===\n                AuthorityMetadataSource.HARDCODED_VALUES\n            ) {\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (\n                    this.authorityOptions.azureRegionConfiguration?.azureRegion\n                ) {\n                    if (localMetadata.metadata) {\n                        const hardcodedMetadata = await invokeAsync(\n                            this.updateMetadataWithRegionalInformation.bind(\n                                this\n                            ),\n                            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                            this.logger,\n                            this.performanceClient,\n                            this.correlationId\n                        )(localMetadata.metadata);\n                        metadataEntity.updateEndpointMetadata(\n                            hardcodedMetadata,\n                            false\n                        );\n                    }\n                }\n            }\n            return localMetadata.source;\n        }\n\n        // Get metadata from network if local sources aren't available\n        let metadata = await invokeAsync(\n            this.getEndpointMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await invokeAsync(\n                    this.updateMetadataWithRegionalInformation.bind(this),\n                    PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(metadata);\n            }\n\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        } else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw createClientAuthError(\n                ClientAuthErrorCodes.openIdConfigError,\n                this.defaultOpenIdConfigurationEndpoint\n            );\n        }\n    }\n\n    /**\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\n     * response if the source is hardcoded metadata\n     * @param metadataEntity\n     * @returns\n     */\n    private updateEndpointMetadataFromLocalSources(\n        metadataEntity: AuthorityMetadataEntity\n    ): {\n        source: AuthorityMetadataSource;\n        metadata?: OpenIdConfigResponse;\n    } | null {\n        this.logger.verbose(\n            \"Attempting to get endpoint metadata from authority configuration\"\n        );\n        const configMetadata = this.getEndpointMetadataFromConfig();\n        if (configMetadata) {\n            this.logger.verbose(\n                \"Found endpoint metadata in authority configuration\"\n            );\n            metadataEntity.updateEndpointMetadata(configMetadata, false);\n            return {\n                source: AuthorityMetadataSource.CONFIG,\n            };\n        }\n\n        this.logger.verbose(\n            \"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\"\n        );\n\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                metadataEntity.updateEndpointMetadata(hardcodedMetadata, false);\n                return {\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\n                    metadata: hardcodedMetadata,\n                };\n            } else {\n                this.logger.verbose(\n                    \"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\"\n                );\n            }\n        }\n\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return { source: AuthorityMetadataSource.CACHE };\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(\n        metadataEntity: AuthorityMetadataEntity\n    ): boolean {\n        const cachedAuthorityUrl = new UrlString(\n            metadataEntity.canonical_authority\n        );\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n\n        return (\n            cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length\n        );\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(\n                    this.authorityOptions.authorityMetadata\n                ) as OpenIdConfigResponse;\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidAuthorityMetadata\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.correlationId\n        );\n\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        const openIdConfigurationEndpoint =\n            this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(\n            `Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`\n        );\n\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(\n                    openIdConfigurationEndpoint,\n                    options\n                );\n            const isValidResponse = isOpenIdConfigResponse(response.body);\n            if (isValidResponse) {\n                return response.body;\n            } else {\n                this.logger.verbose(\n                    `Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`\n                );\n                return null;\n            }\n        } catch (e) {\n            this.logger.verbose(\n                `Authority.getEndpointMetadataFromNetwork: ${e}`\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\n        if (this.canonicalAuthority in EndpointMetadata) {\n            return EndpointMetadata[this.canonicalAuthority];\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    private async updateMetadataWithRegionalInformation(\n        metadata: OpenIdConfigResponse\n    ): Promise<OpenIdConfigResponse> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n            this.correlationId\n        );\n\n        const userConfiguredAzureRegion =\n            this.authorityOptions.azureRegionConfiguration?.azureRegion;\n\n        if (userConfiguredAzureRegion) {\n            if (\n                userConfiguredAzureRegion !==\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\n            ) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    userConfiguredAzureRegion\n                );\n            }\n\n            const autodetectedRegionName = await invokeAsync(\n                this.regionDiscovery.detectRegion.bind(this.regionDiscovery),\n                PerformanceEvents.RegionDiscoveryDetectRegion,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                this.authorityOptions.azureRegionConfiguration\n                    ?.environmentRegion,\n                this.regionDiscoveryMetadata\n            );\n\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    autodetectedRegionName\n                );\n            }\n\n            this.regionDiscoveryMetadata.region_outcome =\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n\n        return metadata;\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    private async updateCloudDiscoveryMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.correlationId\n        );\n        const localMetadataSource =\n            this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\n        if (localMetadataSource) {\n            return localMetadataSource;\n        }\n\n        // Fallback to network as metadata source\n        const metadata = await invokeAsync(\n            this.getCloudDiscoveryMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }\n\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.untrustedAuthority\n        );\n    }\n\n    private updateCloudDiscoveryMetadataFromLocalSources(\n        metadataEntity: AuthorityMetadataEntity\n    ): AuthorityMetadataSource | null {\n        this.logger.verbose(\n            \"Attempting to get cloud discovery metadata  from authority configuration\"\n        );\n        this.logger.verbosePii(\n            `Known Authorities: ${\n                this.authorityOptions.knownAuthorities ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Authority Metadata: ${\n                this.authorityOptions.authorityMetadata ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Canonical Authority: ${\n                metadataEntity.canonical_authority || Constants.NOT_APPLICABLE\n            }`\n        );\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\n                \"Found cloud discovery metadata in authority configuration\"\n            );\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\n            \"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\"\n        );\n\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                getCloudDiscoveryMetadataFromHardcodedValues(\n                    this.hostnameAndPort\n                );\n            if (hardcodedMetadata) {\n                this.logger.verbose(\n                    \"Found cloud discovery metadata from hardcoded values.\"\n                );\n                metadataEntity.updateCloudDiscoveryMetadata(\n                    hardcodedMetadata,\n                    false\n                );\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n\n            this.logger.verbose(\n                \"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        }\n\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        return null;\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === AuthorityType.Ciam) {\n            this.logger.verbose(\n                \"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\n                \"The cloud discovery metadata has been provided as a network response, in the config.\"\n            );\n            try {\n                this.logger.verbose(\n                    \"Attempting to parse the cloud discovery metadata.\"\n                );\n                const parsedResponse = JSON.parse(\n                    this.authorityOptions.cloudDiscoveryMetadata\n                ) as CloudInstanceDiscoveryResponse;\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n                    parsedResponse.metadata,\n                    this.hostnameAndPort\n                );\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\n                        \"There is returnable metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                    return metadata;\n                } else {\n                    this.logger.verbose(\n                        \"There is no metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                }\n            } catch (e) {\n                this.logger.verbose(\n                    \"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\"\n                );\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n                );\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\n                \"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.correlationId\n        );\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse\n            >(instanceDiscoveryEndpoint, options);\n            let typedResponseBody:\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse;\n            let metadata: Array<CloudDiscoveryMetadata>;\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryResponse;\n                metadata = typedResponseBody.metadata;\n\n                this.logger.verbosePii(\n                    `tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`\n                );\n            } else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\n                this.logger.warning(\n                    `A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`\n                );\n\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryErrorResponse;\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\n                    this.logger.error(\n                        \"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\"\n                    );\n                    return null;\n                }\n\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`\n                );\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`\n                );\n\n                this.logger.warning(\n                    \"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\"\n                );\n                metadata = [];\n            } else {\n                this.logger.error(\n                    \"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\"\n                );\n                return null;\n            }\n\n            this.logger.verbose(\n                \"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            match = getCloudDiscoveryMetadataFromNetworkResponse(\n                metadata,\n                this.hostnameAndPort\n            );\n        } catch (error) {\n            if (error instanceof AuthError) {\n                this.logger.error(\n                    `There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`\n                );\n            } else {\n                const typedError = error as Error;\n                this.logger.error(\n                    `A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`\n                );\n            }\n\n            return null;\n        }\n\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\n                \"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            this.logger.verbose(\n                \"Creating custom Authority for custom domain scenario.\"\n            );\n\n            match = Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n        return match;\n    }\n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter(\n            (authority) => {\n                return (\n                    UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                    this.hostnameAndPort\n                );\n            }\n        );\n\n        return matches.length > 0;\n    }\n\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(\n        authorityString: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): string {\n        let authorityAzureCloudInstance;\n\n        if (\n            azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None\n        ) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(\n        host: string\n    ): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host: string): boolean {\n        return InstanceDiscoveryMetadataAliases.has(host);\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(\n        host: string,\n        region: string,\n        queryString?: string\n    ): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(\n        metadata: OpenIdConfigResponse,\n        azureRegion: string\n    ): OpenIdConfigResponse {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.authorization_endpoint,\n                azureRegion\n            );\n\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.token_endpoint,\n                azureRegion\n            );\n\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(\n                    regionalMetadata.end_session_endpoint,\n                    azureRegion\n                );\n        }\n\n        return regionalMetadata;\n    }\n\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority: string): string {\n        let ciamAuthority = authority;\n        const authorityUrl = new UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n\n        // check if transformation is needed\n        if (\n            authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(\n                Constants.CIAM_AUTH_URL\n            )\n        ) {\n            const tenantIdOrDomain =\n                authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n\n        return ciamAuthority;\n    }\n}\n\nexport function formatAuthorityUri(authorityUri: string): string {\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\n        ? authorityUri\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\n}\n\nexport function buildStaticAuthorityOptions(\n    authOptions: Partial<AuthorityOptions>\n): StaticAuthorityOptions {\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\n    let cloudDiscoveryMetadata: CloudInstanceDiscoveryResponse | undefined =\n        undefined;\n    if (rawCloudDiscoveryMetadata) {\n        try {\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n            );\n        }\n    }\n    return {\n        canonicalAuthority: authOptions.authority\n            ? formatAuthorityUri(authOptions.authority)\n            : undefined,\n        knownAuthorities: authOptions.knownAuthorities,\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    jwks_uri: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryErrorResponse = {\n    error: String;\n    error_description: String;\n    error_codes?: Array<Number>;\n    timestamp?: String;\n    trace_id?: String;\n    correlation_id?: String;\n    error_uri?: String;\n};\n\nexport function isCloudInstanceDiscoveryErrorResponse(\n    response: object\n): boolean {\n    return (\n        response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(\n            this.environment,\n            this.clientId\n        );\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(\n        environment: string,\n        clientId: string\n    ): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray\n            .join(Separators.CACHE_KEY_SEPARATOR)\n            .toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(\n        clientId: string,\n        environment: string,\n        familyId?: string\n    ): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        let validateKey: boolean = false;\n        if (key) {\n            validateKey =\n                key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n\n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"./Constants\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string;\n    meta?: Record<string, string>;\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string;\n    libraryState: LibraryStateObject;\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(\n        cryptoObj: ICrypto,\n        userState?: string,\n        meta?: Record<string, string>\n    ): string {\n        const libraryState = ProtocolUtils.generateLibraryState(\n            cryptoObj,\n            meta\n        );\n        return userState\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(\n        cryptoObj: ICrypto,\n        meta?: Record<string, string>\n    ): string {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid(),\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(\n        cryptoObj: ICrypto,\n        state: string\n    ): RequestStateObject {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        if (!state) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState =\n                splitState.length > 1\n                    ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\n                    : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(\n                libraryStateString\n            ) as LibraryStateObject;\n            return {\n                userRequestState: userState || Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        } catch (e) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string;\n    type: CcsCredentialType;\n};\n\nexport const CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n} as const;\nexport type CcsCredentialType =\n    (typeof CcsCredentialType)[keyof typeof CcsCredentialType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IdTokenEntity } from \"./IdTokenEntity\";\nimport { AccessTokenEntity } from \"./AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"./RefreshTokenEntity\";\nimport { AccountEntity } from \"./AccountEntity\";\nimport { AppMetadataEntity } from \"./AppMetadataEntity\";\n\n/** @internal */\nexport class CacheRecord {\n    account: AccountEntity | null;\n    idToken: IdTokenEntity | null;\n    accessToken: AccessTokenEntity | null;\n    refreshToken: RefreshTokenEntity | null;\n    appMetadata: AppMetadataEntity | null;\n\n    constructor(\n        accountEntity?: AccountEntity | null,\n        idTokenEntity?: IdTokenEntity | null,\n        accessTokenEntity?: AccessTokenEntity | null,\n        refreshTokenEntity?: RefreshTokenEntity | null,\n        appMetadataEntity?: AppMetadataEntity | null\n    ) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\nimport * as BrowserConfigurationAuthErrorCodes from \"./BrowserConfigurationAuthErrorCodes\";\nexport { BrowserConfigurationAuthErrorCodes };\n\nexport const BrowserConfigurationAuthErrorMessages = {\n    [BrowserConfigurationAuthErrorCodes.storageNotSupported]:\n        \"Given storage configuration option was not supported.\",\n    [BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled]:\n        \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable]:\n        \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: BrowserConfigurationAuthErrorCodes.storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.storageNotSupported\n        ],\n    },\n    stubPcaInstanceCalled: {\n        code: BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes\n                .stubbedPublicClientApplicationCalled\n        ],\n    },\n    inMemRedirectUnavailable: {\n        code: BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\n\nexport function createBrowserConfigurationAuthError(\n    errorCode: string\n): BrowserConfigurationAuthError {\n    return new BrowserConfigurationAuthError(\n        errorCode,\n        BrowserConfigurationAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage<string> {\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (\n            (cacheLocation !== BrowserCacheLocation.LocalStorage &&\n                cacheLocation !== BrowserCacheLocation.SessionStorage) ||\n            !window[cacheLocation]\n        ) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\n            );\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants\";\nimport {\n    ICrypto,\n    RequestStateObject,\n    ProtocolUtils,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"@azure/msal-common\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType;\n};\n\n/**\n * Extracts the BrowserStateObject from the state string.\n * @param browserCrypto\n * @param state\n */\nexport function extractBrowserRequestState(\n    browserCrypto: ICrypto,\n    state: string\n): BrowserStateObject | null {\n    if (!state) {\n        return null;\n    }\n\n    try {\n        const requestStateObj: RequestStateObject =\n            ProtocolUtils.parseRequestState(browserCrypto, state);\n        return requestStateObj.libraryState.meta as BrowserStateObject;\n    } catch (e) {\n        throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    PersistentCacheKeys,\n    StringUtils,\n    CommonAuthorizationCodeRequest,\n    ICrypto,\n    AccountEntity,\n    IdTokenEntity,\n    AccessTokenEntity,\n    RefreshTokenEntity,\n    AppMetadataEntity,\n    CacheManager,\n    ServerTelemetryEntity,\n    ThrottlingEntity,\n    ProtocolUtils,\n    Logger,\n    AuthorityMetadataEntity,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AccountInfo,\n    ActiveAccountFilters,\n    CcsCredential,\n    CcsCredentialType,\n    AuthToken,\n    ValidCredentialType,\n    TokenKeys,\n    CredentialType,\n    CacheRecord,\n    AuthenticationScheme,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    PerformanceEvents,\n    IPerformanceClient,\n    StaticAuthorityOptions,\n    CacheHelpers,\n} from \"@azure/msal-common\";\nimport { CacheOptions } from \"../config/Configuration\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    BrowserCacheLocation,\n    InteractionType,\n    TemporaryCacheKeys,\n    InMemoryCacheKeys,\n    StaticCacheKeys,\n} from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\nimport { IWindowStorage } from \"./IWindowStorage\";\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport { base64Encode } from \"../encode/Base64Encode\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n    // Cache configuration, either set by user or default values.\n    protected cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    protected browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    protected internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    protected temporaryCacheStorage: IWindowStorage<string>;\n    // Logger instance\n    protected logger: Logger;\n\n    // Cookie life calculation (hours * minutes * seconds * ms)\n    protected readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n    constructor(\n        clientId: string,\n        cacheConfig: Required<CacheOptions>,\n        cryptoImpl: ICrypto,\n        logger: Logger,\n        staticAuthorityOptions?: StaticAuthorityOptions\n    ) {\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(\n            this.cacheConfig.cacheLocation\n        );\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(\n            this.cacheConfig.temporaryCacheLocation,\n            this.cacheConfig.cacheLocation\n        );\n\n        // Migrate cache entries from older versions of MSAL.\n        if (cacheConfig.cacheMigrationEnabled) {\n            this.migrateCacheEntries();\n            this.createKeyMaps();\n        }\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    protected setupBrowserStorage(\n        cacheLocation: BrowserCacheLocation | string\n    ): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    return new BrowserStorage(cacheLocation);\n                } catch (e) {\n                    this.logger.verbose(e as string);\n                    break;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\n     * @param temporaryCacheLocation\n     * @param cacheLocation\n     */\n    protected setupTemporaryCacheStorage(\n        temporaryCacheLocation: BrowserCacheLocation | string,\n        cacheLocation: BrowserCacheLocation | string\n    ): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(\n                        temporaryCacheLocation ||\n                            BrowserCacheLocation.SessionStorage\n                    );\n                } catch (e) {\n                    this.logger.verbose(e as string);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n\n        const values = [\n            idTokenValue,\n            clientInfoValue,\n            errorValue,\n            errorDescValue,\n        ];\n        const keysToMigrate = [\n            PersistentCacheKeys.ID_TOKEN,\n            PersistentCacheKeys.CLIENT_INFO,\n            PersistentCacheKeys.ERROR,\n            PersistentCacheKeys.ERROR_DESC,\n        ];\n\n        keysToMigrate.forEach((cacheKey: string, index: number) =>\n            this.migrateCacheEntry(cacheKey, values[index])\n        );\n    }\n\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntry(newKey: string, value: string | null): void {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n\n    /**\n     * Searches all cache entries for MSAL accounts and creates the account key map\n     * This is used to migrate users from older versions of MSAL which did not create the map.\n     * @returns\n     */\n    private createKeyMaps(): void {\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        const tokenKeys = this.getItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`\n        );\n        if (accountKeys && tokenKeys) {\n            this.logger.verbose(\n                \"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\"\n            );\n            // Key maps already exist, no need to iterate through cache\n            return;\n        }\n\n        const allKeys = this.browserStorage.getKeys();\n        allKeys.forEach((key) => {\n            if (this.isCredentialKey(key)) {\n                // Get item, parse, validate and write key to map\n                const value = this.getItem(key);\n                if (value) {\n                    const credObj = this.validateAndParseJson(value);\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\n                        switch (credObj[\"credentialType\"]) {\n                            case CredentialType.ID_TOKEN:\n                                if (CacheHelpers.isIdTokenEntity(credObj)) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const idTokenEntity =\n                                        credObj as IdTokenEntity;\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            idTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.ID_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            case CredentialType.ACCESS_TOKEN:\n                            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                                if (CacheHelpers.isAccessTokenEntity(credObj)) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const accessTokenEntity =\n                                        credObj as AccessTokenEntity;\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            accessTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.ACCESS_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            case CredentialType.REFRESH_TOKEN:\n                                if (\n                                    CacheHelpers.isRefreshTokenEntity(credObj)\n                                ) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const refreshTokenEntity =\n                                        credObj as RefreshTokenEntity;\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            refreshTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.REFRESH_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            default:\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\n                        }\n                    }\n                }\n            }\n\n            if (this.isAccountKey(key)) {\n                const value = this.getItem(key);\n                if (value) {\n                    const accountObj = this.validateAndParseJson(value);\n                    if (\n                        accountObj &&\n                        AccountEntity.isAccountEntity(accountObj)\n                    ) {\n                        this.logger.trace(\n                            \"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\"\n                        );\n                        this.logger.tracePii(\n                            `BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`\n                        );\n                        this.addAccountKeyToMap(key);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    protected validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key: string): string | null {\n        return this.browserStorage.getItem(key);\n    }\n\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key: string, value: string): void {\n        this.browserStorage.setItem(key, value);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey: string): AccountEntity | null {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const account = this.getItem(accountKey);\n        if (!account) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(\n            new AccountEntity(),\n            parsedAccount\n        );\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    setAccount(account: AccountEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n        this.addAccountKeyToMap(key);\n    }\n\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys(): Array<string> {\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        if (accountKeys) {\n            return JSON.parse(accountKeys);\n        }\n\n        this.logger.verbose(\n            \"BrowserCacheManager.getAccountKeys - No account keys found\"\n        );\n        return [];\n    }\n\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.addAccountKeyToMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key added\"\n            );\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key already exists in map\"\n            );\n        }\n    }\n\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap account key removed\"\n            );\n        } else {\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\"\n            );\n        }\n    }\n\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key: string): Promise<void> {\n        void super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        void super.removeAccessToken(key);\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys(): TokenKeys {\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\n        const item = this.getItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`\n        );\n        if (item) {\n            const tokenKeys = this.validateAndParseJson(item);\n            if (\n                tokenKeys &&\n                tokenKeys.hasOwnProperty(\"idToken\") &&\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\n                tokenKeys.hasOwnProperty(\"refreshToken\")\n            ) {\n                return tokenKeys as TokenKeys;\n            } else {\n                this.logger.error(\n                    \"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.getTokenKeys - No token keys found\"\n            );\n        }\n\n        return {\n            idToken: [],\n            accessToken: [],\n            refreshToken: [],\n        };\n    }\n\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - idToken added to map\"\n                    );\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - accessToken added to map\"\n                    );\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - refreshToken added to map\"\n                    );\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`\n                );\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken removed from map\"\n                    );\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`\n                );\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken removed from map\"\n                    );\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`\n                );\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken removed from map\"\n                    );\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !CacheHelpers.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getIdTokenCredential: cache hit\"\n        );\n        return parsedIdToken as IdTokenEntity;\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken: IdTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = CacheHelpers.generateCredentialKey(idToken);\n\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (\n            !parsedAccessToken ||\n            !CacheHelpers.isAccessTokenEntity(parsedAccessToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getAccessTokenCredential: cache hit\"\n        );\n        return parsedAccessToken as AccessTokenEntity;\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\n        this.logger.trace(\n            \"BrowserCacheManager.setAccessTokenCredential called\"\n        );\n        const accessTokenKey = CacheHelpers.generateCredentialKey(accessToken);\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (\n            !parsedRefreshToken ||\n            !CacheHelpers.isRefreshTokenEntity(parsedRefreshToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getRefreshTokenCredential: cache hit\"\n        );\n        return parsedRefreshToken as RefreshTokenEntity;\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\n        this.logger.trace(\n            \"BrowserCacheManager.setRefreshTokenCredential called\"\n        );\n        const refreshTokenKey =\n            CacheHelpers.generateCredentialKey(refreshToken);\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            !parsedMetadata ||\n            !AppMetadataEntity.isAppMetadataEntity(\n                appMetadataKey,\n                parsedMetadata\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedEntity = this.validateAndParseJson(value);\n        if (\n            !parsedEntity ||\n            !CacheHelpers.isServerTelemetryEntity(\n                serverTelemetryKey,\n                parsedEntity\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return parsedEntity as ServerTelemetryEntity;\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string): AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            parsedMetadata &&\n            AuthorityMetadataEntity.isAuthorityMetadataEntity(\n                key,\n                parsedMetadata\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: cache hit\"\n            );\n            return CacheManager.toObject(\n                new AuthorityMetadataEntity(),\n                parsedMetadata\n            );\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(\n            InMemoryCacheKeys.WRAPPER_VER,\n            wrapperVersion\n        );\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\n            Constants.EMPTY_STRING;\n        const version =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\n            Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountKeyFilters = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) {\n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\"\n            );\n            const activeAccountKeyLocal = this.generateCacheKey(\n                PersistentCacheKeys.ACTIVE_ACCOUNT\n            );\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if (!activeAccountValueLocal) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: No active account found\"\n                );\n                return null;\n            }\n            const activeAccount = this.getAccountInfoFilteredBy({\n                localAccountId: activeAccountValueLocal,\n            });\n            if (activeAccount) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\"\n                );\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\"\n                );\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(\n            activeAccountValueFilters\n        ) as AccountInfo;\n        if (activeAccountValueObj) {\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: Active account filters schema found\"\n            );\n            return this.getAccountInfoFilteredBy({\n                homeAccountId: activeAccountValueObj.homeAccountId,\n                localAccountId: activeAccountValueObj.localAccountId,\n            });\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getActiveAccount: No active account found\"\n        );\n        return null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountKey = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountKeyLocal = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT\n        );\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue: ActiveAccountFilters = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n            };\n            this.browserStorage.setItem(\n                activeAccountKey,\n                JSON.stringify(activeAccountValue)\n            );\n            this.browserStorage.setItem(\n                activeAccountKeyLocal,\n                account.localAccountId\n            );\n        } else {\n            this.logger.verbose(\n                \"setActiveAccount: No account passed, active account not set\"\n            );\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (\n            !parsedThrottlingCache ||\n            !ThrottlingEntity.isThrottlingEntity(\n                throttlingCacheKey,\n                parsedThrottlingCache\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return CacheManager.toObject(\n            new ThrottlingEntity(),\n            parsedThrottlingCache\n        );\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\"\n                );\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (\n                this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage\n            ) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\n                        \"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\"\n                    );\n                    return item;\n                }\n            }\n            this.logger.trace(\n                \"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\"\n            );\n            return null;\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\"\n        );\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(\n        cacheKey: string,\n        value: string,\n        generateKey?: boolean\n    ): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\"\n            );\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key: string): void {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\"\n            );\n            this.clearItemCookie(key);\n        }\n    }\n\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key: string): boolean {\n        return (\n            this.browserStorage.containsKey(key) ||\n            this.temporaryCacheStorage.containsKey(key)\n        );\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys(),\n        ];\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey: string) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if (\n                (this.browserStorage.containsKey(cacheKey) ||\n                    this.temporaryCacheStorage.containsKey(cacheKey)) &&\n                (cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                    cacheKey.indexOf(this.clientId) !== -1)\n            ) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Clears all access tokes that have claims prior to saving the current one\n     * @param performanceClient {IPerformanceClient}\n     * @returns\n     */\n    async clearTokensAndKeysWithClaims(\n        performanceClient: IPerformanceClient\n    ): Promise<void> {\n        performanceClient.addQueueMeasurement(\n            PerformanceEvents.ClearTokensAndKeysWithClaims\n        );\n\n        const tokenKeys = this.getTokenKeys();\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key: string) => {\n            // if the access token has claims in its key, remove the token key and the token\n            const credential = this.getAccessTokenCredential(key);\n            if (\n                credential?.requestedClaimsHash &&\n                key.includes(credential.requestedClaimsHash.toLowerCase())\n            ) {\n                removedAccessTokens.push(this.removeAccessToken(key));\n            }\n        });\n        await Promise.all(removedAccessTokens);\n\n        // warn if any access tokens are removed\n        if (removedAccessTokens.length > 0) {\n            this.logger.warning(\n                `${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`\n            );\n        }\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(\n        cookieName: string,\n        cookieValue: string,\n        expires?: number\n    ): void {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(\n            cookieValue\n        )};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i: number = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(\n                    cookie.substring(name.length, cookie.length)\n                );\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies(): void {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie: string): void => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(\n            today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER\n        );\n        return expr.toUTCString();\n    }\n\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache(): object {\n        return this.browserStorage;\n    }\n\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache(): void {\n        // sets nothing\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (\n                StringUtils.startsWith(key, Constants.CACHE_PREFIX) ||\n                StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)\n            ) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString: string): string {\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.AUTHORITY}.${stateId}`\n        );\n    }\n\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString: string): string {\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`\n        );\n    }\n\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString: string): string {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`\n        );\n    }\n\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState: string): string | null {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(\n        state: string,\n        nonce: string,\n        authorityInstance: string,\n        loginHint: string,\n        account: AccountInfo | null\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n\n        if (account) {\n            const ccsCredential: CcsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n            this.setTemporaryCache(\n                TemporaryCacheKeys.CCS_CREDENTIAL,\n                JSON.stringify(ccsCredential),\n                true\n            );\n        } else if (loginHint) {\n            const ccsCredential: CcsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN,\n            };\n            this.setTemporaryCache(\n                TemporaryCacheKeys.CCS_CREDENTIAL,\n                JSON.stringify(ccsCredential),\n                true\n            );\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state: string): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (state) {\n            this.getKeys().forEach((key) => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n\n            // delete generic interactive request parameters\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID)\n        );\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL)\n        );\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST)\n        );\n        this.setInteractionInProgress(false);\n    }\n\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString: string): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(\n                `BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`\n            );\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\n        this.logger.trace(\n            \"BrowserCacheManager.cleanRequestByInteractionType called\"\n        );\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = extractBrowserRequestState(\n                this.cryptoImpl,\n                stateValue\n            );\n            if (\n                parsedState &&\n                parsedState.interactionType === interactionType\n            ) {\n                this.logger.infoPii(\n                    `BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`\n                );\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest): void {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            encodedValue,\n            true\n        );\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state: string): CommonAuthorizationCodeRequest {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            true\n        );\n        if (!encodedTokenRequest) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noTokenRequestCacheError\n            );\n        }\n\n        let parsedRequest: CommonAuthorizationCodeRequest;\n        try {\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\n        } catch (e) {\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\n            this.logger.error(\n                `Parsing cached token request threw with error: ${e}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n            );\n        }\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n\n        // Get cached authority and use if no authority is cached with request.\n        if (!parsedRequest.authority) {\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noCachedAuthorityError\n                );\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n\n        return parsedRequest;\n    }\n\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest(): NativeTokenRequest | null {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            true\n        );\n        if (!cachedRequest) {\n            this.logger.trace(\n                \"BrowserCacheManager.getCachedNativeRequest: No cached native request found\"\n            );\n            return null;\n        }\n\n        const parsedRequest = this.validateAndParseJson(\n            cachedRequest\n        ) as NativeTokenRequest;\n        if (!parsedRequest) {\n            this.logger.error(\n                \"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\"\n            );\n            return null;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): string | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n\n    setInteractionInProgress(inProgress: boolean): void {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.interactionInProgress\n                );\n            } else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        } else if (\n            !inProgress &&\n            this.getInteractionInProgress() === this.clientId\n        ) {\n            this.removeItem(key);\n        }\n    }\n\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     * @deprecated\n     */\n    getLegacyLoginHint(): string | null {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(\n            PersistentCacheKeys.ADAL_ID_TOKEN\n        );\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(\n            PersistentCacheKeys.ID_TOKEN,\n            true\n        );\n        if (msalIdTokenString) {\n            this.removeItem(\n                this.generateCacheKey(PersistentCacheKeys.ID_TOKEN)\n            );\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const idTokenClaims = AuthToken.extractTokenClaims(\n                cachedIdTokenString,\n                base64Decode\n            );\n            if (idTokenClaims.preferred_username) {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\"\n                );\n                return idTokenClaims.preferred_username;\n            } else if (idTokenClaims.upn) {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\"\n                );\n                return idTokenClaims.upn;\n            } else {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(\n        currentCacheKey: string,\n        credential: ValidCredentialType\n    ): string {\n        const updatedCacheKey = CacheHelpers.generateCredentialKey(credential);\n\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(\n                    `Updated an outdated ${credential.credentialType} cache key`\n                );\n                return updatedCacheKey;\n            } else {\n                this.logger.error(\n                    `Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`\n                );\n            }\n        }\n\n        return currentCacheKey;\n    }\n\n    /**\n     * Returns application id as redirect context during AcquireTokenRedirect flow.\n     */\n    getRedirectRequestContext(): string | null {\n        return this.getTemporaryCache(\n            TemporaryCacheKeys.REDIRECT_CONTEXT,\n            true\n        );\n    }\n\n    /**\n     * Sets application id as the redirect context during AcquireTokenRedirect flow.\n     * @param value\n     */\n    setRedirectRequestContext(value: string): void {\n        this.setTemporaryCache(\n            TemporaryCacheKeys.REDIRECT_CONTEXT,\n            value,\n            true\n        );\n    }\n\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\n            result.account?.homeAccountId,\n            result.account?.environment,\n            result.idToken,\n            this.clientId,\n            result.tenantId\n        );\n\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\n            result.account?.homeAccountId,\n            result.account.environment,\n            result.accessToken,\n            this.clientId,\n            result.tenantId,\n            result.scopes.join(\" \"),\n            result.expiresOn?.getTime() || 0,\n            result.extExpiresOn?.getTime() || 0,\n            base64Decode,\n            undefined, // refreshOn\n            result.tokenType as AuthenticationScheme,\n            undefined, // userAssertionHash\n            request.sshKid,\n            request.claims,\n            claimsHash\n        );\n\n        const cacheRecord = new CacheRecord(\n            undefined,\n            idTokenEntity,\n            accessTokenEntity\n        );\n        return this.saveCacheRecord(cacheRecord);\n    }\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (\n    clientId: string,\n    logger: Logger\n): BrowserCacheManager => {\n    const cacheOptions: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(\n        clientId,\n        cacheOptions,\n        DEFAULT_CRYPTO_IMPLEMENTATION,\n        logger\n    );\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { UrlString } from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, BrowserConstants } from \"./BrowserConstants\";\n\n/**\n * Clears hash from window url.\n */\nexport function clearHash(contentWindow: Window): void {\n    // Office.js sets history.replaceState to null\n    contentWindow.location.hash = \"\";\n    if (typeof contentWindow.history.replaceState === \"function\") {\n        // Full removes \"#\" from url\n        contentWindow.history.replaceState(\n            null,\n            \"\",\n            `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`\n        );\n    }\n}\n\n/**\n * Replaces current hash with hash from provided url\n */\nexport function replaceHash(url: string): void {\n    const urlParts = url.split(\"#\");\n    urlParts.shift(); // Remove part before the hash\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\n}\n\n/**\n * Returns boolean of whether the current window is in an iframe or not.\n */\nexport function isInIframe(): boolean {\n    return window.parent !== window;\n}\n\n/**\n * Returns boolean of whether or not the current window is a popup opened by msal\n */\nexport function isInPopup(): boolean {\n    return (\n        typeof window !== \"undefined\" &&\n        !!window.opener &&\n        window.opener !== window &&\n        typeof window.name === \"string\" &&\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0\n    );\n}\n\n// #endregion\n\n/**\n * Returns current window URL as redirect uri\n */\nexport function getCurrentUri(): string {\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\n}\n\n/**\n * Gets the homepage url for the current window location.\n */\nexport function getHomepage(): string {\n    const currentUrl = new UrlString(window.location.href);\n    const urlComponents = currentUrl.getUrlComponents();\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n}\n\n/**\n * Throws error if we have completed an auth and are\n * attempting another auth request inside an iframe.\n */\nexport function blockReloadInHiddenIframes(): void {\n    const isResponseHash = UrlString.hashContainsKnownProperties(\n        window.location.hash\n    );\n    // return an error if called from the hidden iframe created by the msal js silent calls\n    if (isResponseHash && isInIframe()) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockIframeReload);\n    }\n}\n\n/**\n * Block redirect operations in iframes unless explicitly allowed\n * @param interactionType Interaction type for the request\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n */\nexport function blockRedirectInIframe(\n    interactionType: InteractionType,\n    allowRedirectInIframe: boolean\n): void {\n    const isIframedApp = isInIframe();\n    if (\n        interactionType === InteractionType.Redirect &&\n        isIframedApp &&\n        !allowRedirectInIframe\n    ) {\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n        throw createBrowserAuthError(BrowserAuthErrorCodes.redirectInIframe);\n    }\n}\n\n/**\n * Block redirectUri loaded in popup from calling AcquireToken APIs\n */\nexport function blockAcquireTokenInPopups(): void {\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n    if (isInPopup()) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.blockNestedPopups);\n    }\n}\n\n/**\n * Throws error if token requests are made in non-browser environment\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\n */\nexport function blockNonBrowserEnvironment(\n    isBrowserEnvironment: boolean\n): void {\n    if (!isBrowserEnvironment) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        );\n    }\n}\n\n/**\n * Throws error if initialize hasn't been called\n * @param initialized\n */\nexport function blockAPICallsBeforeInitialize(initialized: boolean): void {\n    if (!initialized) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        );\n    }\n}\n\n/**\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\n * @returns\n */\nexport function preconnect(authority: string): void {\n    const link = document.createElement(\"link\");\n    link.rel = \"preconnect\";\n    link.href = new URL(authority).origin;\n    link.crossOrigin = \"anonymous\";\n    document.head.appendChild(link);\n\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\n    window.setTimeout(() => {\n        try {\n            document.head.removeChild(link);\n        } catch {}\n    }, 10000); // 10s Timeout\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkManager\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport {\n    HeaderNames,\n    ThrottlingConstants,\n    Constants,\n} from \"../utils/Constants\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerError } from \"../error/ServerError\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/** @internal */\nexport class ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(\n            thumbprint\n        )}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint\n    ): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new ServerError(\n                value.errorCodes?.join(\" \") || Constants.EMPTY_STRING,\n                value.errorMessage,\n                value.subError\n            );\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint,\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): void {\n        if (\n            ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)\n        ) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(\n                    parseInt(response.headers[HeaderNames.RETRY_AFTER])\n                ),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        return (\n            response.status === 429 ||\n            (response.status >= 500 && response.status < 600)\n        );\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        if (response.headers) {\n            return (\n                response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300)\n            );\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(\n            Math.min(\n                currentSeconds +\n                    (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n                currentSeconds +\n                    ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n            ) * 1000\n        );\n    }\n\n    static removeThrottle(\n        cacheManager: CacheManager,\n        clientId: string,\n        request: BaseAuthRequest,\n        homeAccountIdentifier?: string\n    ): void {\n        const thumbprint: RequestThumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { AuthError } from \"../error/AuthError\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport type UrlToHttpRequestOptions = {\n    protocol: string;\n    hostname: string;\n    hash: string;\n    search: string;\n    pathname: string;\n    path: string;\n    href: string;\n    port?: number;\n    auth?: string;\n};\n\n/** @internal */\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T extends ServerAuthorizationTokenResponse>(\n        thumbprint: RequestThumbprint,\n        tokenEndpoint: string,\n        options: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(\n                tokenEndpoint,\n                options\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw createClientAuthError(ClientAuthErrorCodes.networkError);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { PromptValue, CodeChallengeMethodValues } from \"../utils/Constants\";\nimport { StringDict } from \"../utils/MsalTypes\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string): void {\n        if (!redirectUri) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.redirectUriEmpty\n            );\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string): void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidPromptValue\n            );\n        }\n    }\n\n    static validateClaims(claims: string): void {\n        try {\n            JSON.parse(claims);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidClaims\n            );\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string): void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256,\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n            );\n        }\n    }\n\n    /**\n     * Removes unnecessary, duplicate, and empty string query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(\n        eQParams: StringDict,\n        queryParams: Map<string, string>\n    ): StringDict {\n        if (!eQParams) {\n            return {};\n        }\n\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((_value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n\n        // remove empty string parameters\n        return Object.fromEntries(\n            Object.entries(eQParams).filter((kv) => kv[1] !== \"\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AADServerParamKeys,\n    Constants,\n    ResponseMode,\n    SSOTypes,\n    CLIENT_INFO,\n    AuthenticationScheme,\n    ClaimsRequestKeys,\n    PasswordGrantConstants,\n    OIDC_DEFAULT_SCOPES,\n    ThrottlingConstants,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringDict } from \"../utils/MsalTypes\";\nimport { RequestValidator } from \"./RequestValidator\";\nimport {\n    ApplicationTelemetry,\n    LibraryInfo,\n} from \"../config/ClientConfiguration\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ClientInfo } from \"../account/ClientInfo\";\n\n/** @internal */\nexport class RequestParameterBuilder {\n    private parameters: Map<string, string>;\n\n    constructor() {\n        this.parameters = new Map<string, string>();\n    }\n\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE,\n            encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\n        );\n    }\n\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE,\n            encodeURIComponent(\n                `${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`\n            )\n        );\n    }\n\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode?: ResponseMode): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_MODE,\n            encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY)\n        );\n    }\n\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker(): void {\n        this.parameters.set(\n            AADServerParamKeys.NATIVE_BROKER,\n            encodeURIComponent(\"1\")\n        );\n    }\n\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(\n        scopes: string[],\n        addOidcScopes: boolean = true,\n        defaultScopes: Array<string> = OIDC_DEFAULT_SCOPES\n    ): void {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (\n            addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")\n        ) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(\n            AADServerParamKeys.SCOPE,\n            encodeURIComponent(scopeSet.printScopes())\n        );\n    }\n\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_ID,\n            encodeURIComponent(clientId)\n        );\n    }\n\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(\n            AADServerParamKeys.REDIRECT_URI,\n            encodeURIComponent(redirectUri)\n        );\n    }\n\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(\n            AADServerParamKeys.POST_LOGOUT_URI,\n            encodeURIComponent(redirectUri)\n        );\n    }\n\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.ID_TOKEN_HINT,\n            encodeURIComponent(idTokenHint)\n        );\n    }\n\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint: string): void {\n        this.parameters.set(\n            SSOTypes.DOMAIN_HINT,\n            encodeURIComponent(domainHint)\n        );\n    }\n\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint: string): void {\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint: string): void {\n        this.parameters.set(\n            HeaderNames.CCS_HEADER,\n            encodeURIComponent(`UPN:${loginHint}`)\n        );\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo: ClientInfo): void {\n        this.parameters.set(\n            HeaderNames.CCS_HEADER,\n            encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`)\n        );\n    }\n\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid: string): void {\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\n    }\n\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\n        const mergedClaims = this.addClientCapabilitiesToClaims(\n            claims,\n            clientCapabilities\n        );\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(\n            AADServerParamKeys.CLAIMS,\n            encodeURIComponent(mergedClaims)\n        );\n    }\n\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_REQUEST_ID,\n            encodeURIComponent(correlationId)\n        );\n    }\n\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_VER,\n            libraryInfo.version\n        );\n        if (libraryInfo.os) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(\n                AADServerParamKeys.X_CLIENT_CPU,\n                libraryInfo.cpu\n            );\n        }\n    }\n\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry: ApplicationTelemetry): void {\n        if (appTelemetry?.appName) {\n            this.parameters.set(\n                AADServerParamKeys.X_APP_NAME,\n                appTelemetry.appName\n            );\n        }\n\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(\n                AADServerParamKeys.X_APP_VER,\n                appTelemetry.appVersion\n            );\n        }\n    }\n\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt: string): void {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(\n            `${AADServerParamKeys.PROMPT}`,\n            encodeURIComponent(prompt)\n        );\n    }\n\n    /**\n     * add state\n     * @param state\n     */\n    addState(state: string): void {\n        if (state) {\n            this.parameters.set(\n                AADServerParamKeys.STATE,\n                encodeURIComponent(state)\n            );\n        }\n    }\n\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce: string): void {\n        this.parameters.set(\n            AADServerParamKeys.NONCE,\n            encodeURIComponent(nonce)\n        );\n    }\n\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        RequestValidator.validateCodeChallengeParams(\n            codeChallenge,\n            codeChallengeMethod\n        );\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(\n                AADServerParamKeys.CODE_CHALLENGE,\n                encodeURIComponent(codeChallenge)\n            );\n            this.parameters.set(\n                AADServerParamKeys.CODE_CHALLENGE_METHOD,\n                encodeURIComponent(codeChallengeMethod)\n            );\n        } else {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        }\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code: string): void {\n        this.parameters.set(\n            AADServerParamKeys.DEVICE_CODE,\n            encodeURIComponent(code)\n        );\n    }\n\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken: string): void {\n        this.parameters.set(\n            AADServerParamKeys.REFRESH_TOKEN,\n            encodeURIComponent(refreshToken)\n        );\n    }\n\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CODE_VERIFIER,\n            encodeURIComponent(codeVerifier)\n        );\n    }\n\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_SECRET,\n            encodeURIComponent(clientSecret)\n        );\n    }\n\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion: string): void {\n        if (clientAssertion) {\n            this.parameters.set(\n                AADServerParamKeys.CLIENT_ASSERTION,\n                encodeURIComponent(clientAssertion)\n            );\n        }\n    }\n\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType: string): void {\n        if (clientAssertionType) {\n            this.parameters.set(\n                AADServerParamKeys.CLIENT_ASSERTION_TYPE,\n                encodeURIComponent(clientAssertionType)\n            );\n        }\n    }\n\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion: string): void {\n        this.parameters.set(\n            AADServerParamKeys.OBO_ASSERTION,\n            encodeURIComponent(oboAssertion)\n        );\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse: string): void {\n        this.parameters.set(\n            AADServerParamKeys.REQUESTED_TOKEN_USE,\n            encodeURIComponent(tokenUse)\n        );\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType: string): void {\n        this.parameters.set(\n            AADServerParamKeys.GRANT_TYPE,\n            encodeURIComponent(grantType)\n        );\n    }\n\n    /**\n     * add client info\n     *\n     */\n    addClientInfo(): void {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams: StringDict): void {\n        const sanitizedEQParams = RequestValidator.sanitizeEQParams(\n            eQParams,\n            this.parameters\n        );\n        Object.keys(sanitizedEQParams).forEach((key) => {\n            this.parameters.set(key, eQParams[key]);\n        });\n    }\n\n    addClientCapabilitiesToClaims(\n        claims?: string,\n        clientCapabilities?: Array<string>\n    ): string {\n        let mergedClaims: object;\n\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        } else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidClaims\n                );\n            }\n        }\n\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][\n                ClaimsRequestKeys.XMS_CC\n            ] = {\n                values: clientCapabilities,\n            };\n        }\n\n        return JSON.stringify(mergedClaims);\n    }\n\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username: string): void {\n        this.parameters.set(\n            PasswordGrantConstants.username,\n            encodeURIComponent(username)\n        );\n    }\n\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password: string): void {\n        this.parameters.set(\n            PasswordGrantConstants.password,\n            encodeURIComponent(password)\n        );\n    }\n\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString: string): void {\n        if (cnfString) {\n            this.parameters.set(\n                AADServerParamKeys.TOKEN_TYPE,\n                AuthenticationScheme.POP\n            );\n            this.parameters.set(\n                AADServerParamKeys.REQ_CNF,\n                encodeURIComponent(cnfString)\n            );\n        }\n    }\n\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString: string): void {\n        if (sshJwkString) {\n            this.parameters.set(\n                AADServerParamKeys.TOKEN_TYPE,\n                AuthenticationScheme.SSH\n            );\n            this.parameters.set(\n                AADServerParamKeys.REQ_CNF,\n                encodeURIComponent(sshJwkString)\n            );\n        }\n    }\n\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_CURR_TELEM,\n            serverTelemetryManager.generateCurrentRequestHeaderValue()\n        );\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_LAST_TELEM,\n            serverTelemetryManager.generateLastRequestHeaderValue()\n        );\n    }\n\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling(): void {\n        this.parameters.set(\n            AADServerParamKeys.X_MS_LIB_CAPABILITY,\n            ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE\n        );\n    }\n\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.LOGOUT_HINT,\n            encodeURIComponent(logoutHint)\n        );\n    }\n\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString(): string {\n        const queryParameterArray: Array<string> = new Array<string>();\n\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n\n        return queryParameterArray.join(\"&\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority, formatAuthorityUri } from \"./Authority\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\nimport { Logger } from \"../logger/Logger\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/** @internal */\nexport class AuthorityFactory {\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(\n        authorityUri: string,\n        networkClient: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): Promise<Authority> {\n        performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            correlationId\n        );\n        const authorityUriFinal = Authority.transformCIAMAuthority(\n            formatAuthorityUri(authorityUri)\n        );\n\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority: Authority =\n            AuthorityFactory.createInstance(\n                authorityUriFinal,\n                networkClient,\n                cacheManager,\n                authorityOptions,\n                logger,\n                performanceClient,\n                correlationId\n            );\n\n        try {\n            await invokeAsync(\n                acquireTokenAuthority.resolveEndpointsAsync.bind(\n                    acquireTokenAuthority\n                ),\n                PerformanceEvents.AuthorityResolveEndpointsAsync,\n                logger,\n                performanceClient,\n                correlationId\n            )();\n            return acquireTokenAuthority;\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(\n        authorityUrl: string,\n        networkInterface: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): Authority {\n        // Throw error if authority url is empty\n        if (!authorityUrl) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlEmptyError\n            );\n        }\n\n        return new Authority(\n            authorityUrl,\n            networkInterface,\n            cacheManager,\n            authorityOptions,\n            logger,\n            performanceClient,\n            correlationId\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    buildClientConfiguration,\n    CommonClientConfiguration,\n} from \"../config/ClientConfiguration\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkManager, NetworkResponse } from \"../network/NetworkManager\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Authority } from \"../authority/Authority\";\nimport { Logger } from \"../logger/Logger\";\nimport { Constants, HeaderNames } from \"../utils/Constants\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { version, name } from \"../packageMetadata\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { AuthorityFactory } from \"../authority/AuthorityFactory\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Network Manager\n    protected networkManager: NetworkManager;\n\n    // Default authority object\n    public authority: Authority;\n\n    // Performance telemetry client\n    protected performanceClient?: IPerformanceClient;\n\n    protected constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(\n            this.networkClient,\n            this.cacheManager\n        );\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(\n        ccsCred?: CcsCredential\n    ): Record<string, string> {\n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        headers[\n                            HeaderNames.CCS_HEADER\n                        ] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[\n                        HeaderNames.CCS_HEADER\n                    ] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(\n        tokenEndpoint: string,\n        queryString: string,\n        headers: Record<string, string>,\n        thumbprint: RequestThumbprint,\n        correlationId: string,\n        queuedEvent?: string\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        if (queuedEvent) {\n            this.performanceClient?.addQueueMeasurement(\n                queuedEvent,\n                correlationId\n            );\n        }\n\n        const response =\n            await this.networkManager.sendPostRequest<ServerAuthorizationTokenResponse>(\n                thumbprint,\n                tokenEndpoint,\n                { body: queryString, headers: headers }\n            );\n        this.performanceClient?.addFields(\n            {\n                refreshTokenSize: response.body.refresh_token?.length || 0,\n                httpVerToken:\n                    response.headers?.[HeaderNames.X_MS_HTTP_VERSION] || \"\",\n            },\n            correlationId\n        );\n\n        if (\n            this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429\n        ) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    async updateAuthority(\n        cloudInstanceHostname: string,\n        correlationId: string\n    ): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.UpdateTokenEndpointAuthority,\n            correlationId\n        );\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\n        const cloudInstanceAuthority =\n            await AuthorityFactory.createDiscoveredInstance(\n                cloudInstanceAuthorityUri,\n                this.networkClient,\n                this.cacheManager,\n                this.authority.options,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            );\n        this.authority = cloudInstanceAuthority;\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request: BaseAuthRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenQueryParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { Logger } from \"../logger/Logger\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nexport type ReqCnfData = {\n    kid: string;\n    reqCnfString: string;\n    reqCnfHash: string;\n};\n\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n} as const;\nexport type KeyLocation = (typeof KeyLocation)[keyof typeof KeyLocation];\n\n/** @internal */\nexport class PopTokenGenerator {\n    private cryptoUtils: ICrypto;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(cryptoUtils: ICrypto, performanceClient?: IPerformanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(\n        request: SignedHttpRequestParameters,\n        logger: Logger\n    ): Promise<ReqCnfData> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateCnf,\n            request.correlationId\n        );\n\n        const reqCnf = await invokeAsync(\n            this.generateKid.bind(this),\n            PerformanceEvents.PopTokenGenerateCnf,\n            logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const reqCnfString: string = this.cryptoUtils.base64Encode(\n            JSON.stringify(reqCnf)\n        );\n\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString),\n        };\n    }\n\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateKid,\n            request.correlationId\n        );\n\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(\n            request\n        );\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(\n        accessToken: string,\n        keyId: string,\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        return this.signPayload(accessToken, keyId, request);\n    }\n\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(\n        payload: string,\n        keyId: string,\n        request: SignedHttpRequestParameters,\n        claims?: object\n    ): Promise<string> {\n        // Deconstruct request to extract SHR parameters\n        const {\n            resourceRequestMethod,\n            resourceRequestUri,\n            shrClaims,\n            shrNonce,\n            shrOptions,\n        } = request;\n\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt(\n            {\n                at: payload,\n                ts: TimeUtils.nowSeconds(),\n                m: resourceRequestMethod?.toUpperCase(),\n                u: resourceUrlComponents?.HostNameAndPort,\n                nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n                p: resourceUrlComponents?.AbsolutePath,\n                q: resourceUrlComponents?.QueryString\n                    ? [[], resourceUrlComponents.QueryString]\n                    : undefined,\n                client_claims: shrClaims || undefined,\n                ...claims,\n            },\n            keyId,\n            shrOptions,\n            request.correlationId\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse\";\nimport { Logger } from \"../logger/Logger\";\nimport { ServerError } from \"../error/ServerError\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthenticationResult } from \"./AuthenticationResult\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity\";\nimport { Authority } from \"../authority/Authority\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity\";\nimport {\n    InteractionRequiredAuthError,\n    isInteractionRequiredError,\n} from \"../error/InteractionRequiredAuthError\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils\";\nimport {\n    AuthenticationScheme,\n    Constants,\n    THE_FAMILY_ID,\n    HttpStatus,\n} from \"../utils/Constants\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport * as CacheHelpers from \"../cache/utils/CacheHelpers\";\n\n/**\n * Class that handles response parsing.\n * @internal\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(\n        clientId: string,\n        cacheStorage: CacheManager,\n        cryptoObj: ICrypto,\n        logger: Logger,\n        serializableCache: ISerializableTokenCache | null,\n        persistencePlugin: ICachePlugin | null,\n        performanceClient?: IPerformanceClient\n    ) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param requestState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(\n        serverResponse: ServerAuthorizationCodeResponse,\n        requestState: string\n    ): void {\n        if (!serverResponse.state || !requestState) {\n            throw serverResponse.state\n                ? createClientAuthError(\n                      ClientAuthErrorCodes.stateNotFound,\n                      \"Cached State\"\n                  )\n                : createClientAuthError(\n                      ClientAuthErrorCodes.stateNotFound,\n                      \"Server State\"\n                  );\n        }\n\n        let decodedServerResponseState: string;\n        let decodedRequestState: string;\n\n        try {\n            decodedServerResponseState = decodeURIComponent(\n                serverResponse.state\n            );\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidState,\n                serverResponse.state\n            );\n        }\n\n        try {\n            decodedRequestState = decodeURIComponent(requestState);\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidState,\n                serverResponse.state\n            );\n        }\n\n        if (decodedServerResponseState !== decodedRequestState) {\n            throw createClientAuthError(ClientAuthErrorCodes.stateMismatch);\n        }\n\n        // Check for error\n        if (\n            serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror\n        ) {\n            if (\n                isInteractionRequiredError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponse.error || \"\",\n                    serverResponse.error_description,\n                    serverResponse.suberror,\n                    serverResponse.timestamp || \"\",\n                    serverResponse.trace_id || \"\",\n                    serverResponse.correlation_id || \"\",\n                    serverResponse.claims || \"\"\n                );\n            }\n\n            throw new ServerError(\n                serverResponse.error || \"\",\n                serverResponse.error_description,\n                serverResponse.suberror\n            );\n        }\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(\n        serverResponse: ServerAuthorizationTokenResponse,\n        refreshAccessToken?: boolean\n    ): void {\n        // Check for error\n        if (\n            serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror\n        ) {\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            const serverError = new ServerError(\n                serverResponse.error,\n                errString,\n                serverResponse.suberror\n            );\n\n            // check if 500 error\n            if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            } else if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n\n            if (\n                isInteractionRequiredError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror,\n                    serverResponse.timestamp || Constants.EMPTY_STRING,\n                    serverResponse.trace_id || Constants.EMPTY_STRING,\n                    serverResponse.correlation_id || Constants.EMPTY_STRING,\n                    serverResponse.claims || Constants.EMPTY_STRING\n                );\n            }\n\n            throw serverError;\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        userAssertionHash?: string,\n        handlingRefreshTokenResponse?: boolean,\n        forceCacheRefreshTokenResponse?: boolean,\n        serverRequestId?: string\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.HandleServerTokenResponse,\n            serverTokenResponse.correlation_id\n        );\n\n        // create an idToken object (not entity)\n        let idTokenClaims: TokenClaims | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = extractTokenClaims(\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.cryptoObj.base64Decode\n            );\n\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.nonceMismatch\n                    );\n                }\n            }\n\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.authTimeNotFound\n                    );\n                }\n\n                checkMaxAge(authTime, request.maxAge);\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            serverTokenResponse.client_info || Constants.EMPTY_STRING,\n            authority.authorityType,\n            this.logger,\n            this.cryptoObj,\n            idTokenClaims\n        );\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(\n                this.cryptoObj,\n                authCodePayload.state\n            );\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(\n            serverTokenResponse,\n            authority,\n            reqTimestamp,\n            request,\n            idTokenClaims,\n            userAssertionHash,\n            authCodePayload\n        );\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling beforeCacheAccess\"\n                );\n                cacheContext = new TokenCacheContext(\n                    this.serializableCache,\n                    true\n                );\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (\n                handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account\n            ) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\n                        \"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\"\n                    );\n                    return ResponseHandler.generateAuthenticationResult(\n                        this.cryptoObj,\n                        authority,\n                        cacheRecord,\n                        false,\n                        request,\n                        idTokenClaims,\n                        requestStateObj,\n                        undefined,\n                        serverRequestId\n                    );\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(\n                cacheRecord,\n                request.storeInCache\n            );\n        } finally {\n            if (\n                this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext\n            ) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling afterCacheAccess\"\n                );\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(\n            this.cryptoObj,\n            authority,\n            cacheRecord,\n            false,\n            request,\n            idTokenClaims,\n            requestStateObj,\n            serverTokenResponse,\n            serverRequestId\n        );\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        userAssertionHash?: string,\n        authCodePayload?: AuthorizationCodePayload\n    ): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = CacheHelpers.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token,\n                this.clientId,\n                idTokenClaims.tid || \"\"\n            );\n\n            cachedAccount = AccountEntity.createAccount(\n                {\n                    homeAccountId: this.homeAccountIdentifier,\n                    idTokenClaims: idTokenClaims,\n                    clientInfo: serverTokenResponse.client_info,\n                    cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n                    msGraphHost: authCodePayload?.msgraph_host,\n                },\n                authority\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? ScopeSet.fromString(serverTokenResponse.scope)\n                : new ScopeSet(request.scopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number =\n                (typeof serverTokenResponse.expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.expires_in, 10)\n                    : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number =\n                (typeof serverTokenResponse.ext_expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                    : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined =\n                (typeof serverTokenResponse.refresh_in === \"string\"\n                    ? parseInt(serverTokenResponse.refresh_in, 10)\n                    : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds =\n                tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds =\n                refreshIn && refreshIn > 0\n                    ? reqTimestamp + refreshIn\n                    : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = CacheHelpers.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token,\n                this.clientId,\n                idTokenClaims?.tid || authority.tenant,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj.base64Decode,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                userAssertionHash,\n                serverTokenResponse.key_id,\n                request.claims,\n                request.requestedClaimsHash\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (serverTokenResponse.refresh_token) {\n            cachedRefreshToken = CacheHelpers.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token,\n                this.clientId,\n                serverTokenResponse.foci,\n                userAssertionHash\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(\n                this.clientId,\n                env,\n                serverTokenResponse.foci\n            );\n        }\n\n        return new CacheRecord(\n            cachedAccount,\n            cachedIdToken,\n            cachedAccessToken,\n            cachedRefreshToken,\n            cachedAppMetadata\n        );\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto,\n        authority: Authority,\n        cacheRecord: CacheRecord,\n        fromTokenCache: boolean,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        requestState?: RequestStateObject,\n        serverTokenResponse?: ServerAuthorizationTokenResponse,\n        requestId?: string\n    ): Promise<AuthenticationResult> {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let refreshOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            if (\n                cacheRecord.accessToken.tokenType === AuthenticationScheme.POP\n            ) {\n                const popTokenGenerator: PopTokenGenerator =\n                    new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n\n                if (!keyId) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.keyIdMissing\n                    );\n                }\n\n                accessToken = await popTokenGenerator.signPopToken(\n                    secret,\n                    keyId,\n                    request\n                );\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            expiresOn = new Date(\n                Number(cacheRecord.accessToken.expiresOn) * 1000\n            );\n            extExpiresOn = new Date(\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\n            );\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = new Date(\n                    Number(cacheRecord.accessToken.refreshOn) * 1000\n                );\n            }\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\n                    ? THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n\n        const accountInfo: AccountInfo | null = cacheRecord.account\n            ? {\n                  ...cacheRecord.account.getAccountInfo(),\n                  idTokenClaims,\n              }\n            : null;\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountInfo,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType:\n                cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : Constants.EMPTY_STRING,\n            cloudGraphHostName:\n                cacheRecord.account?.cloudGraphHostName ||\n                Constants.EMPTY_STRING,\n            msGraphHost:\n                cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    PromptValue,\n    Separators,\n    AADServerParamKeys,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport {\n    buildClientInfoFromHomeAccountId,\n    buildClientInfo,\n} from \"../account/ClientInfo\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { RequestValidator } from \"../request/RequestValidator\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nexport class AuthorizationCodeClient extends BaseClient {\n    // Flag to indicate if client is for hybrid spa auth code redemption\n    protected includeRedirectUri: boolean = true;\n    private oidcDefaultScopes;\n\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.GetAuthCodeUrl,\n            request.correlationId\n        );\n\n        const queryString = await invokeAsync(\n            this.createAuthCodeUrlQueryString.bind(this),\n            PerformanceEvents.AuthClientCreateQueryString,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        return UrlString.appendQueryString(\n            this.authority.authorizationEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(\n        request: CommonAuthorizationCodeRequest,\n        authCodePayload?: AuthorizationCodePayload\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientAcquireToken,\n            request.correlationId\n        );\n\n        if (!request.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.requestCannotBeMade\n            );\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authority, request);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin,\n            this.performanceClient\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            authCodePayload,\n            undefined,\n            undefined,\n            undefined,\n            requestId\n        );\n    }\n\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(\n        serverParams: ServerAuthorizationCodeResponse,\n        cachedState: string\n    ): AuthorizationCodePayload {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            null,\n            null\n        );\n\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(\n            serverParams,\n            cachedState\n        );\n\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n            );\n        }\n\n        return serverParams as AuthorizationCodePayload;\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.logoutRequestEmpty\n            );\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI\n        return UrlString.appendQueryString(\n            this.authority.endSessionEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(\n        authority: Authority,\n        request: CommonAuthorizationCodeRequest\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils\n                );\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            ccsCredential || request.ccsCredential\n        );\n\n        const thumbprint: RequestThumbprint = {\n            clientId:\n                request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            endpoint,\n            requestBody,\n            headers,\n            thumbprint,\n            request.correlationId,\n            PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint\n        );\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonAuthorizationCodeRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        } else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(\n            request.scopes,\n            true,\n            this.oidcDefaultScopes\n        );\n\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(\n            this.config.telemetry.application\n        );\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion =\n                this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(\n                clientAssertion.assertionType\n            );\n        }\n\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n\n            const reqCnfData = await invokeAsync(\n                popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                PerformanceEvents.PopTokenGenerateCnf,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        const correlationId =\n            request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils\n                );\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenBodyParameters\n            );\n        }\n\n        // Add hybrid spa parameters if not already provided\n        if (\n            request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[\n                    AADServerParamKeys.RETURN_SPA_CODE\n                ])\n        ) {\n            parameterBuilder.addExtraQueryParameters({\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    private async createAuthCodeUrlQueryString(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateQueryString,\n            request.correlationId\n        );\n\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.extraQueryParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // generate the correlationId if not set by the user and add\n        const correlationId =\n            request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!isOidcProtocolMode(this.config)) {\n            parameterBuilder.addApplicationTelemetry(\n                this.config.telemetry.application\n            );\n        }\n\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(\n                request.codeChallenge,\n                request.codeChallengeMethod\n            );\n        }\n\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\n                    \"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\"\n                );\n                parameterBuilder.addSid(request.sid);\n            } else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                const accountLoginHintClaim = this.extractLoginHint(\n                    request.account\n                );\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: login_hint claim present on account\"\n                    );\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                } else if (accountSid && request.prompt === PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\"\n                    );\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                } else if (request.loginHint) {\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Adding login_hint from request\"\n                    );\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                } else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Adding login_hint from account\"\n                    );\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                }\n            } else if (request.loginHint) {\n                this.logger.verbose(\n                    \"createAuthCodeUrlQueryString: No account, adding login_hint from request\"\n                );\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        } else {\n            this.logger.verbose(\n                \"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\"\n            );\n        }\n\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (\n            request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.extraQueryParameters\n            );\n        }\n\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(\n                    this.cryptoUtils\n                );\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, this.logger);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(\n        request: CommonEndSessionRequest\n    ): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(\n                request.postLogoutRedirectUri\n            );\n        }\n\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.extraQueryParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    private extractAccountSid(account: AccountInfo): string | null {\n        return account.idTokenClaims?.sid || null;\n    }\n\n    private extractLoginHint(account: AccountInfo): string | null {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n    CacheOutcome,\n    Constants,\n    RegionDiscoverySources,\n    RegionDiscoveryOutcomes,\n} from \"../../utils/Constants\";\nimport { CacheManager } from \"../../cache/CacheManager\";\nimport { AuthError } from \"../../error/AuthError\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata\";\n\n/** @internal */\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n    constructor(\n        telemetryRequest: ServerTelemetryRequest,\n        cacheManager: CacheManager\n    ) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey =\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\n            Separators.CACHE_KEY_SEPARATOR +\n            telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow =\n            maxErrors < errorCount\n                ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n                : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: unknown): void {\n        const lastRequests = this.getLastRequests();\n        if (\n            lastRequests.errors.length >=\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS\n        ) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                } else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                } else {\n                    lastRequests.errors.push(error.toString());\n                }\n            } else {\n                lastRequests.errors.push(error.toString());\n            }\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = {\n            failedRequests: [],\n            errors: [],\n            cacheHits: 0,\n        };\n        const lastRequests = this.cacheManager.getServerTelemetry(\n            this.telemetryCacheKey\n        ) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed =\n            ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity: ServerTelemetryEntity = {\n                failedRequests: lastRequests.failedRequests.slice(\n                    numErrorsFlushed * 2\n                ), // failedRequests contains 2 items for each error\n                errors: lastRequests.errors.slice(numErrorsFlushed),\n                cacheHits: 0,\n            };\n\n            this.cacheManager.setServerTelemetry(\n                this.telemetryCacheKey,\n                serverTelemEntity\n            );\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(\n        serverTelemetryEntity: ServerTelemetryEntity\n    ): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId =\n                serverTelemetryEntity.failedRequests[2 * i] ||\n                Constants.EMPTY_STRING;\n            const correlationId =\n                serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                Constants.EMPTY_STRING;\n            const errorCode =\n                serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                correlationId.toString().length +\n                errorCode.length +\n                3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(\n            this.regionOutcome || Constants.EMPTY_STRING\n        );\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    INetworkModule,\n    Logger,\n    AccountInfo,\n    AccountEntity,\n    BaseAuthRequest,\n    AuthenticationScheme,\n    UrlString,\n    ServerTelemetryManager,\n    ServerTelemetryRequest,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    Authority,\n    AuthorityOptions,\n    AuthorityFactory,\n    IPerformanceClient,\n    PerformanceEvents,\n    StringUtils,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport abstract class BaseInteractionClient {\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected navigationClient: INavigationClient;\n    protected nativeMessageHandler: NativeMessageHandler | undefined;\n    protected correlationId: string;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || createNewGuid();\n        this.logger = logger.clone(\n            BrowserConstants.MSAL_SKU,\n            version,\n            this.correlationId\n        );\n        this.performanceClient = performanceClient;\n    }\n\n    abstract acquireToken(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult | void>;\n\n    abstract logout(\n        request: EndSessionRequest | ClearCacheRequest | undefined\n    ): Promise<void>;\n\n    protected async clearCacheOnLogout(\n        account?: AccountInfo | null\n    ): Promise<void> {\n        if (account) {\n            if (\n                AccountEntity.accountInfoIsEqual(\n                    account,\n                    this.browserStorage.getActiveAccount(),\n                    false\n                )\n            ) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(\n                    AccountEntity.generateAccountCacheKey(account)\n                );\n                this.logger.verbose(\n                    \"Cleared cache items belonging to the account provided in the logout request.\"\n                );\n            } catch (error) {\n                this.logger.error(\n                    \"Account provided in logout request was not found. Local cache unchanged.\"\n                );\n            }\n        } else {\n            try {\n                this.logger.verbose(\n                    \"No account provided in logout request, clearing all cache items.\",\n                    this.correlationId\n                );\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            } catch (e) {\n                this.logger.error(\n                    \"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\"\n                );\n            }\n        }\n    }\n\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    protected async initializeBaseRequest(\n        request: Partial<BaseAuthRequest>,\n        account?: AccountInfo\n    ): Promise<BaseAuthRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.InitializeBaseRequest,\n            this.correlationId\n        );\n        const authority = request.authority || this.config.auth.authority;\n\n        if (account) {\n            await this.validateRequestAuthority(authority, account);\n        }\n\n        const scopes = [...((request && request.scopes) || [])];\n\n        const validatedRequest: BaseAuthRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes,\n        };\n\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose(\n                'Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request'\n            );\n        } else {\n            if (\n                validatedRequest.authenticationScheme ===\n                AuthenticationScheme.SSH\n            ) {\n                if (!request.sshJwk) {\n                    throw createClientConfigurationError(\n                        ClientConfigurationErrorCodes.missingSshJwk\n                    );\n                }\n                if (!request.sshKid) {\n                    throw createClientConfigurationError(\n                        ClientConfigurationErrorCodes.missingSshKid\n                    );\n                }\n            }\n            this.logger.verbose(\n                `Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`\n            );\n        }\n\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\n        if (\n            this.config.cache.claimsBasedCachingEnabled &&\n            request.claims &&\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n            !StringUtils.isEmptyObj(request.claims)\n        ) {\n            validatedRequest.requestedClaimsHash =\n                await this.browserCrypto.hashString(request.claims);\n        }\n\n        return validatedRequest;\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri =\n            requestRedirectUri ||\n            this.config.auth.redirectUri ||\n            BrowserUtils.getCurrentUri();\n        return UrlString.getAbsoluteUrl(\n            redirectUri,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n\n    /*\n     * If authority provided in the request does not match environment/authority specified\n     * in the account or MSAL config, we throw an error.\n     */\n    async validateRequestAuthority(\n        authority: string,\n        account: AccountInfo\n    ): Promise<void> {\n        const discoveredAuthority = await this.getDiscoveredAuthority(\n            authority\n        );\n\n        if (!discoveredAuthority.isAlias(account.environment)) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityMismatch\n            );\n        }\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(\n        apiId: number,\n        forceRefresh?: boolean\n    ): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n\n        return new ServerTelemetryManager(\n            telemetryPayload,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     */\n    protected async getDiscoveredAuthority(\n        requestAuthority?: string\n    ): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n        };\n\n        if (requestAuthority) {\n            this.logger.verbose(\n                \"Creating discovered authority with request authority\"\n            );\n            return await AuthorityFactory.createDiscoveredInstance(\n                requestAuthority,\n                this.config.system.networkClient,\n                this.browserStorage,\n                authorityOptions,\n                this.logger\n            );\n        }\n\n        this.logger.verbose(\n            \"Creating discovered authority with configured authority\"\n        );\n        return await AuthorityFactory.createDiscoveredInstance(\n            this.config.auth.authority,\n            this.config.system.networkClient,\n            this.browserStorage,\n            authorityOptions,\n            this.logger\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ServerTelemetryManager,\n    CommonAuthorizationCodeRequest,\n    Constants,\n    AuthorizationCodeClient,\n    ClientConfiguration,\n    AuthorityOptions,\n    Authority,\n    AuthorityFactory,\n    UrlString,\n    CommonEndSessionRequest,\n    ProtocolUtils,\n    ResponseMode,\n    IdTokenClaims,\n    AccountInfo,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n    BaseAuthRequest,\n} from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserStateObject } from \"../utils/BrowserProtocolUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    protected async initializeAuthorizationCodeRequest(\n        request: AuthorizationUrlRequest\n    ): Promise<CommonAuthorizationCodeRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n            this.correlationId\n        );\n        const generatedPkceParams = await invokeAsync(\n            generatePkceCodes,\n            PerformanceEvents.GeneratePkceCodes,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(this.performanceClient, this.logger, this.correlationId);\n\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier,\n        };\n\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n\n        return authCodeRequest;\n    }\n\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(\n        logoutRequest?: EndSessionRequest\n    ): CommonEndSessionRequest {\n        this.logger.verbose(\n            \"initializeLogoutRequest called\",\n            logoutRequest?.correlationId\n        );\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.correlationId || createNewGuid(),\n            ...logoutRequest,\n        };\n\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(\n                        logoutRequest.account\n                    );\n                    if (logoutHint) {\n                        this.logger.verbose(\n                            \"Setting logoutHint to login_hint ID Token Claim value for the account provided\"\n                        );\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                } else {\n                    this.logger.verbose(\n                        \"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\"\n                    );\n                }\n            } else {\n                this.logger.verbose(\n                    \"logoutHint has already been set in logoutRequest\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"logoutHint will not be set since no logout request was configured\"\n            );\n        }\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to uri set on logout request\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        logoutRequest.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\n                    \"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\",\n                    validLogoutRequest.correlationId\n                );\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to configured uri\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        this.config.auth.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to current page\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        BrowserUtils.getCurrentUri(),\n                        BrowserUtils.getCurrentUri()\n                    );\n            }\n        } else {\n            this.logger.verbose(\n                \"postLogoutRedirectUri passed as null, not setting post logout redirect uri\",\n                validLogoutRequest.correlationId\n            );\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    protected getLogoutHintFromIdTokenClaims(\n        account: AccountInfo\n    ): string | null {\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            } else {\n                this.logger.verbose(\n                    \"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\"\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createAuthCodeClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        requestAzureCloudOptions?: AzureCloudOptions\n    ): Promise<AuthorizationCodeClient> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.correlationId\n        );\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new AuthorizationCodeClient(\n            clientConfig,\n            this.performanceClient\n        );\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getClientConfiguration(\n        serverTelemetryManager: ServerTelemetryManager,\n        requestAuthority?: string,\n        requestAzureCloudOptions?: AzureCloudOptions\n    ): Promise<ClientConfiguration> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.correlationId\n        );\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(requestAuthority, requestAzureCloudOptions);\n        const logger = this.config.system.loggerOptions;\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds:\n                    this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled:\n                    this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(\n        requestAuthority?: string,\n        requestAzureCloudOptions?: AzureCloudOptions\n    ): Promise<Authority> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.correlationId\n        );\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache:\n                this.config.auth.skipAuthorityMetadataCache,\n        };\n\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority\n            ? requestAuthority\n            : this.config.auth.authority;\n\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority(\n            userAuthority,\n            requestAzureCloudOptions || this.config.auth.azureCloudOptions\n        );\n        return await invokeAsync(\n            AuthorityFactory.createDiscoveredInstance.bind(AuthorityFactory),\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            builtAuthority,\n            this.config.system.networkClient,\n            this.browserStorage,\n            authorityOptions,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        );\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected async initializeAuthorizationRequest(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        interactionType: InteractionType\n    ): Promise<AuthorizationUrlRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.correlationId\n        );\n\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType,\n        };\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state) || Constants.EMPTY_STRING,\n            browserState\n        );\n\n        const baseRequest: BaseAuthRequest = await invokeAsync(\n            this.initializeBaseRequest.bind(this),\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request);\n\n        const validatedRequest: AuthorizationUrlRequest = {\n            ...baseRequest,\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType as ResponseMode,\n        };\n\n        const account =\n            request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\n                \"Setting validated request account\",\n                this.correlationId\n            );\n            this.logger.verbosePii(\n                `Setting validated request account: ${account.homeAccountId}`,\n                this.correlationId\n            );\n            validatedRequest.account = account;\n        }\n\n        // Check for ADAL/MSAL v1 SSO\n        if (!validatedRequest.loginHint && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthError,\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"./BrowserAuthError\";\n\nimport * as NativeAuthErrorCodes from \"./NativeAuthErrorCodes\";\nimport * as NativeStatusCodes from \"../broker/nativeBroker/NativeStatusCodes\";\nexport { NativeAuthErrorCodes };\n\nexport type OSError = {\n    error?: number;\n    protocol_error?: string;\n    properties?: object;\n    status?: string;\n    retryable?: boolean;\n};\n\nconst INVALID_METHOD_ERROR = -2147186943;\n\nexport const NativeAuthErrorMessages = {\n    [NativeAuthErrorCodes.userSwitch]:\n        \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description?: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n}\n\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nexport function isFatalNativeAuthError(error: NativeAuthError): boolean {\n    if (\n        error.ext &&\n        error.ext.status &&\n        (error.ext.status === NativeStatusCodes.PERSISTENT_ERROR ||\n            error.ext.status === NativeStatusCodes.DISABLED)\n    ) {\n        return true;\n    }\n\n    if (\n        error.ext &&\n        error.ext.error &&\n        error.ext.error === INVALID_METHOD_ERROR\n    ) {\n        return true;\n    }\n\n    switch (error.errorCode) {\n        case NativeAuthErrorCodes.contentError:\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nexport function createNativeAuthError(\n    code: string,\n    description?: string,\n    ext?: OSError\n): AuthError {\n    if (ext && ext.status) {\n        switch (ext.status) {\n            case NativeStatusCodes.ACCOUNT_UNAVAILABLE:\n                return createInteractionRequiredAuthError(\n                    InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n                );\n            case NativeStatusCodes.USER_INTERACTION_REQUIRED:\n                return new InteractionRequiredAuthError(code, description);\n            case NativeStatusCodes.USER_CANCEL:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            case NativeStatusCodes.NO_NETWORK:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n        }\n    }\n\n    return new NativeAuthError(\n        code,\n        NativeAuthErrorMessages[code] || description,\n        ext\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Status Codes that can be thrown by WAM\nexport const USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\nexport const USER_CANCEL = \"USER_CANCEL\";\nexport const NO_NETWORK = \"NO_NETWORK\";\nexport const TRANSIENT_ERROR = \"TRANSIENT_ERROR\";\nexport const PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\nexport const DISABLED = \"DISABLED\";\nexport const ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration\";\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    Errors,\n    HeaderNames,\n    AADServerParamKeys,\n} from \"../utils/Constants\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ServerError } from \"../error/ServerError\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport {\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"../error/InteractionRequiredAuthError\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { invoke, invokeAsync } from \"../utils/FunctionWrappers\";\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nexport class RefreshTokenClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n    public async acquireToken(\n        request: CommonRefreshTokenRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireToken,\n            request.correlationId\n        );\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, this.authority);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true,\n            request.forceCache,\n            requestId\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.tokenRequestEmpty\n            );\n        }\n\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            request.correlationId\n        );\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(\n            request.account.environment\n        );\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return invokeAsync(\n                    this.acquireTokenWithCachedRefreshToken.bind(this),\n                    PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, true);\n            } catch (e) {\n                const noFamilyRTInCache =\n                    e instanceof InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        InteractionRequiredAuthErrorCodes.noTokensFound;\n                const clientMismatchErrorWithFamilyRT =\n                    e instanceof ServerError &&\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return invokeAsync(\n                        this.acquireTokenWithCachedRefreshToken.bind(this),\n                        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        request.correlationId\n                    )(request, false);\n                    // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return invokeAsync(\n            this.acquireTokenWithCachedRefreshToken.bind(this),\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(\n        request: CommonSilentFlowRequest,\n        foci: boolean\n    ) {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            request.correlationId\n        );\n\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = invoke(\n            this.cacheManager.getRefreshToken.bind(this.cacheManager),\n            PerformanceEvents.CacheManagerGetRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            request.account,\n            foci,\n            undefined,\n            this.performanceClient,\n            request.correlationId\n        );\n\n        if (!refreshToken) {\n            throw createInteractionRequiredAuthError(\n                InteractionRequiredAuthErrorCodes.noTokensFound\n            );\n        }\n        // attach cached RT size to the current measurement\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme:\n                request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n\n        return invokeAsync(\n            this.acquireToken.bind(this),\n            PerformanceEvents.RefreshTokenClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(refreshTokenRequest);\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(\n        request: CommonRefreshTokenRequest,\n        authority: Authority\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            request.ccsCredential\n        );\n        const thumbprint: RequestThumbprint = {\n            clientId:\n                request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            endpoint,\n            requestBody,\n            headers,\n            thumbprint,\n            request.correlationId,\n            PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint\n        );\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonRefreshTokenRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const correlationId = request.correlationId;\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        if (request.redirectUri) {\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        parameterBuilder.addScopes(\n            request.scopes,\n            true,\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes\n        );\n\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n\n        parameterBuilder.addClientInfo();\n\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(\n            this.config.telemetry.application\n        );\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        parameterBuilder.addCorrelationId(correlationId);\n\n        parameterBuilder.addRefreshToken(request.refreshToken);\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion =\n                this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(\n                clientAssertion.assertionType\n            );\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n            const reqCnfData = await invokeAsync(\n                popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                PerformanceEvents.PopTokenGenerateCnf,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (\n            this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential\n        ) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.ccsCredential.credential\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(\n                        request.ccsCredential.credential\n                    );\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenBodyParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { RefreshTokenClient } from \"./RefreshTokenClient\";\nimport {\n    ClientAuthError,\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheOutcome } from \"../utils/Constants\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/** @internal */\nexport class SilentFlowClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        try {\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken(\n                request\n            );\n\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\n                    \"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\"\n                );\n\n                // refresh the access token in the background\n                const refreshTokenClient = new RefreshTokenClient(\n                    this.config,\n                    this.performanceClient\n                );\n\n                refreshTokenClient\n                    .acquireTokenByRefreshToken(request)\n                    .catch(() => {\n                        // do nothing, this is running in the background and no action is to be taken upon success or failure\n                    });\n            }\n\n            // return the cached token\n            return authResponse;\n        } catch (e) {\n            if (\n                e instanceof ClientAuthError &&\n                e.errorCode === ClientAuthErrorCodes.tokenRefreshRequired\n            ) {\n                const refreshTokenClient = new RefreshTokenClient(\n                    this.config,\n                    this.performanceClient\n                );\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(\n        request: CommonSilentFlowRequest\n    ): Promise<[AuthenticationResult, CacheOutcome]> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.SilentFlowClientAcquireCachedToken,\n            request.correlationId\n        );\n        let lastCacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n        if (\n            request.forceRefresh ||\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n                !StringUtils.isEmptyObj(request.claims))\n        ) {\n            // Must refresh due to present force_refresh flag.\n            this.setCacheOutcome(\n                CacheOutcome.FORCE_REFRESH_OR_CLAIMS,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        const environment =\n            request.authority || this.authority.getPreferredCache();\n\n        const cacheRecord = this.cacheManager.readCacheRecord(\n            request.account,\n            request,\n            environment,\n            this.performanceClient,\n            request.correlationId\n        );\n\n        if (!cacheRecord.accessToken) {\n            // must refresh due to non-existent access_token\n            this.setCacheOutcome(\n                CacheOutcome.NO_CACHED_ACCESS_TOKEN,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(\n                cacheRecord.accessToken.expiresOn,\n                this.config.systemOptions.tokenRenewalOffsetSeconds\n            )\n        ) {\n            // must refresh due to the expires_in value\n            this.setCacheOutcome(\n                CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED,\n                request.correlationId\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            cacheRecord.accessToken.refreshOn &&\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)\n        ) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\n\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return [\n            await invokeAsync(\n                this.generateResultFromCacheRecord.bind(this),\n                PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n\n    private setCacheOutcome(\n        cacheOutcome: CacheOutcome,\n        correlationId: string\n    ): void {\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\n        this.performanceClient?.addFields(\n            {\n                cacheOutcome: cacheOutcome,\n            },\n            correlationId\n        );\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\n            this.logger.info(\n                `Token refresh is required due to cache outcome: ${cacheOutcome}`\n            );\n        }\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(\n        cacheRecord: CacheRecord,\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n            request.correlationId\n        );\n        let idTokenClaims: TokenClaims | undefined;\n        if (cacheRecord.idToken) {\n            idTokenClaims = extractTokenClaims(\n                cacheRecord.idToken.secret,\n                this.config.cryptoInterface.base64Decode\n            );\n        }\n\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.authTimeNotFound\n                );\n            }\n\n            checkMaxAge(authTime, request.maxAge);\n        }\n\n        return await ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenClaims\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    CommonSilentFlowRequest,\n    SilentFlowClient,\n    ServerTelemetryManager,\n    AccountInfo,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(\n        silentRequest: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentCacheClientAcquireToken,\n            silentRequest.correlationId\n        );\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const silentAuthClient = await this.createSilentFlowClient(\n            serverTelemetryManager,\n            silentRequest.authority,\n            silentRequest.azureCloudOptions\n        );\n        this.logger.verbose(\"Silent auth client created\");\n\n        try {\n            const response = await invokeAsync(\n                silentAuthClient.acquireCachedToken.bind(silentAuthClient),\n                PerformanceEvents.SilentFlowClientAcquireCachedToken,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentRequest);\n            const authResponse = response[0] as AuthenticationResult;\n\n            this.performanceClient.addFields(\n                {\n                    fromCache: true,\n                },\n                silentRequest.correlationId\n            );\n            return authResponse;\n        } catch (error) {\n            if (\n                error instanceof BrowserAuthError &&\n                error.errorCode === BrowserAuthErrorCodes.cryptoKeyNotFound\n            ) {\n                this.logger.verbose(\n                    \"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\"\n                );\n            }\n            throw error;\n        }\n    }\n\n    /**\n     * API to silenty clear the browser cache.\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: ClearCacheRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\n    }\n\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createSilentFlowClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): Promise<SilentFlowClient> {\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new SilentFlowClient(clientConfig, this.performanceClient);\n    }\n\n    async initializeSilentRequest(\n        request: SilentRequest,\n        account: AccountInfo\n    ): Promise<CommonSilentFlowRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.InitializeSilentRequest,\n            this.correlationId\n        );\n\n        const baseRequest = await invokeAsync(\n            this.initializeBaseRequest.bind(this),\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, account);\n        return {\n            ...request,\n            ...baseRequest,\n            account: account,\n            forceRefresh: request.forceRefresh || false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    ICrypto,\n    PromptValue,\n    AuthToken,\n    Constants,\n    AccountEntity,\n    AuthorityType,\n    ScopeSet,\n    TimeUtils,\n    AuthenticationScheme,\n    UrlString,\n    OIDC_DEFAULT_SCOPES,\n    PopTokenGenerator,\n    SignedHttpRequestParameters,\n    IPerformanceClient,\n    PerformanceEvents,\n    IdTokenEntity,\n    AccessTokenEntity,\n    AuthError,\n    CommonSilentFlowRequest,\n    AccountInfo,\n    CacheRecord,\n    AADServerParamKeys,\n    TokenClaims,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    invokeAsync,\n    createAuthError,\n    AuthErrorCodes,\n    CacheHelpers,\n} from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport {\n    NativeExtensionMethod,\n    ApiId,\n    TemporaryCacheKeys,\n    NativeConstants,\n} from \"../utils/BrowserConstants\";\nimport {\n    NativeExtensionRequestBody,\n    NativeTokenRequest,\n} from \"../broker/nativeBroker/NativeRequest\";\nimport { MATS, NativeResponse } from \"../broker/nativeBroker/NativeResponse\";\nimport {\n    NativeAuthError,\n    NativeAuthErrorCodes,\n    createNativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { SilentCacheClient } from \"./SilentCacheClient\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { base64Decode } from \"../encode/Base64Decode\";\n\nconst BrokerServerParamKeys = {\n    BROKER_CLIENT_ID: \"brk_client_id\",\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\n};\n\nexport class NativeInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected nativeMessageHandler: NativeMessageHandler;\n    protected silentCacheClient: SilentCacheClient;\n    protected nativeStorageManager: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        browserStorage: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        provider: NativeMessageHandler,\n        accountId: string,\n        nativeStorageImpl: BrowserCacheManager,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            browserStorage,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(\n            config,\n            this.nativeStorageManager,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(\n        request: PopupRequest | SilentRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        // initialize native request\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        // check if the tokens can be retrieved from internal cache\n        try {\n            const result = await this.acquireTokensFromCache(\n                this.accountId,\n                nativeRequest\n            );\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: false, // Should be true only when the result is coming directly from the broker\n                fromCache: true,\n            });\n            return result;\n        } catch (e) {\n            // continue with a native call for any and all errors\n            this.logger.info(\n                \"MSAL internal Cache does not contain tokens, proceed to make a native call\"\n            );\n        }\n\n        // fall back to native calls\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n\n        const response: object = await this.nativeMessageHandler.sendMessage(\n            messageBody\n        );\n        const validatedResponse: NativeResponse =\n            this.validateNativeResponse(response);\n\n        return this.handleNativeResponse(\n            validatedResponse,\n            nativeRequest,\n            reqTimestamp\n        )\n            .then((result: AuthenticationResult) => {\n                nativeATMeasurement.end({\n                    success: true,\n                    isNativeBroker: true,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n            .catch((error: AuthError) => {\n                nativeATMeasurement.end({\n                    success: false,\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    isNativeBroker: true,\n                });\n                throw error;\n            });\n    }\n\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    private createSilentCacheRequest(\n        request: NativeTokenRequest,\n        cachedAccount: AccountInfo\n    ): CommonSilentFlowRequest {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    protected async acquireTokensFromCache(\n        nativeAccountId: string,\n        request: NativeTokenRequest\n    ): Promise<AuthenticationResult> {\n        if (!nativeAccountId) {\n            this.logger.warning(\n                \"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\"\n            );\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getBaseAccountInfo({\n            nativeAccountId,\n        });\n\n        if (!account) {\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(\n                request,\n                account\n            );\n            const result = await this.silentCacheClient.acquireToken(\n                silentRequest\n            );\n\n            const fullAccount = {\n                ...account,\n                idTokenClaims: result?.idTokenClaims as TokenClaims,\n            };\n\n            return {\n                ...result,\n                account: fullAccount,\n            };\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        this.logger.trace(\n            \"NativeInteractionClient - acquireTokenRedirect called.\"\n        );\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n\n        try {\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            JSON.stringify(nativeRequest),\n            true\n        );\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(\n            redirectUri,\n            navigationOptions\n        ); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleRedirectPromise called.\"\n        );\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\n                \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n            );\n            return null;\n        }\n\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\"\n            );\n            return null;\n        }\n\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\"\n            );\n        }\n\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(\n                TemporaryCacheKeys.NATIVE_REQUEST\n            )\n        );\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: request,\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise sending message to native broker.\"\n            );\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(\n                response as NativeResponse,\n                request,\n                reqTimestamp\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        } catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleNativeResponse called.\"\n        );\n\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw createNativeAuthError(NativeAuthErrorCodes.userSwitch);\n        }\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n\n        // generate identifiers\n        const idTokenClaims = AuthToken.extractTokenClaims(\n            response.id_token,\n            base64Decode\n        );\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(\n            response,\n            idTokenClaims\n        );\n        const accountEntity = AccountEntity.createAccount(\n            {\n                homeAccountId: homeAccountIdentifier,\n                idTokenClaims: idTokenClaims,\n                clientInfo: response.client_info,\n                nativeAccountId: response.account.id,\n            },\n            authority\n        );\n\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(\n            response,\n            request,\n            idTokenClaims,\n            accountEntity,\n            authority.canonicalAuthority,\n            reqTimestamp\n        );\n\n        // cache accounts and tokens in the appropriate storage\n        this.cacheAccount(accountEntity);\n        this.cacheNativeTokens(\n            response,\n            request,\n            homeAccountIdentifier,\n            idTokenClaims,\n            result.accessToken,\n            result.tenantId,\n            reqTimestamp\n        );\n\n        return result;\n    }\n\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    protected createHomeAccountIdentifier(\n        response: NativeResponse,\n        idTokenClaims: TokenClaims\n    ): string {\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            response.client_info || Constants.EMPTY_STRING,\n            AuthorityType.Default,\n            this.logger,\n            this.browserCrypto,\n            idTokenClaims\n        );\n\n        return homeAccountIdentifier;\n    }\n\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(\n        response: NativeResponse,\n        request: NativeTokenRequest\n    ): ScopeSet {\n        return response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n    }\n\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(\n        response: NativeResponse,\n        request: NativeTokenRequest\n    ): Promise<string> {\n        if (request.tokenType === AuthenticationScheme.POP) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\n                    \"handleNativeServerResponse: SHR is enabled in native layer\"\n                );\n                return response.shr;\n            }\n\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(\n                this.browserCrypto\n            );\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\n            }\n            return await popTokenGenerator.signPopToken(\n                response.access_token,\n                request.keyId,\n                shrParameters\n            );\n        } else {\n            return response.access_token;\n        }\n    }\n\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    protected async generateAuthenticationResult(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        idTokenClaims: TokenClaims,\n        accountEntity: AccountEntity,\n        authority: string,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(response);\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n\n        const accountProperties = response.account.properties || {};\n        const uid =\n            accountProperties[\"UID\"] ||\n            idTokenClaims.oid ||\n            idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n        const tid =\n            accountProperties[\"TenantId\"] ||\n            idTokenClaims.tid ||\n            Constants.EMPTY_STRING;\n\n        const fullAccountEntity: AccountEntity = idTokenClaims\n            ? Object.assign(new AccountEntity(), {\n                  ...accountEntity,\n                  idTokenClaims: idTokenClaims,\n              })\n            : accountEntity;\n\n        const accountInfo = fullAccountEntity.getAccountInfo();\n\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(\n            response,\n            request\n        );\n        const tokenType =\n            request.tokenType === AuthenticationScheme.POP\n                ? AuthenticationScheme.POP\n                : AuthenticationScheme.BEARER;\n\n        const result: AuthenticationResult = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountInfo,\n            idToken: response.id_token,\n            idTokenClaims: idTokenClaims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(\n                Number(reqTimestamp + response.expires_in) * 1000\n            ),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n\n        return result;\n    }\n\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    cacheAccount(accountEntity: AccountEntity): void {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        this.browserStorage.setAccount(accountEntity);\n\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(\n                `Error occurred while removing account context from browser storage. ${e}`\n            );\n        });\n    }\n\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        homeAccountIdentifier: string,\n        idTokenClaims: TokenClaims,\n        responseAccessToken: string,\n        tenantId: string,\n        reqTimestamp: number\n    ): void {\n        const cachedIdToken: IdTokenEntity | null =\n            CacheHelpers.createIdTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                response.id_token || \"\",\n                request.clientId,\n                idTokenClaims.tid || \"\"\n            );\n\n        // cache accessToken in inmemory storage\n        const expiresIn: number =\n            request.tokenType === AuthenticationScheme.POP\n                ? Constants.SHR_NONCE_VALIDITY\n                : (typeof response.expires_in === \"string\"\n                      ? parseInt(response.expires_in, 10)\n                      : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(response, request);\n\n        const cachedAccessToken: AccessTokenEntity | null =\n            CacheHelpers.createAccessTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                responseAccessToken,\n                request.clientId,\n                idTokenClaims.tid || tenantId,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                0,\n                base64Decode\n            );\n\n        const nativeCacheRecord = new CacheRecord(\n            undefined,\n            cachedIdToken,\n            cachedAccessToken\n        );\n\n        void this.nativeStorageManager.saveCacheRecord(\n            nativeCacheRecord,\n            request.storeInCache\n        );\n    }\n\n    protected addTelemetryFromNativeResponse(\n        response: NativeResponse\n    ): MATS | null {\n        const mats = this.getMATSFromResponse(response);\n\n        if (!mats) {\n            return null;\n        }\n\n        this.performanceClient.addFields(\n            {\n                extensionId: this.nativeMessageHandler.getExtensionId(),\n                extensionVersion:\n                    this.nativeMessageHandler.getExtensionVersion(),\n                matsBrokerVersion: mats.broker_version,\n                matsAccountJoinOnStart: mats.account_join_on_start,\n                matsAccountJoinOnEnd: mats.account_join_on_end,\n                matsDeviceJoin: mats.device_join,\n                matsPromptBehavior: mats.prompt_behavior,\n                matsApiErrorCode: mats.api_error_code,\n                matsUiVisible: mats.ui_visible,\n                matsSilentCode: mats.silent_code,\n                matsSilentBiSubCode: mats.silent_bi_sub_code,\n                matsSilentMessage: mats.silent_message,\n                matsSilentStatus: mats.silent_status,\n                matsHttpStatus: mats.http_status,\n                matsHttpEventCount: mats.http_event_count,\n            },\n            this.correlationId\n        );\n\n        return mats;\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validateNativeResponse(response: object): NativeResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as NativeResponse;\n        } else {\n            throw createAuthError(\n                AuthErrorCodes.unexpectedError,\n                \"Response missing expected properties.\"\n            );\n        }\n    }\n\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    private getMATSFromResponse(response: NativeResponse): MATS | null {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            } catch (e) {\n                this.logger.error(\n                    \"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    protected isResponseFromCache(mats: MATS): boolean {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\n                \"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\"\n            );\n            return false;\n        }\n\n        return !!mats.is_cached;\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(\n        request: PopupRequest | SsoSilentRequest\n    ): Promise<NativeTokenRequest> {\n        this.logger.trace(\n            \"NativeInteractionClient - initializeNativeRequest called\"\n        );\n\n        const authority = request.authority || this.config.auth.authority;\n\n        if (request.account) {\n            await this.validateRequestAuthority(authority, request.account);\n        }\n\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\n                        \"initializeNativeRequest: silent request sets prompt to none\"\n                    );\n                    return PromptValue.NONE;\n                default:\n                    break;\n            }\n\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\n                    \"initializeNativeRequest: prompt was not provided\"\n                );\n                return undefined;\n            }\n\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"initializeNativeRequest: prompt is compatible with native flow\"\n                    );\n                    return request.prompt;\n                default:\n                    this.logger.trace(\n                        `initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`\n                    );\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativePromptNotSupported\n                    );\n            }\n        };\n\n        const validatedRequest: NativeTokenRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n        };\n\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            NativeConstants.MATS_TELEMETRY;\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await invokeAsync(\n                popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                PerformanceEvents.PopTokenGenerateCnf,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(shrParameters, this.logger);\n\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n\n        return validatedRequest;\n    }\n\n    /**\n     * Handles extra broker request parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    private handleExtraBrokerParams(request: NativeTokenRequest): void {\n        if (!request.extraParameters) {\n            return;\n        }\n\n        if (\n            request.extraParameters.hasOwnProperty(\n                BrokerServerParamKeys.BROKER_CLIENT_ID\n            ) &&\n            request.extraParameters.hasOwnProperty(\n                BrokerServerParamKeys.BROKER_REDIRECT_URI\n            ) &&\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.CLIENT_ID)\n        ) {\n            const child_client_id =\n                request.extraParameters[AADServerParamKeys.CLIENT_ID];\n            const child_redirect_uri = request.redirectUri;\n            const brk_redirect_uri =\n                request.extraParameters[\n                    BrokerServerParamKeys.BROKER_REDIRECT_URI\n                ];\n            request.extraParameters = {\n                child_client_id,\n                child_redirect_uri,\n            };\n            request.redirectUri = brk_redirect_uri;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    NativeConstants,\n    NativeExtensionMethod,\n} from \"../../utils/BrowserConstants\";\nimport {\n    Logger,\n    AuthError,\n    createAuthError,\n    AuthErrorCodes,\n    AuthenticationScheme,\n    InProgressPerformanceEvent,\n    PerformanceEvents,\n    IPerformanceClient,\n} from \"@azure/msal-common\";\nimport {\n    NativeExtensionRequest,\n    NativeExtensionRequestBody,\n} from \"./NativeRequest\";\nimport { createNativeAuthError } from \"../../error/NativeAuthError\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../../error/BrowserAuthError\";\nimport { BrowserConfiguration } from \"../../config/Configuration\";\nimport { createNewGuid } from \"../../crypto/BrowserCrypto\";\n\ntype ResponseResolvers<T> = {\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (\n        value: AuthError | Error | PromiseLike<Error> | PromiseLike<AuthError>\n    ) => void;\n};\n\nexport class NativeMessageHandler {\n    private extensionId: string | undefined;\n    private extensionVersion: string | undefined;\n    private logger: Logger;\n    private readonly handshakeTimeoutMs: number;\n    private timeoutId: number | undefined;\n    private resolvers: Map<string, ResponseResolvers<object>>;\n    private handshakeResolvers: Map<string, ResponseResolvers<void>>;\n    private messageChannel: MessageChannel;\n    private readonly windowListener: (event: MessageEvent) => void;\n    private readonly performanceClient: IPerformanceClient;\n    private readonly handshakeEvent: InProgressPerformanceEvent;\n\n    constructor(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient,\n        extensionId?: string\n    ) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(\n            PerformanceEvents.NativeMessageHandlerHandshake\n        );\n    }\n\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body\n     */\n    async sendMessage(body: NativeExtensionRequestBody): Promise<object> {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: body,\n        };\n\n        this.logger.trace(\n            \"NativeMessageHandler - Sending request to browser extension\"\n        );\n        this.logger.tracePii(\n            `NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(\n                req\n            )}`\n        );\n        this.messageChannel.port1.postMessage(req);\n\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n    }\n\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient\n    ): Promise<NativeMessageHandler> {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient,\n                NativeConstants.PREFERRED_EXTENSION_ID\n            );\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        } catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient\n            );\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n\n    /**\n     * Send handshake request helper.\n     */\n    private async sendHandshakeRequest(): Promise<void> {\n        this.logger.trace(\n            \"NativeMessageHandler - sendHandshakeRequest called.\"\n        );\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                );\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeHandshakeTimeout\n                    )\n                );\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    private onWindowMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n\n        const request = event.data;\n\n        if (\n            !request.channel ||\n            request.channel !== NativeConstants.CHANNEL_ID\n        ) {\n            return;\n        }\n\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(\n                request.responseId\n            );\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(\n                    `NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`\n                );\n                return;\n            }\n\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(\n                request.extensionId\n                    ? `Extension with id: ${request.extensionId} not installed`\n                    : \"No extension installed\"\n            );\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeExtensionNotInstalled\n                )\n            );\n        }\n    }\n\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    private onChannelMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(\n            request.responseId\n        );\n\n        try {\n            const method = request.body.method;\n\n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\n                    \"NativeMessageHandler - Received response from browser extension\"\n                );\n                this.logger.tracePii(\n                    `NativeMessageHandler - Received response from browser extension: ${JSON.stringify(\n                        response\n                    )}`\n                );\n                if (response.status !== \"Success\") {\n                    resolver.reject(\n                        createNativeAuthError(\n                            response.code,\n                            response.description,\n                            response.ext\n                        )\n                    );\n                } else if (response.result) {\n                    if (\n                        response.result[\"code\"] &&\n                        response.result[\"description\"]\n                    ) {\n                        resolver.reject(\n                            createNativeAuthError(\n                                response.result[\"code\"],\n                                response.result[\"description\"],\n                                response.result[\"ext\"]\n                            )\n                        );\n                    } else {\n                        resolver.resolve(response.result);\n                    }\n                } else {\n                    throw createAuthError(\n                        AuthErrorCodes.unexpectedError,\n                        \"Event does not contain result.\"\n                    );\n                }\n                this.resolvers.delete(request.responseId);\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(\n                        `NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`\n                    );\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                ); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(\n                    `NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`\n                );\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        } catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(\n                `Error parsing response from WAM Extension: ${err as string}`\n            );\n            this.logger.errorPii(`Unable to parse ${event}`);\n\n            if (resolver) {\n                resolver.reject(err as AuthError);\n            } else if (handshakeResolver) {\n                handshakeResolver.reject(err as AuthError);\n            }\n        }\n    }\n\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId(): string | undefined {\n        return this.extensionId;\n    }\n\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion(): string | undefined {\n        return this.extensionVersion;\n    }\n\n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme\n     */\n    static isNativeAvailable(\n        config: BrowserConfiguration,\n        logger: Logger,\n        nativeExtensionProvider?: NativeMessageHandler,\n        authenticationScheme?: AuthenticationScheme\n    ): boolean {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\n                \"isNativeAvailable: allowNativeBroker is not enabled, returning false\"\n            );\n            // Developer disabled WAM\n            return false;\n        }\n\n        if (!nativeExtensionProvider) {\n            logger.trace(\n                \"isNativeAvailable: WAM extension provider is not initialized, returning false\"\n            );\n            // Extension is not available\n            return false;\n        }\n\n        if (authenticationScheme) {\n            switch (authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\n                        \"isNativeAvailable: authenticationScheme is supported, returning true\"\n                    );\n                    return true;\n                default:\n                    logger.trace(\n                        \"isNativeAvailable: authenticationScheme is not supported, returning false\"\n                    );\n                    return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodePayload,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    CcsCredential,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    CcsCredentialType,\n    ServerAuthorizationCodeResponse,\n} from \"@azure/msal-common\";\n\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport class InteractionHandler {\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected logger: Logger;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponse(\n        response: ServerAuthorizationCodeResponse,\n        request: AuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponse,\n            request.correlationId\n        );\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(\n                response,\n                request.state\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        return invokeAsync(\n            this.handleCodeResponseFromServer.bind(this),\n            PerformanceEvents.HandleCodeResponseFromServer,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(authCodeResponse, request);\n    }\n\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(\n        authCodeResponse: AuthorizationCodePayload,\n        request: AuthorizationUrlRequest,\n        validateNonce: boolean = true\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponseFromServer,\n            request.correlationId\n        );\n        this.logger.trace(\n            \"InteractionHandler.handleCodeResponseFromServer called\"\n        );\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(\n                this.authModule.updateAuthority.bind(this.authModule),\n                PerformanceEvents.UpdateTokenEndpointAuthority,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authCodeResponse.cloud_instance_host_name, request.correlationId);\n        }\n\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\n            authCodeResponse.nonce = request.nonce || undefined;\n        }\n\n        authCodeResponse.state = request.state;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const ccsCred = this.createCcsCredentials(request);\n            if (ccsCred) {\n                this.authCodeRequest.ccsCredential = ccsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await invokeAsync(\n            this.authModule.acquireToken.bind(this.authModule),\n            PerformanceEvents.AuthClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authCodeRequest, authCodeResponse)) as AuthenticationResult;\n        return tokenResponse;\n    }\n\n    /**\n     * Build ccs creds if available\n     */\n    protected createCcsCredentials(\n        request: AuthorizationUrlRequest\n    ): CcsCredential | null {\n        if (request.account) {\n            return {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n        } else if (request.loginHint) {\n            return {\n                credential: request.loginHint,\n                type: CcsCredentialType.UPN,\n            };\n        }\n\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    ThrottlingUtils,\n    CommonEndSessionRequest,\n    UrlString,\n    AuthError,\n    OIDC_DEFAULT_SCOPES,\n    ProtocolUtils,\n    PerformanceEvents,\n    IPerformanceClient,\n    Logger,\n    ICrypto,\n    ProtocolMode,\n    ServerResponseType,\n    invokeAsync,\n    invoke,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { EventType } from \"../event/EventType\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler\";\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes\";\nimport { EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport * as ResponseHandler from \"../response/ResponseHandler\";\n\nexport type PopupParams = {\n    popup?: Window | null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes;\n};\n\nexport class PopupClient extends StandardInteractionClient {\n    private currentWindow: Window | undefined;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            const popupName = this.generatePopupName(\n                request.scopes || OIDC_DEFAULT_SCOPES,\n                request.authority || this.config.auth.authority\n            );\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupName,\n                    popupWindowAttributes\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\n                    \"asyncPopup set to false, opening popup before acquiring token\"\n                );\n                const popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupName,\n                    popupWindowAttributes\n                );\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupName,\n                    popupWindowAttributes,\n                    popup\n                );\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest =\n                this.initializeLogoutRequest(logoutRequest);\n\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri =\n                logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes =\n                logoutRequest?.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupName,\n                    popupWindowAttributes,\n                    authority,\n                    undefined,\n                    mainWindowRedirectUri\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupName,\n                    popupWindowAttributes\n                );\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupName,\n                    popupWindowAttributes,\n                    authority,\n                    popup,\n                    mainWindowRedirectUri\n                );\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenPopupAsync(\n        request: PopupRequest,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes,\n        popup?: Window | null\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenPopup\n        );\n\n        const validRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, InteractionType.Popup);\n\n        BrowserUtils.preconnect(validRequest.authority);\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest =\n                await invokeAsync(\n                    this.initializeAuthorizationCodeRequest.bind(this),\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                serverTelemetryManager,\n                validRequest.authority,\n                validRequest.azureCloudOptions\n            );\n\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeMessageHandler,\n                request.authenticationScheme\n            );\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement =\n                    this.performanceClient.startMeasurement(\n                        PerformanceEvents.FetchAccountIdWithNativeBroker,\n                        request.correlationId\n                    );\n            }\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker,\n            });\n\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters: PopupParams = {\n                popup,\n                popupName,\n                popupWindowAttributes,\n            };\n            const popupWindow: Window = this.initiateAuthRequest(\n                navigateUrl,\n                popupParameters\n            );\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const responseString = await this.monitorPopupForHash(popupWindow);\n\n            const serverParams = invoke(\n                ResponseHandler.deserializeResponse,\n                PerformanceEvents.DeserializeResponse,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                responseString,\n                this.config.auth.OIDCOptions.serverResponseType,\n                this.logger\n            );\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(\n                this.browserStorage,\n                this.config.auth.clientId,\n                authCodeRequest\n            );\n\n            if (serverParams.accountId) {\n                this.logger.verbose(\n                    \"Account id found in hash, calling WAM for token\"\n                );\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                    });\n                }\n\n                if (!this.nativeMessageHandler) {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                    );\n                }\n                const nativeInteractionClient = new NativeInteractionClient(\n                    this.config,\n                    this.browserStorage,\n                    this.browserCrypto,\n                    this.logger,\n                    this.eventHandler,\n                    this.navigationClient,\n                    ApiId.acquireTokenPopup,\n                    this.performanceClient,\n                    this.nativeMessageHandler,\n                    serverParams.accountId,\n                    this.nativeStorage,\n                    validRequest.correlationId\n                );\n                const { userRequestState } = ProtocolUtils.parseRequestState(\n                    this.browserCrypto,\n                    validRequest.state\n                );\n                return nativeInteractionClient.acquireToken({\n                    ...validRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                });\n            }\n\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponse(\n                serverParams,\n                validRequest\n            );\n\n            return result;\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    protected async logoutPopupAsync(\n        validRequest: CommonEndSessionRequest,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes,\n        requestAuthority?: string,\n        popup?: Window | null,\n        mainWindowRedirectUri?: string\n    ): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_START,\n            InteractionType.Popup,\n            validRequest\n        );\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logoutPopup\n        );\n\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            // Initialize the client\n            const authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(serverTelemetryManager, requestAuthority);\n\n            try {\n                authClient.authority.endSessionEndpoint;\n            } catch {\n                if (\n                    validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === ProtocolMode.OIDC\n                ) {\n                    void this.browserStorage.removeAccount(\n                        validRequest.account?.homeAccountId\n                    );\n\n                    this.eventHandler.emitEvent(\n                        EventType.LOGOUT_SUCCESS,\n                        InteractionType.Popup,\n                        validRequest\n                    );\n\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions: NavigationOptions = {\n                            apiId: ApiId.logoutPopup,\n                            timeout:\n                                this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = UrlString.getAbsoluteUrl(\n                            mainWindowRedirectUri,\n                            BrowserUtils.getCurrentUri()\n                        );\n                        await this.navigationClient.navigateInternal(\n                            absoluteUrl,\n                            navigationOptions\n                        );\n                    }\n\n                    if (popup) {\n                        popup.close();\n                    }\n\n                    return;\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Popup,\n                validRequest\n            );\n\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {\n                popupName,\n                popupWindowAttributes,\n                popup,\n            });\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            await this.monitorPopupForHash(popupWindow).catch(() => {\n                // Swallow any errors related to monitoring the window. Server logout is best effort\n            });\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(\n                    mainWindowRedirectUri,\n                    BrowserUtils.getCurrentUri()\n                );\n\n                this.logger.verbose(\n                    \"Redirecting main window to url specified in the request\"\n                );\n                this.logger.verbosePii(\n                    `Redirecting main window to: ${absoluteUrl}`\n                );\n                await this.navigationClient.navigateInternal(\n                    absoluteUrl,\n                    navigationOptions\n                );\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Popup,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Popup\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Popup\n        );\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (requestUrl) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\n        return new Promise<string>((resolve, reject) => {\n            this.logger.verbose(\n                \"PopupHandler.monitorPopupForHash - polling started\"\n            );\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\n                        \"PopupHandler.monitorPopupForHash - window closed\"\n                    );\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.userCancelled\n                        )\n                    );\n                    return;\n                }\n\n                let href = \"\";\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n                clearInterval(intervalId);\n\n                let responseString = \"\";\n                const responseType =\n                    this.config.auth.OIDCOptions.serverResponseType;\n                if (popupWindow) {\n                    if (responseType === ServerResponseType.QUERY) {\n                        responseString = popupWindow.location.search;\n                    } else {\n                        responseString = popupWindow.location.hash;\n                    }\n                }\n\n                this.logger.verbose(\n                    \"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\"\n                );\n\n                resolve(responseString);\n            }, this.config.system.pollIntervalMilliseconds);\n        }).finally(() => {\n            this.cleanPopup(popupWindow);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(\n                    `Navigating popup window to: ${urlNavigate}`\n                );\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(\n                    `Opening popup window to: ${urlNavigate}`\n                );\n                popupWindow = this.openSizedPopup(\n                    urlNavigate,\n                    popupParams.popupName,\n                    popupParams.popupWindowAttributes\n                );\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.emptyWindowError\n                );\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\n                \"error opening popup \" + (e as AuthError).message\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.popupWindowError\n            );\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(\n        urlNavigate: string,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes\n    ): Window | null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth =\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight =\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\n                \"Default popup window width used. Window width not configured or invalid.\"\n            );\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\n                \"Default popup window height used. Window height not configured or invalid.\"\n            );\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\n                \"Default popup window top position used. Window top not configured or invalid.\"\n            );\n            top = Math.max(\n                0,\n                winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop\n            );\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\n                \"Default popup window left position used. Window left not configured or invalid.\"\n            );\n            left = Math.max(\n                0,\n                winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft\n            );\n        }\n\n        return window.open(\n            urlNavigate,\n            popupName,\n            `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`\n        );\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.browserStorage.cleanRequestByInteractionType(\n            InteractionType.Popup\n        );\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes: Array<string>, authority: string): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${\n            this.config.auth.clientId\n        }.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    CommonAuthorizationCodeRequest,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    CcsCredential,\n    invokeAsync,\n    PerformanceEvents,\n    ServerAuthorizationCodeResponse,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport type RedirectParams = {\n    navigationClient: INavigationClient;\n    redirectTimeout: number;\n    redirectStartPage: string;\n    onRedirectNavigate?: (url: string) => void | boolean;\n};\n\nexport class RedirectHandler {\n    authModule: AuthorizationCodeClient;\n    browserStorage: BrowserCacheManager;\n    authCodeRequest: CommonAuthorizationCodeRequest;\n    logger: Logger;\n    performanceClient: IPerformanceClient;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(\n        requestUrl: string,\n        params: RedirectParams\n    ): Promise<void> {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (requestUrl) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\"\n                );\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    params.redirectStartPage,\n                    true\n                );\n            }\n\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(\n                TemporaryCacheKeys.CORRELATION_ID,\n                this.authCodeRequest.correlationId,\n                true\n            );\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\n            this.logger.infoPii(\n                `RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`\n            );\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false,\n            };\n\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\"\n                );\n                const navigate = params.onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\"\n                    );\n                    await params.navigationClient.navigateExternal(\n                        requestUrl,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\"\n                    );\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\"\n                );\n                await params.navigationClient.navigateExternal(\n                    requestUrl,\n                    navigationOptions\n                );\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.info(\n                \"RedirectHandler.initiateAuthRequest: Navigate url is empty\"\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponse(\n        response: ServerAuthorizationCodeResponse,\n        state: string\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.stateNotFound,\n                \"Cached State\"\n            );\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(\n                response,\n                requestState\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(\n                this.authModule.updateAuthority.bind(this.authModule),\n                PerformanceEvents.UpdateTokenEndpointAuthority,\n                this.logger,\n                this.performanceClient,\n                this.authCodeRequest.correlationId\n            )(\n                authCodeResponse.cloud_instance_host_name,\n                this.authCodeRequest.correlationId\n            );\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await this.authModule.acquireToken(\n            this.authCodeRequest,\n            authCodeResponse\n        )) as AuthenticationResult;\n\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n\n    /**\n     * Looks up ccs creds in the cache\n     */\n    protected checkCcsCredentials(): CcsCredential | null {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.CCS_CREDENTIAL,\n            true\n        );\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred) as CcsCredential;\n            } catch (e) {\n                this.authModule.logger.error(\n                    \"Cache credential could not be parsed\"\n                );\n                this.authModule.logger.errorPii(\n                    `Cache credential could not be parsed: ${cachedCcsCred}`\n                );\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    UrlString,\n    AuthError,\n    ServerTelemetryManager,\n    Constants,\n    ProtocolUtils,\n    ServerAuthorizationCodeResponse,\n    ThrottlingUtils,\n    ICrypto,\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    ProtocolMode,\n    invokeAsync,\n    ServerResponseType,\n    UrlUtils,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    ApiId,\n    InteractionType,\n    TemporaryCacheKeys,\n} from \"../utils/BrowserConstants\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport * as ResponseHandler from \"../response/ResponseHandler\";\n\nexport class RedirectClient extends StandardInteractionClient {\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        const validRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, InteractionType.Redirect);\n\n        this.browserStorage.updateCacheEntries(\n            validRequest.state,\n            validRequest.nonce,\n            validRequest.authority,\n            validRequest.loginHint || \"\",\n            validRequest.account || null\n        );\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenRedirect\n        );\n\n        const handleBackButton = (event: PageTransitionEvent) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\n                    \"Page was restored from back/forward cache. Clearing temporary cache.\"\n                );\n                this.browserStorage.cleanRequestByState(validRequest.state);\n                this.eventHandler.emitEvent(\n                    EventType.RESTORE_FROM_BFCACHE,\n                    InteractionType.Redirect\n                );\n            }\n        };\n\n        try {\n            // Create auth code request and generate PKCE params\n            const authCodeRequest: CommonAuthorizationCodeRequest =\n                await invokeAsync(\n                    this.initializeAuthorizationCodeRequest.bind(this),\n                    PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(validRequest);\n\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                serverTelemetryManager,\n                validRequest.authority,\n                validRequest.azureCloudOptions\n            );\n\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(\n                    this.config,\n                    this.logger,\n                    this.nativeMessageHandler,\n                    request.authenticationScheme\n                ),\n            });\n\n            const redirectStartPage = this.getRedirectStartPage(\n                request.redirectStartPage\n            );\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate,\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.handleRedirectPromise\n        );\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\n                    \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n                );\n                return null;\n            }\n            const [serverParams, responseString] = this.getRedirectResponse(\n                hash || \"\"\n            );\n            if (!serverParams) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\n                    \"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\"\n                );\n                this.browserStorage.cleanRequestByInteractionType(\n                    InteractionType.Redirect\n                );\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl =\n                this.browserStorage.getTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    true\n                ) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized =\n                UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(\n                window.location.href\n            );\n\n            if (\n                loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl\n            ) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\n                    \"Current page is loginRequestUrl, handling response\"\n                );\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                const handleHashResult = await this.handleResponse(\n                    serverParams,\n                    serverTelemetryManager\n                );\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\n                    \"NavigateToLoginRequestUrl set to false, handling response\"\n                );\n                return this.handleResponse(\n                    serverParams,\n                    serverTelemetryManager\n                );\n            } else if (\n                !BrowserUtils.isInIframe() ||\n                this.config.system.allowRedirectInIframe\n            ) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.URL_HASH,\n                    responseString,\n                    true\n                );\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(\n                        TemporaryCacheKeys.ORIGIN_URI,\n                        homepage,\n                        true\n                    );\n                    this.logger.warning(\n                        \"Unable to get valid login request url from cache, redirecting to home page\"\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            homepage,\n                            navigationOptions\n                        );\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(\n                        `Navigating to loginRequestUrl: ${loginRequestUrl}`\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            loginRequestUrl,\n                            navigationOptions\n                        );\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleResponse(\n                        serverParams,\n                        serverTelemetryManager\n                    );\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByInteractionType(\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    protected getRedirectResponse(\n        userProvidedResponse: string\n    ): [ServerAuthorizationCodeResponse | null, string] {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        let responseString = userProvidedResponse;\n        if (!responseString) {\n            if (\n                this.config.auth.OIDCOptions.serverResponseType ===\n                ServerResponseType.QUERY\n            ) {\n                responseString = window.location.search;\n            } else {\n                responseString = window.location.hash;\n            }\n        }\n        let response = UrlUtils.getDeserializedResponse(responseString);\n\n        if (response) {\n            try {\n                ResponseHandler.validateInteractionType(\n                    response,\n                    this.browserCrypto,\n                    InteractionType.Redirect\n                );\n            } catch (e) {\n                if (e instanceof AuthError) {\n                    this.logger.error(\n                        `Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`\n                    );\n                }\n                return [null, \"\"];\n            }\n\n            BrowserUtils.clearHash(window);\n            this.logger.verbose(\n                \"Hash contains known properties, returning response hash\"\n            );\n            return [response, responseString];\n        }\n\n        const cachedHash = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.URL_HASH,\n            true\n        );\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH)\n        );\n\n        if (cachedHash) {\n            response = UrlUtils.getDeserializedResponse(cachedHash);\n            if (response) {\n                this.logger.verbose(\n                    \"Hash does not contain known properties, returning cached hash\"\n                );\n                return [response, cachedHash];\n            }\n        }\n\n        return [null, \"\"];\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    protected async handleResponse(\n        serverParams: ServerAuthorizationCodeResponse,\n        serverTelemetryManager: ServerTelemetryManager\n    ): Promise<AuthenticationResult> {\n        const state = serverParams.state;\n        if (!state) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n        }\n\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\n                \"Account id found in hash, calling WAM for token\"\n            );\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                );\n            }\n            const nativeInteractionClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                ApiId.acquireTokenPopup,\n                this.performanceClient,\n                this.nativeMessageHandler,\n                serverParams.accountId,\n                this.nativeStorage,\n                cachedRequest.correlationId\n            );\n            const { userRequestState } = ProtocolUtils.parseRequestState(\n                this.browserCrypto,\n                state\n            );\n            return nativeInteractionClient\n                .acquireToken({\n                    ...cachedRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                })\n                .finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n        }\n\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noCachedAuthorityError\n            );\n        }\n\n        const authClient = await invokeAsync(\n            this.createAuthCodeClient.bind(this),\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, currentAuthority);\n\n        ThrottlingUtils.removeThrottle(\n            this.browserStorage,\n            this.config.auth.clientId,\n            cachedRequest\n        );\n        const interactionHandler = new RedirectHandler(\n            authClient,\n            this.browserStorage,\n            cachedRequest,\n            this.logger,\n            this.performanceClient\n        );\n        return await interactionHandler.handleCodeResponse(serverParams, state);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logout\n        );\n\n        try {\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_START,\n                InteractionType.Redirect,\n                logoutRequest\n            );\n\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n\n            const authClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(serverTelemetryManager, logoutRequest && logoutRequest.authority);\n\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                } catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        void this.browserStorage.removeAccount(\n                            validLogoutRequest.account?.homeAccountId\n                        );\n\n                        this.eventHandler.emitEvent(\n                            EventType.LOGOUT_SUCCESS,\n                            InteractionType.Redirect,\n                            validLogoutRequest\n                        );\n\n                        return;\n                    }\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string =\n                authClient.getLogoutUri(validLogoutRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Redirect,\n                validLogoutRequest\n            );\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (\n                logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\"\n            ) {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate did not return false, navigating\"\n                    );\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(\n                        logoutUri,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate returned false, stopping navigation\"\n                    );\n                }\n            } else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(\n                    logoutUri,\n                    navigationOptions\n                );\n                return;\n            }\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Redirect,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Redirect\n        );\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(\n            redirectStartPage,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    invoke,\n    ServerResponseType,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\n\n/**\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\n * @param urlNavigate\n * @param userRequestScopes\n */\nexport async function initiateAuthRequest(\n    requestUrl: string,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string,\n    navigateFrameWait?: number\n): Promise<HTMLIFrameElement> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\n        correlationId\n    );\n\n    if (!requestUrl) {\n        // Throw error if request URL is empty.\n        logger.info(\"Navigate url is empty\");\n        throw createBrowserAuthError(BrowserAuthErrorCodes.emptyNavigateUri);\n    }\n    if (navigateFrameWait) {\n        return await invokeAsync(\n            loadFrame,\n            PerformanceEvents.SilentHandlerLoadFrame,\n            logger,\n            performanceClient,\n            correlationId\n        )(requestUrl, navigateFrameWait, performanceClient, correlationId);\n    }\n    return invoke(\n        loadFrameSync,\n        PerformanceEvents.SilentHandlerLoadFrameSync,\n        logger,\n        performanceClient,\n        correlationId\n    )(requestUrl);\n}\n\n/**\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n * @param iframe\n * @param timeout\n */\nexport async function monitorIframeForHash(\n    iframe: HTMLIFrameElement,\n    timeout: number,\n    pollIntervalMilliseconds: number,\n    performanceClient: IPerformanceClient,\n    logger: Logger,\n    correlationId: string,\n    responseType: ServerResponseType\n): Promise<string> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\n        correlationId\n    );\n\n    return new Promise<string>((resolve, reject) => {\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n            logger.warning(\n                `system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`\n            );\n        }\n\n        /*\n         * Polling for iframes can be purely timing based,\n         * since we don't need to account for interaction.\n         */\n        const timeoutId = window.setTimeout(() => {\n            window.clearInterval(intervalId);\n            reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.monitorWindowTimeout\n                )\n            );\n        }, timeout);\n\n        const intervalId = window.setInterval(() => {\n            let href: string = \"\";\n            const contentWindow = iframe.contentWindow;\n            try {\n                /*\n                 * Will throw if cross origin,\n                 * which should be caught and ignored\n                 * since we need the interval to keep running while on STS UI.\n                 */\n                href = contentWindow ? contentWindow.location.href : \"\";\n            } catch (e) {}\n\n            if (!href || href === \"about:blank\") {\n                return;\n            }\n\n            let responseString = \"\";\n            if (contentWindow) {\n                if (responseType === ServerResponseType.QUERY) {\n                    responseString = contentWindow.location.search;\n                } else {\n                    responseString = contentWindow.location.hash;\n                }\n            }\n            window.clearTimeout(timeoutId);\n            window.clearInterval(intervalId);\n            resolve(responseString);\n        }, pollIntervalMilliseconds);\n    }).finally(() => {\n        invoke(\n            removeHiddenIframe,\n            PerformanceEvents.RemoveHiddenIframe,\n            logger,\n            performanceClient,\n            correlationId\n        )(iframe);\n    });\n}\n\n/**\n * @hidden\n * Loads iframe with authorization endpoint URL\n * @ignore\n * @deprecated\n */\nfunction loadFrame(\n    urlNavigate: string,\n    navigateFrameWait: number,\n    performanceClient: IPerformanceClient,\n    correlationId: string\n): Promise<HTMLIFrameElement> {\n    performanceClient.addQueueMeasurement(\n        PerformanceEvents.SilentHandlerLoadFrame,\n        correlationId\n    );\n\n    /*\n     * This trick overcomes iframe navigation in IE\n     * IE does not load the page consistently in iframe\n     */\n\n    return new Promise((resolve, reject) => {\n        const frameHandle = createHiddenIframe();\n\n        window.setTimeout(() => {\n            if (!frameHandle) {\n                reject(\"Unable to load iframe\");\n                return;\n            }\n\n            frameHandle.src = urlNavigate;\n\n            resolve(frameHandle);\n        }, navigateFrameWait);\n    });\n}\n/**\n * @hidden\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n * @param urlNavigate\n * @param frameName\n * @param logger\n */\nfunction loadFrameSync(urlNavigate: string): HTMLIFrameElement {\n    const frameHandle = createHiddenIframe();\n\n    frameHandle.src = urlNavigate;\n\n    return frameHandle;\n}\n\n/**\n * @hidden\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\n * @ignore\n */\nfunction createHiddenIframe(): HTMLIFrameElement {\n    const authFrame = document.createElement(\"iframe\");\n\n    authFrame.style.visibility = \"hidden\";\n    authFrame.style.position = \"absolute\";\n    authFrame.style.width = authFrame.style.height = \"0\";\n    authFrame.style.border = \"0\";\n    authFrame.setAttribute(\n        \"sandbox\",\n        \"allow-scripts allow-same-origin allow-forms\"\n    );\n    document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n\n    return authFrame;\n}\n\n/**\n * @hidden\n * Removes a hidden iframe from the page.\n * @ignore\n */\nfunction removeHiddenIframe(iframe: HTMLIFrameElement): void {\n    if (document.body === iframe.parentNode) {\n        document.body.removeChild(iframe);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    PromptValue,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    AuthError,\n    ProtocolUtils,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    invoke,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport {\n    initiateAuthRequest,\n    monitorIframeForHash,\n} from \"../interaction_handler/SilentHandler\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport * as ResponseHandler from \"../response/ResponseHandler\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    protected apiId: ApiId;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(\n        request: SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            request.correlationId\n        );\n        // Check that we have some SSO data\n        if (\n            !request.loginHint &&\n            !request.sid &&\n            (!request.account || !request.account.username)\n        ) {\n            this.logger.warning(\n                \"No user hint provided. The authorization server may need more information to complete this request.\"\n            );\n        }\n\n        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n        if (\n            request.prompt &&\n            request.prompt !== PromptValue.NONE &&\n            request.prompt !== PromptValue.NO_SESSION\n        ) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.silentPromptValueError\n            );\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            {\n                ...request,\n                prompt: request.prompt || PromptValue.NONE,\n            },\n            InteractionType.Silent\n        );\n        BrowserUtils.preconnect(silentRequest.authority);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                serverTelemetryManager,\n                silentRequest.authority,\n                silentRequest.azureCloudOptions\n            );\n\n            return await invokeAsync(\n                this.silentTokenHelper.bind(this),\n                PerformanceEvents.SilentIframeClientTokenHelper,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authClient, silentRequest);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    protected async silentTokenHelper(\n        authClient: AuthorizationCodeClient,\n        silentRequest: AuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = silentRequest.correlationId;\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientTokenHelper,\n            correlationId\n        );\n\n        // Create auth code request and generate PKCE params\n        const authCodeRequest: CommonAuthorizationCodeRequest =\n            await invokeAsync(\n                this.initializeAuthorizationCodeRequest.bind(this),\n                PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(silentRequest);\n\n        // Create authorize request url\n        const navigateUrl = await invokeAsync(\n            authClient.getAuthCodeUrl.bind(authClient),\n            PerformanceEvents.GetAuthCodeUrl,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeMessageHandler,\n                silentRequest.authenticationScheme\n            ),\n        });\n\n        // Create silent handler\n        const interactionHandler = new InteractionHandler(\n            authClient,\n            this.browserStorage,\n            authCodeRequest,\n            this.logger,\n            this.performanceClient\n        );\n        // Get the frame handle for the silent request\n        const msalFrame = await invokeAsync(\n            initiateAuthRequest,\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            navigateUrl,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            this.config.system.navigateFrameWait\n        );\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const responseString = await invokeAsync(\n            monitorIframeForHash,\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(\n            msalFrame,\n            this.config.system.iframeHashTimeout,\n            this.config.system.pollIntervalMilliseconds,\n            this.performanceClient,\n            this.logger,\n            correlationId,\n            responseType\n        );\n        const serverParams = invoke(\n            ResponseHandler.deserializeResponse,\n            PerformanceEvents.DeserializeResponse,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(responseString, responseType, this.logger);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\n                \"Account id found in hash, calling WAM for token\"\n            );\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                );\n            }\n            const nativeInteractionClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                this.apiId,\n                this.performanceClient,\n                this.nativeMessageHandler,\n                serverParams.accountId,\n                this.browserStorage,\n                correlationId\n            );\n            const { userRequestState } = ProtocolUtils.parseRequestState(\n                this.browserCrypto,\n                silentRequest.state\n            );\n            return invokeAsync(\n                nativeInteractionClient.acquireToken.bind(\n                    nativeInteractionClient\n                ),\n                PerformanceEvents.NativeInteractionClientAcquireToken,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE,\n            });\n        }\n\n        // Handle response from hash string\n        return invokeAsync(\n            interactionHandler.handleCodeResponse.bind(interactionHandler),\n            PerformanceEvents.HandleCodeResponse,\n            this.logger,\n            this.performanceClient,\n            correlationId\n        )(serverParams, silentRequest);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    CommonSilentFlowRequest,\n    ServerTelemetryManager,\n    RefreshTokenClient,\n    AuthError,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentRefreshClientAcquireToken,\n            request.correlationId\n        );\n\n        const baseRequest = await invokeAsync(\n            this.initializeBaseRequest.bind(this),\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, request.account);\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...baseRequest,\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const refreshTokenClient = await this.createRefreshTokenClient(\n            serverTelemetryManager,\n            silentRequest.authority,\n            silentRequest.azureCloudOptions\n        );\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return invokeAsync(\n            refreshTokenClient.acquireTokenByRefreshToken.bind(\n                refreshTokenClient\n            ),\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(silentRequest).catch((e: AuthError) => {\n            (e as AuthError).setCorrelationId(this.correlationId);\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }) as Promise<AuthenticationResult>;\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createRefreshTokenClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccessTokenEntity,\n    ICrypto,\n    IdTokenEntity,\n    Logger,\n    ScopeSet,\n    Authority,\n    AuthorityOptions,\n    ExternalTokenResponse,\n    AccountEntity,\n    AuthToken,\n    RefreshTokenEntity,\n    Constants,\n    CacheRecord,\n    TokenClaims,\n    CacheHelpers,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\nimport { ITokenCache } from \"./ITokenCache\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { base64Decode } from \"../encode/Base64Decode\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string;\n    expiresOn?: number;\n    extendedExpiresOn?: number;\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(\n        configuration: BrowserConfiguration,\n        storage: BrowserCacheManager,\n        logger: Logger,\n        cryptoObj: ICrypto\n    ) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n\n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    loadExternalTokens(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        options: LoadTokenOptions\n    ): AuthenticationResult {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n\n        if (!response.id_token) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const idTokenClaims = AuthToken.extractTokenClaims(\n            response.id_token,\n            base64Decode\n        );\n\n        let cacheRecord: CacheRecord;\n        let authority: Authority | undefined;\n        let cacheRecordAccount: AccountEntity;\n\n        if (request.account) {\n            cacheRecordAccount = AccountEntity.createFromAccountInfo(\n                request.account\n            );\n            cacheRecord = new CacheRecord(\n                cacheRecordAccount,\n                this.loadIdToken(\n                    response.id_token,\n                    cacheRecordAccount.homeAccountId,\n                    request.account.environment,\n                    request.account.tenantId\n                ),\n                this.loadAccessToken(\n                    request,\n                    response,\n                    cacheRecordAccount.homeAccountId,\n                    request.account.environment,\n                    request.account.tenantId,\n                    options\n                ),\n                this.loadRefreshToken(\n                    request,\n                    response,\n                    cacheRecordAccount.homeAccountId,\n                    request.account.environment\n                )\n            );\n        } else if (request.authority) {\n            const authorityUrl = Authority.generateAuthority(\n                request.authority,\n                request.azureCloudOptions\n            );\n            const authorityOptions: AuthorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache:\n                    this.config.auth.skipAuthorityMetadataCache,\n            };\n            authority = new Authority(\n                authorityUrl,\n                this.config.system.networkClient,\n                this.storage,\n                authorityOptions,\n                this.logger\n            );\n\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                cacheRecordAccount = this.loadAccount(\n                    idTokenClaims,\n                    authority,\n                    options.clientInfo\n                );\n                cacheRecord = new CacheRecord(\n                    cacheRecordAccount,\n                    this.loadIdToken(\n                        response.id_token,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant\n                    ),\n                    this.loadAccessToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant,\n                        options\n                    ),\n                    this.loadRefreshToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort\n                    )\n                );\n            } else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                cacheRecordAccount = this.loadAccount(\n                    idTokenClaims,\n                    authority,\n                    response.client_info\n                );\n                cacheRecord = new CacheRecord(\n                    cacheRecordAccount,\n                    this.loadIdToken(\n                        response.id_token,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant\n                    ),\n                    this.loadAccessToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant,\n                        options\n                    ),\n                    this.loadRefreshToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort\n                    )\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.unableToLoadToken\n                );\n            }\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        return this.generateAuthenticationResult(\n            request,\n            idTokenClaims,\n            cacheRecord,\n            cacheRecordAccount,\n            authority\n        );\n    }\n\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    private loadAccount(\n        idTokenClaims: TokenClaims,\n        authority: Authority,\n        clientInfo?: string,\n        requestHomeAccountId?: string\n    ): AccountEntity {\n        let homeAccountId;\n        if (requestHomeAccountId) {\n            homeAccountId = requestHomeAccountId;\n        } else if (authority.authorityType !== undefined && clientInfo) {\n            homeAccountId = AccountEntity.generateHomeAccountId(\n                clientInfo,\n                authority.authorityType,\n                this.logger,\n                this.cryptoObj,\n                idTokenClaims\n            );\n        }\n\n        if (!homeAccountId) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const accountEntity = AccountEntity.createAccount(\n            {\n                homeAccountId,\n                idTokenClaims: idTokenClaims,\n                clientInfo,\n                environment: authority.hostnameAndPort,\n            },\n            authority\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading account\");\n\n            this.storage.setAccount(accountEntity);\n            return accountEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    private loadIdToken(\n        idToken: string,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string\n    ): IdTokenEntity {\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(\n            homeAccountId,\n            environment,\n            idToken,\n            this.config.auth.clientId,\n            tenantId\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setIdTokenCredential(idTokenEntity);\n            return idTokenEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    private loadAccessToken(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string,\n        options: LoadTokenOptions\n    ): AccessTokenEntity | null {\n        if (!response.access_token) {\n            this.logger.verbose(\n                \"TokenCache - No access token provided for caching\"\n            );\n            return null;\n        }\n\n        if (!response.expires_in) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        if (!options.extendedExpiresOn) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn =\n            options.expiresOn ||\n            response.expires_in + new Date().getTime() / 1000;\n        const extendedExpiresOn = options.extendedExpiresOn;\n\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(\n            homeAccountId,\n            environment,\n            response.access_token,\n            this.config.auth.clientId,\n            tenantId,\n            scopes,\n            expiresOn,\n            extendedExpiresOn,\n            base64Decode\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n            return accessTokenEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    private loadRefreshToken(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string\n    ): RefreshTokenEntity | null {\n        if (!response.refresh_token) {\n            this.logger.verbose(\n                \"TokenCache - No refresh token provided for caching\"\n            );\n            return null;\n        }\n\n        const refreshTokenEntity = CacheHelpers.createRefreshTokenEntity(\n            homeAccountId,\n            environment,\n            response.refresh_token,\n            this.config.auth.clientId\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading refresh token\");\n            this.storage.setRefreshTokenCredential(refreshTokenEntity);\n            return refreshTokenEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    private generateAuthenticationResult(\n        request: SilentRequest,\n        idTokenClaims: TokenClaims,\n        cacheRecord: CacheRecord,\n        accountEntity: AccountEntity,\n        authority?: Authority\n    ): AuthenticationResult {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            expiresOn = new Date(\n                Number(cacheRecord.accessToken.expiresOn) * 1000\n            );\n            extExpiresOn = new Date(\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\n            );\n        }\n\n        const uid =\n            idTokenClaims.oid || idTokenClaims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenClaims.tid || Constants.EMPTY_STRING;\n\n        return {\n            authority: authority\n                ? authority.canonicalAuthority\n                : Constants.EMPTY_STRING,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: cacheRecord.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || Constants.EMPTY_STRING,\n            requestId: Constants.EMPTY_STRING,\n            extExpiresOn: extExpiresOn,\n            familyId: Constants.EMPTY_STRING,\n            tokenType:\n                cacheRecord?.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: Constants.EMPTY_STRING,\n            cloudGraphHostName:\n                accountEntity.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: accountEntity.msGraphHost || Constants.EMPTY_STRING,\n            code: undefined,\n            fromNativeBroker: false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    CommonAuthorizationCodeRequest,\n    AuthError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { InteractionHandler } from \"../interaction_handler/InteractionHandler\";\n\nexport class SilentAuthCodeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.apiId = apiId;\n    }\n\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.authCodeRequired\n            );\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, InteractionType.Silent);\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n\n            // Initialize the client\n            const clientConfig = await invokeAsync(\n                this.getClientConfiguration.bind(this),\n                PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(serverTelemetryManager, silentRequest.authority);\n            const authClient: HybridSpaAuthorizationCodeClient =\n                new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create silent handler\n            const interactionHandler = new InteractionHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Handle auth code parameters from request\n            return invokeAsync(\n                interactionHandler.handleCodeResponseFromServer.bind(\n                    interactionHandler\n                ),\n                PerformanceEvents.HandleCodeResponseFromServer,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                {\n                    code: request.code,\n                    msgraph_host: request.msGraphHost,\n                    cloud_graph_host_name: request.cloudGraphHostName,\n                    cloud_instance_host_name: request.cloudInstanceHostName,\n                },\n                silentRequest,\n                false\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport {\n    InteractionRequiredAuthError,\n    AccountInfo,\n    Constants,\n    INetworkModule,\n    Logger,\n    CommonSilentFlowRequest,\n    ICrypto,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AuthError,\n    PerformanceEvents,\n    PerformanceCallbackFunction,\n    IPerformanceClient,\n    BaseAuthRequest,\n    PromptValue,\n    InProgressPerformanceEvent,\n    RequestThumbprint,\n    AccountEntity,\n    invokeAsync,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    AccountFilter,\n    buildStaticAuthorityOptions,\n    InteractionRequiredAuthErrorCodes,\n} from \"@azure/msal-common\";\nimport {\n    BrowserCacheManager,\n    DEFAULT_BROWSER_CACHE_MANAGER,\n} from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration, CacheOptions } from \"../config/Configuration\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserCacheLocation,\n    WrapperSKU,\n    TemporaryCacheKeys,\n    CacheLookupPolicy,\n    DEFAULT_REQUEST,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport * as BrowserUtils from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EventCallbackFunction, EventError } from \"../event/EventMessage\";\nimport { EventType } from \"../event/EventType\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupClient } from \"../interaction_client/PopupClient\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\nimport { TokenCache } from \"../cache/TokenCache\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { NativeInteractionClient } from \"../interaction_client/NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport {\n    NativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { BaseOperatingContext } from \"../operatingcontext/BaseOperatingContext\";\nimport { IController } from \"./IController\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport class StandardController implements IController {\n    // OperatingContext\n    protected readonly operatingContext: StandardOperatingContext;\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Native Cache in memory storage implementation\n    protected readonly nativeInternalStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected readonly config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected readonly eventHandler: EventHandler;\n\n    // Redirect Response Object\n    protected readonly redirectResponse: Map<\n        string,\n        Promise<AuthenticationResult | null>\n    >;\n\n    // Native Extension Provider\n    protected nativeExtensionProvider: NativeMessageHandler | undefined;\n\n    // Hybrid auth code responses\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\n\n    // Performance telemetry client\n    protected readonly performanceClient: IPerformanceClient;\n\n    // Flag representing whether or not the initialize API has been called and completed\n    protected initialized: boolean;\n\n    // Active requests\n    private activeSilentTokenRequests: Map<\n        string,\n        Promise<AuthenticationResult>\n    >;\n    private atsAsyncMeasurement?: InProgressPerformanceEvent = undefined;\n\n    private ssoSilentMeasurement?: InProgressPerformanceEvent;\n    private acquireTokenByCodeAsyncMeasurement?: InProgressPerformanceEvent;\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext: StandardOperatingContext) {\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(\n                  this.config.auth.clientId,\n                  this.config.cache,\n                  this.browserCrypto,\n                  this.logger,\n                  buildStaticAuthorityOptions(this.config.auth)\n              )\n            : DEFAULT_BROWSER_CACHE_MANAGER(\n                  this.config.auth.clientId,\n                  this.logger\n              );\n\n        // initialize in memory storage for native flows\n        const nativeCacheOptions: Required<CacheOptions> = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(\n            this.config.auth.clientId,\n            nativeCacheOptions,\n            this.browserCrypto,\n            this.logger\n        );\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(\n            this.config,\n            this.browserStorage,\n            this.logger,\n            this.browserCrypto\n        );\n\n        this.activeSilentTokenRequests = new Map();\n\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n\n    static async createController(\n        operatingContext: BaseOperatingContext\n    ): Promise<IController> {\n        const controller = new StandardController(operatingContext);\n        await controller.initialize();\n        return controller;\n    }\n\n    private trackPageVisibility(): void {\n        if (!this.atsAsyncMeasurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.atsAsyncMeasurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize(): Promise<void> {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\n                \"initialize has already been called, exiting early.\"\n            );\n            return;\n        }\n\n        const allowNativeBroker = this.config.system.allowNativeBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.InitializeClientApplication\n        );\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n\n        if (allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider =\n                    await NativeMessageHandler.createProvider(\n                        this.logger,\n                        this.config.system.nativeBrokerHandshakeTimeout,\n                        this.performanceClient\n                    );\n            } catch (e) {\n                this.logger.verbose(e as string);\n            }\n        }\n\n        if (!this.config.cache.claimsBasedCachingEnabled) {\n            this.logger.verbose(\n                \"Claims-based caching is disabled. Clearing the previous cache with claims\"\n            );\n\n            await invokeAsync(\n                this.browserStorage.clearTokensAndKeysWithClaims.bind(\n                    this.browserStorage\n                ),\n                PerformanceEvents.ClearTokensAndKeysWithClaims,\n                this.logger,\n                this.performanceClient\n            )(this.performanceClient);\n        }\n\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n\n        initMeasurement.end({ allowNativeBroker, success: true });\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey = hash || \"\";\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(\n                    EventType.HANDLE_REDIRECT_START,\n                    InteractionType.Redirect\n                );\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called for the first time, storing the promise\"\n                );\n\n                const request: NativeTokenRequest | null =\n                    this.browserStorage.getCachedNativeRequest();\n                let redirectResponse: Promise<AuthenticationResult | null>;\n                if (\n                    request &&\n                    NativeMessageHandler.isNativeAvailable(\n                        this.config,\n                        this.logger,\n                        this.nativeExtensionProvider\n                    ) &&\n                    this.nativeExtensionProvider &&\n                    !hash\n                ) {\n                    this.logger.trace(\n                        \"handleRedirectPromise - acquiring token from native platform\"\n                    );\n                    const nativeClient = new NativeInteractionClient(\n                        this.config,\n                        this.browserStorage,\n                        this.browserCrypto,\n                        this.logger,\n                        this.eventHandler,\n                        this.navigationClient,\n                        ApiId.handleRedirectPromise,\n                        this.performanceClient,\n                        this.nativeExtensionProvider,\n                        request.accountId,\n                        this.nativeInternalStorage,\n                        request.correlationId\n                    );\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                } else {\n                    this.logger.trace(\n                        \"handleRedirectPromise - acquiring token from web flow\"\n                    );\n                    const correlationId =\n                        this.browserStorage.getTemporaryCache(\n                            TemporaryCacheKeys.CORRELATION_ID,\n                            true\n                        ) || Constants.EMPTY_STRING;\n                    const redirectClient =\n                        this.createRedirectClient(correlationId);\n                    redirectResponse =\n                        redirectClient.handleRedirectPromise(hash);\n                }\n\n                response = redirectResponse\n                    .then((result: AuthenticationResult | null) => {\n                        if (result) {\n                            // Emit login event if number of accounts change\n\n                            const isLoggingIn =\n                                loggedInAccounts.length <\n                                this.getAllAccounts().length;\n                            if (isLoggingIn) {\n                                this.eventHandler.emitEvent(\n                                    EventType.LOGIN_SUCCESS,\n                                    InteractionType.Redirect,\n                                    result\n                                );\n                                this.logger.verbose(\n                                    \"handleRedirectResponse returned result, login success\"\n                                );\n                            } else {\n                                this.eventHandler.emitEvent(\n                                    EventType.ACQUIRE_TOKEN_SUCCESS,\n                                    InteractionType.Redirect,\n                                    result\n                                );\n                                this.logger.verbose(\n                                    \"handleRedirectResponse returned result, acquire token success\"\n                                );\n                            }\n                        }\n                        this.eventHandler.emitEvent(\n                            EventType.HANDLE_REDIRECT_END,\n                            InteractionType.Redirect\n                        );\n\n                        return result;\n                    })\n                    .catch((e) => {\n                        // Emit login event if there is an account\n                        if (loggedInAccounts.length > 0) {\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_FAILURE,\n                                InteractionType.Redirect,\n                                null,\n                                e as EventError\n                            );\n                        } else {\n                            this.eventHandler.emitEvent(\n                                EventType.LOGIN_FAILURE,\n                                InteractionType.Redirect,\n                                null,\n                                e as EventError\n                            );\n                        }\n                        this.eventHandler.emitEvent(\n                            EventType.HANDLE_REDIRECT_END,\n                            InteractionType.Redirect\n                        );\n\n                        throw e;\n                    });\n                this.redirectResponse.set(redirectResponseKey, response);\n            } else {\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called previously, returning the result from the first call\"\n                );\n            }\n\n            return response;\n        }\n        this.logger.verbose(\n            \"handleRedirectPromise returns null, not browser environment\"\n        );\n        return null;\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_START,\n                InteractionType.Redirect,\n                request\n            );\n        } else {\n            this.eventHandler.emitEvent(\n                EventType.LOGIN_START,\n                InteractionType.Redirect,\n                request\n            );\n        }\n\n        let result: Promise<void>;\n\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                ApiId.acquireTokenRedirect,\n                this.performanceClient,\n                this.nativeExtensionProvider,\n                this.getNativeAccountId(request),\n                this.nativeInternalStorage,\n                correlationId\n            );\n            result = nativeClient\n                .acquireTokenRedirect(request)\n                .catch((e: AuthError) => {\n                    if (\n                        e instanceof NativeAuthError &&\n                        isFatalNativeAuthError(e)\n                    ) {\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        const redirectClient =\n                            this.createRedirectClient(correlationId);\n                        return redirectClient.acquireToken(request);\n                    } else if (e instanceof InteractionRequiredAuthError) {\n                        this.logger.verbose(\n                            \"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                        );\n                        const redirectClient =\n                            this.createRedirectClient(correlationId);\n                        return redirectClient.acquireToken(request);\n                    }\n                    this.getBrowserStorage().setInteractionInProgress(false);\n                    throw e;\n                });\n        } else {\n            const redirectClient = this.createRedirectClient(correlationId);\n            result = redirectClient.acquireToken(request);\n        }\n\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e\n                );\n            } else {\n                this.eventHandler.emitEvent(\n                    EventType.LOGIN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e\n                );\n            }\n            throw e;\n        });\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPopup,\n            correlationId\n        );\n\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_START,\n                InteractionType.Popup,\n                request\n            );\n        } else {\n            this.eventHandler.emitEvent(\n                EventType.LOGIN_START,\n                InteractionType.Popup,\n                request\n            );\n        }\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(\n                {\n                    ...request,\n                    correlationId,\n                },\n                ApiId.acquireTokenPopup\n            )\n                .then((response) => {\n                    this.getBrowserStorage().setInteractionInProgress(false);\n                    atPopupMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                        requestId: response.requestId,\n                    });\n                    return response;\n                })\n                .catch((e: AuthError) => {\n                    if (\n                        e instanceof NativeAuthError &&\n                        isFatalNativeAuthError(e)\n                    ) {\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        const popupClient =\n                            this.createPopupClient(correlationId);\n                        return popupClient.acquireToken(request);\n                    } else if (e instanceof InteractionRequiredAuthError) {\n                        this.logger.verbose(\n                            \"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                        );\n                        const popupClient =\n                            this.createPopupClient(correlationId);\n                        return popupClient.acquireToken(request);\n                    }\n                    this.getBrowserStorage().setInteractionInProgress(false);\n                    throw e;\n                });\n        } else {\n            const popupClient = this.createPopupClient(correlationId);\n            result = popupClient.acquireToken(request);\n        }\n\n        return result\n            .then((result) => {\n                /*\n                 *  If logged in, emit acquire token events\n                 */\n                const isLoggingIn =\n                    loggedInAccounts.length < this.getAllAccounts().length;\n                if (isLoggingIn) {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                }\n\n                atPopupMeasurement.add({\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                atPopupMeasurement.end({\n                    success: true,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n            .catch((e: AuthError) => {\n                if (loggedInAccounts.length > 0) {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                }\n\n                atPopupMeasurement.end({\n                    errorCode: e.errorCode,\n                    subErrorCode: e.subError,\n                    success: false,\n                });\n                // Since this function is syncronous we need to reject\n                return Promise.reject(e);\n            });\n    }\n\n    private trackPageVisibilityWithMeasurement(): void {\n        const measurement =\n            this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n\n        this.logger.info(\n            \"Perf: Visibility change detected in \",\n            measurement.event.name\n        );\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.SsoSilent,\n            correlationId\n        );\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(\n            EventType.SSO_SILENT_START,\n            InteractionType.Silent,\n            validRequest\n        );\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(\n                validRequest,\n                ApiId.ssoSilent\n            ).catch((e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(\n                        validRequest.correlationId\n                    );\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        } else {\n            const silentIframeClient = this.createSilentIframeClient(\n                validRequest.correlationId\n            );\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                this.ssoSilentMeasurement?.add({\n                    accessTokenSize: response.accessToken.length,\n                    idTokenSize: response.idToken.length,\n                });\n                this.ssoSilentMeasurement?.end({\n                    success: true,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((e: AuthError) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    e\n                );\n                this.ssoSilentMeasurement?.end({\n                    errorCode: e.errorCode,\n                    subErrorCode: e.subError,\n                    success: false,\n                });\n                throw e;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_BY_CODE_START,\n            InteractionType.Silent,\n            request\n        );\n        const atbcMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenByCode,\n            correlationId\n        );\n\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n                );\n            } else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\n                        \"Initiating new acquireTokenByCode request\",\n                        correlationId\n                    );\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result: AuthenticationResult) => {\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS,\n                                InteractionType.Silent,\n                                result\n                            );\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            atbcMeasurement.add({\n                                accessTokenSize: result.accessToken.length,\n                                idTokenSize: result.idToken.length,\n                            });\n                            atbcMeasurement.end({\n                                success: true,\n                                isNativeBroker: result.fromNativeBroker,\n                                requestId: result.requestId,\n                            });\n                            return result;\n                        })\n                        .catch((error: AuthError) => {\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                                InteractionType.Silent,\n                                null,\n                                error\n                            );\n                            atbcMeasurement.end({\n                                errorCode: error.errorCode,\n                                subErrorCode: error.subError,\n                                success: false,\n                            });\n                            throw error;\n                        });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                } else {\n                    this.logger.verbose(\n                        \"Existing acquireTokenByCode request found\",\n                        correlationId\n                    );\n                    atbcMeasurement.discard();\n                }\n                return response;\n            } else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return this.acquireTokenNative(\n                        {\n                            ...request,\n                            correlationId,\n                        },\n                        ApiId.acquireTokenByCode,\n                        request.nativeAccountId\n                    ).catch((e: AuthError) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (\n                            e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)\n                        ) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                } else {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n                    );\n                }\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n                );\n            }\n        } catch (e) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                InteractionType.Silent,\n                null,\n                e as EventError\n            );\n            atbcMeasurement.end({\n                errorCode: (e instanceof AuthError && e.errorCode) || undefined,\n                subErrorCode:\n                    (e instanceof AuthError && e.subError) || undefined,\n                success: false,\n            });\n            throw e;\n        }\n    }\n\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    private async acquireTokenByCodeAsync(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"acquireTokenByCodeAsync called\",\n            request.correlationId\n        );\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(\n                PerformanceEvents.AcquireTokenByCodeAsync,\n                request.correlationId\n            );\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(\n            request.correlationId\n        );\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end({\n                    success: true,\n                    fromCache: response.fromCache,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((tokenRenewalError: AuthError) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end({\n                    errorCode: tokenRenewalError.errorCode,\n                    subErrorCode: tokenRenewalError.subError,\n                    success: false,\n                });\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n        return silentTokenResult;\n    }\n\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenFromCache(\n        silentCacheClient: SilentCacheClient,\n        commonRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenFromCache,\n            commonRequest.correlationId\n        );\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessToken:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n                return invokeAsync(\n                    silentCacheClient.acquireToken.bind(silentCacheClient),\n                    PerformanceEvents.SilentCacheClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param cacheLookupPolicy CacheLookupPolicy\n     * @returns A promise that, when resolved, returns the access token\n     */\n    public async acquireTokenByRefreshToken(\n        commonRequest: CommonSilentFlowRequest,\n        cacheLookupPolicy: CacheLookupPolicy\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenByRefreshToken,\n            commonRequest.correlationId\n        );\n        switch (cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case CacheLookupPolicy.RefreshToken:\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(\n                    commonRequest.correlationId\n                );\n\n                return invokeAsync(\n                    silentRefreshClient.acquireToken.bind(silentRefreshClient),\n                    PerformanceEvents.SilentRefreshClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenBySilentIframe(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenBySilentIframe,\n            request.correlationId\n        );\n\n        const silentIframeClient = this.createSilentIframeClient(\n            request.correlationId\n        );\n\n        return invokeAsync(\n            silentIframeClient.acquireToken.bind(silentIframeClient),\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\n            \"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\",\n            correlationId\n        );\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Creates a cache interaction client to clear broswer cache.\n     * @param logoutRequest\n     */\n    async clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        const cacheClient = this.createSilentCacheClient(correlationId);\n        return cacheClient.logout(logoutRequest);\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment\n            ? this.browserStorage.getAllAccounts(accountFilter)\n            : [];\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        this.logger.trace(\"getAccount called\");\n        if (Object.keys(accountFilter).length === 0) {\n            this.logger.warning(\"getAccount: No accountFilter provided\");\n            return null;\n        }\n\n        const account: AccountInfo | null =\n            this.browserStorage.getAccountInfoFilteredBy(accountFilter);\n\n        if (account) {\n            this.logger.verbose(\n                \"getAccount: Account matching provided filter found, returning\"\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccount: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username: string): AccountInfo | null {\n        this.logger.trace(\"getAccountByUsername called\");\n        if (!username) {\n            this.logger.warning(\"getAccountByUsername: No username provided\");\n            return null;\n        }\n\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            username,\n        });\n        if (account) {\n            this.logger.verbose(\n                \"getAccountByUsername: Account matching username found, returning\"\n            );\n            this.logger.verbosePii(\n                `getAccountByUsername: Returning signed-in accounts matching username: ${username}`\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccountByUsername: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        this.logger.trace(\"getAccountByHomeId called\");\n        if (!homeAccountId) {\n            this.logger.warning(\n                \"getAccountByHomeId: No homeAccountId provided\"\n            );\n            return null;\n        }\n\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            homeAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\n                \"getAccountByHomeId: Account matching homeAccountId found, returning\"\n            );\n            this.logger.verbosePii(\n                `getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccountByHomeId: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        this.logger.trace(\"getAccountByLocalId called\");\n        if (!localAccountId) {\n            this.logger.warning(\n                \"getAccountByLocalId: No localAccountId provided\"\n            );\n            return null;\n        }\n\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            localAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\n                \"getAccountByLocalId: Account matching localAccountId found, returning\"\n            );\n            this.logger.verbosePii(\n                `getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccountByLocalId: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.browserStorage.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.browserStorage.getActiveAccount();\n    }\n\n    // #endregion\n\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        this.logger.verbose(\"hydrateCache called\");\n\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = AccountEntity.createFromAccountInfo(\n            result.account,\n            result.cloudGraphHostName,\n            result.msGraphHost\n        );\n        this.browserStorage.setAccount(accountEntity);\n\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\n                \"Response was from native broker, storing in-memory\"\n            );\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        } else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n\n    // #region Helpers\n\n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [isAppEmbedded=false] Whether to set interaction in progress temp cache flag\n     */\n    public preflightBrowserEnvironmentCheck(\n        interactionType: InteractionType,\n        isAppEmbedded: boolean = false\n    ): void {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\n\n        // Block redirects if in an iframe\n        BrowserUtils.blockRedirectInIframe(\n            interactionType,\n            this.config.system.allowRedirectInIframe\n        );\n\n        // Block auth requests inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        BrowserUtils.blockAcquireTokenInPopups();\n\n        // Block token acquisition before initialize has been called\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (\n            interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation ===\n                BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie\n        ) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n            );\n        }\n\n        if (\n            interactionType === InteractionType.Redirect ||\n            interactionType === InteractionType.Popup\n        ) {\n            this.preflightInteractiveRequest(!isAppEmbedded);\n        }\n    }\n\n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    protected preflightInteractiveRequest(\n        setInteractionInProgress: boolean\n    ): void {\n        this.logger.verbose(\n            \"preflightInteractiveRequest called, validating app environment\"\n        );\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.getBrowserStorage().setInteractionInProgress(true);\n        }\n    }\n\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    public async acquireTokenNative(\n        request: PopupRequest | SilentRequest | SsoSilentRequest,\n        apiId: ApiId,\n        accountId?: string\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nativeConnectionNotEstablished\n            );\n        }\n\n        const nativeClient = new NativeInteractionClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            apiId,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            accountId || this.getNativeAccountId(request),\n            this.nativeInternalStorage,\n            request.correlationId\n        );\n\n        return nativeClient.acquireToken(request);\n    }\n\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    public canUseNative(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        accountId?: string\n    ): boolean {\n        this.logger.trace(\"canUseNative called\");\n        if (\n            !NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider,\n                request.authenticationScheme\n            )\n        ) {\n            this.logger.trace(\n                \"canUseNative: isNativeAvailable returned false, returning false\"\n            );\n            return false;\n        }\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"canUseNative: prompt is compatible with native flow\"\n                    );\n                    break;\n                default:\n                    this.logger.trace(\n                        `canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`\n                    );\n                    return false;\n            }\n        }\n\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\n                \"canUseNative: nativeAccountId is not available, returning false\"\n            );\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    public getNativeAccountId(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): string {\n        const account =\n            request.account ||\n            this.browserStorage.getAccountInfoFilteredBy({\n                loginHint: request.loginHint,\n                sid: request.sid,\n            }) ||\n            this.getActiveAccount();\n\n        return (account && account.nativeAccountId) || \"\";\n    }\n\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    public createPopupClient(correlationId?: string): PopupClient {\n        return new PopupClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    protected createRedirectClient(correlationId?: string): RedirectClient {\n        return new RedirectClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    public createSilentIframeClient(\n        correlationId?: string\n    ): SilentIframeClient {\n        return new SilentIframeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.ssoSilent,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    protected createSilentCacheClient(\n        correlationId?: string\n    ): SilentCacheClient {\n        return new SilentCacheClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    protected createSilentRefreshClient(\n        correlationId?: string\n    ): SilentRefreshClient {\n        return new SilentRefreshClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    protected createSilentAuthCodeClient(\n        correlationId?: string\n    ): SilentAuthCodeClient {\n        return new SilentAuthCodeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.acquireTokenByCode,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    public getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    public getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the performance client\n     */\n    public getPerformanceClient(): IPerformanceClient {\n        return this.performanceClient;\n    }\n\n    /**\n     * Returns the browser storage\n     */\n    public getBrowserStorage(): BrowserCacheManager {\n        return this.browserStorage;\n    }\n\n    /**\n     * Returns the browser env indicator\n     */\n    public isBrowserEnv(): boolean {\n        return this.isBrowserEnvironment;\n    }\n\n    /**\n     * Returns the event handler\n     */\n    getEventHandler(): EventHandler {\n        return this.eventHandler;\n    }\n\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    protected getRequestCorrelationId(\n        request?: Partial<BaseAuthRequest>\n    ): string {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n\n        if (this.isBrowserEnvironment) {\n            return createNewGuid();\n        }\n\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n\n    // #endregion\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(\n        request: SilentRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenSilent,\n            correlationId\n        );\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n        });\n\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noAccountError);\n        }\n\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n            shrOptions: request.shrOptions,\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n\n        const cachedResponse =\n            this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\n                \"acquireTokenSilent called for the first time, storing active request\",\n                correlationId\n            );\n\n            const response = invokeAsync(\n                this.acquireTokenSilentAsync.bind(this),\n                PerformanceEvents.AcquireTokenSilentAsync,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(\n                {\n                    ...request,\n                    correlationId,\n                },\n                account\n            )\n                .then((result) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.add({\n                        accessTokenSize: result.accessToken.length,\n                        idTokenSize: result.idToken.length,\n                    });\n                    atsMeasurement.end({\n                        success: true,\n                        fromCache: result.fromCache,\n                        isNativeBroker: result.fromNativeBroker,\n                        cacheLookupPolicy: request.cacheLookupPolicy,\n                        requestId: result.requestId,\n                    });\n                    return result;\n                })\n                .catch((error: AuthError) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.end({\n                        errorCode: error.errorCode,\n                        subErrorCode: error.subError,\n                        success: false,\n                    });\n                    throw error;\n                });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent has been called previously, returning the result from the first call\",\n                correlationId\n            );\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discard();\n            return cachedResponse;\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    protected async acquireTokenSilentAsync(\n        request: SilentRequest,\n        account: AccountInfo\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenSilentAsync,\n            request.correlationId\n        );\n\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_START,\n            InteractionType.Silent,\n            request\n        );\n        this.atsAsyncMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenSilentAsync,\n            request.correlationId\n        );\n        this.atsAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibility);\n        let result: Promise<AuthenticationResult>;\n        if (\n            NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider,\n                request.authenticationScheme\n            ) &&\n            account.nativeAccountId\n        ) {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from native platform\"\n            );\n            const silentRequest: SilentRequest = {\n                ...request,\n                account,\n            };\n            result = this.acquireTokenNative(\n                silentRequest,\n                ApiId.acquireTokenSilent_silentFlow\n            ).catch(async (e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.logger.verbose(\n                        \"acquireTokenSilent - native platform unavailable, falling back to web flow\"\n                    );\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\n\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(\n                        request.correlationId\n                    );\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from web flow\"\n            );\n\n            const silentCacheClient = this.createSilentCacheClient(\n                request.correlationId\n            );\n\n            const silentRequest = await invokeAsync(\n                silentCacheClient.initializeSilentRequest.bind(\n                    silentCacheClient\n                ),\n                PerformanceEvents.InitializeSilentRequest,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(request, account);\n\n            const cacheLookupPolicy =\n                request.cacheLookupPolicy || CacheLookupPolicy.Default;\n\n            result = invokeAsync(\n                this.acquireTokenFromCache.bind(this),\n                PerformanceEvents.AcquireTokenFromCache,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentCacheClient, silentRequest, cacheLookupPolicy).catch(\n                (cacheError: AuthError) => {\n                    if (\n                        request.cacheLookupPolicy ===\n                        CacheLookupPolicy.AccessToken\n                    ) {\n                        throw cacheError;\n                    }\n\n                    // block the reload if it occurred inside a hidden iframe\n                    BrowserUtils.blockReloadInHiddenIframes();\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_NETWORK_START,\n                        InteractionType.Silent,\n                        silentRequest\n                    );\n\n                    return invokeAsync(\n                        this.acquireTokenByRefreshToken.bind(this),\n                        PerformanceEvents.AcquireTokenByRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest, cacheLookupPolicy).catch(\n                        (refreshTokenError: AuthError) => {\n                            const isSilentlyResolvable =\n                                (!(\n                                    refreshTokenError instanceof\n                                    InteractionRequiredAuthError\n                                ) &&\n                                    (refreshTokenError.errorCode ===\n                                        BrowserConstants.INVALID_GRANT_ERROR ||\n                                        refreshTokenError.errorCode ===\n                                            ClientAuthErrorCodes.tokenRefreshRequired)) ||\n                                refreshTokenError.errorCode ===\n                                    InteractionRequiredAuthErrorCodes.noTokensFound;\n\n                            const tryIframeRenewal =\n                                cacheLookupPolicy ===\n                                    CacheLookupPolicy.Default ||\n                                cacheLookupPolicy === CacheLookupPolicy.Skip ||\n                                cacheLookupPolicy ===\n                                    CacheLookupPolicy.RefreshTokenAndNetwork;\n\n                            if (isSilentlyResolvable && tryIframeRenewal) {\n                                this.logger.verbose(\n                                    \"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\",\n                                    request.correlationId\n                                );\n                                return invokeAsync(\n                                    this.acquireTokenBySilentIframe.bind(this),\n                                    PerformanceEvents.AcquireTokenBySilentIframe,\n                                    this.logger,\n                                    this.performanceClient,\n                                    silentRequest.correlationId\n                                )(silentRequest);\n                            } else {\n                                throw refreshTokenError;\n                            }\n                        }\n                    );\n                }\n            );\n        }\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                this.atsAsyncMeasurement?.end({\n                    success: true,\n                    fromCache: response.fromCache,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((tokenRenewalError: AuthError) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    tokenRenewalError\n                );\n                this.atsAsyncMeasurement?.end({\n                    errorCode: tokenRenewalError.errorCode,\n                    subErrorCode: tokenRenewalError.subError,\n                    success: false,\n                });\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibility\n                );\n            });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n} from \"@azure/msal-common\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\n\n/**\n * This file defines functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\n\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n\nconst keygenAlgorithmOptions: RsaHashedKeyGenParams = {\n    name: PKCS1_V15_KEYGEN_ALG,\n    hash: S256_HASH_ALG,\n    modulusLength: MODULUS_LENGTH,\n    publicExponent: PUBLIC_EXPONENT,\n};\n\n/**\n * Check whether browser crypto is available.\n */\nexport function validateCryptoAvailable(logger: Logger): void {\n    if (\"crypto\" in window) {\n        logger.verbose(\"BrowserCrypto: modern crypto interface available\");\n    } else {\n        logger.error(\"BrowserCrypto: crypto interface is unavailable\");\n        throw createBrowserAuthError(BrowserAuthErrorCodes.cryptoNonExistent);\n    }\n}\n\n/**\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n * @param dataString\n */\nexport async function sha256Digest(\n    dataString: string,\n    performanceClient?: IPerformanceClient,\n    correlationId?: string\n): Promise<ArrayBuffer> {\n    performanceClient?.addQueueMeasurement(\n        PerformanceEvents.Sha256Digest,\n        correlationId\n    );\n    const encoder = new TextEncoder();\n    const data = encoder.encode(dataString);\n    return window.crypto.subtle.digest(\n        S256_HASH_ALG,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n\n/**\n * Populates buffer with cryptographically random values.\n * @param dataBuffer\n */\nexport function getRandomValues(dataBuffer: Uint8Array): Uint8Array {\n    return window.crypto.getRandomValues(dataBuffer);\n}\n\n/**\n * Creates a new random GUID\n * @returns\n */\nexport function createNewGuid(): string {\n    return window.crypto.randomUUID();\n}\n\n/**\n * Generates a keypair based on current keygen algorithm config.\n * @param extractable\n * @param usages\n */\nexport async function generateKeyPair(\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKeyPair> {\n    return window.crypto.subtle.generateKey(\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKeyPair>;\n}\n\n/**\n * Export key as Json Web Key (JWK)\n * @param key\n */\nexport async function exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n    return window.crypto.subtle.exportKey(\n        KEY_FORMAT_JWK,\n        key\n    ) as Promise<JsonWebKey>;\n}\n\n/**\n * Imports key as Json Web Key (JWK), can set extractable and usages.\n * @param key\n * @param extractable\n * @param usages\n */\nexport async function importJwk(\n    key: JsonWebKey,\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKey> {\n    return window.crypto.subtle.importKey(\n        KEY_FORMAT_JWK,\n        key,\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKey>;\n}\n\n/**\n * Signs given data with given key\n * @param key\n * @param data\n */\nexport async function sign(\n    key: CryptoKey,\n    data: ArrayBuffer\n): Promise<ArrayBuffer> {\n    return window.crypto.subtle.sign(\n        keygenAlgorithmOptions,\n        key,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as JoseHeaderErrorCodes from \"./JoseHeaderErrorCodes\";\nexport { JoseHeaderErrorCodes };\n\nexport const JoseHeaderErrorMessages = {\n    [JoseHeaderErrorCodes.missingKidError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    [JoseHeaderErrorCodes.missingAlgError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n}\n\n/** Returns JoseHeaderError object */\nexport function createJoseHeaderError(code: string): JoseHeaderError {\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    JoseHeaderErrorCodes,\n    createJoseHeaderError,\n} from \"../error/JoseHeaderError\";\nimport { JsonWebTokenTypes } from \"../utils/Constants\";\n\nexport type JoseHeaderOptions = {\n    typ?: JsonWebTokenTypes;\n    alg?: string;\n    kid?: string;\n};\n\n/** @internal */\nexport class JoseHeader {\n    public typ?: JsonWebTokenTypes;\n    public alg?: string;\n    public kid?: string;\n\n    constructor(options: JoseHeaderOptions) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingKidError);\n        }\n\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingAlgError);\n        }\n\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonWebTokenTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n\n        return JSON.stringify(shrHeader);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DB_NAME, DB_TABLE_NAME, DB_VERSION } from \"../utils/BrowserConstants\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase | undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\n                \"upgradeneeded\",\n                (e: IDBVersionChangeEvent) => {\n                    const event = e as IDBOpenOnUpgradeNeededEvent;\n                    event.target.result.createObjectStore(this.tableName);\n                }\n            );\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () =>\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseUnavailable\n                    )\n                )\n            );\n        });\n    }\n\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection(): void {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n\n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGet.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGetKeys.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        // Check if database being deleted exists\n\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"blocked\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"error\", () => reject(false));\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DatabaseStorage } from \"./DatabaseStorage\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n    private storeName: string;\n\n    constructor(logger: Logger, storeName: string) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (\n            error instanceof BrowserAuthError &&\n            error.errorCode === BrowserAuthErrorCodes.databaseUnavailable\n        ) {\n            this.logger.error(\n                \"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n            );\n        } else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\n                    \"Queried item not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\n                    \"In-memory cache is empty, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\n                    \"Key not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory(): void {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n    }\n\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent(): Promise<boolean> {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n\n            return dbDeleted;\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport { CachedKeyPair } from \"../crypto/CryptoOps\";\nimport { AsyncMemoryStorage } from \"./AsyncMemoryStorage\";\n\nexport const CryptoKeyStoreNames = {\n    asymmetricKeys: \"asymmetricKeys\",\n    symmetricKeys: \"symmetricKeys\",\n} as const;\nexport type CryptoKeyStoreNames =\n    (typeof CryptoKeyStoreNames)[keyof typeof CryptoKeyStoreNames];\n\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nexport class CryptoKeyStore {\n    public asymmetricKeys: AsyncMemoryStorage<CachedKeyPair>;\n    public symmetricKeys: AsyncMemoryStorage<CryptoKey>;\n    public logger: Logger;\n\n    constructor(logger: Logger) {\n        this.logger = logger;\n        this.asymmetricKeys = new AsyncMemoryStorage<CachedKeyPair>(\n            this.logger,\n            CryptoKeyStoreNames.asymmetricKeys\n        );\n        this.symmetricKeys = new AsyncMemoryStorage<CryptoKey>(\n            this.logger,\n            CryptoKeyStoreNames.symmetricKeys\n        );\n    }\n\n    async clear(): Promise<boolean> {\n        // Delete in-memory keystores\n        this.asymmetricKeys.clearInMemory();\n        this.symmetricKeys.clearInMemory();\n\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.asymmetricKeys.clearPersistent();\n            return true;\n        } catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(\n                    `Clearing keystore failed with error: ${e.message}`\n                );\n            } else {\n                this.logger.error(\n                    \"Clearing keystore failed with unknown error\"\n                );\n            }\n\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    IPerformanceClient,\n    JoseHeader,\n    Logger,\n    PerformanceEvents,\n    ShrOptions,\n    SignedHttpRequest,\n    SignedHttpRequestParameters,\n} from \"@azure/msal-common\";\nimport { base64Encode, urlEncode, urlEncodeArr } from \"../encode/Base64Encode\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport * as BrowserCrypto from \"./BrowserCrypto\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { CryptoKeyStore } from \"../cache/CryptoKeyStore\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey;\n    privateKey: CryptoKey;\n    requestMethod?: string;\n    requestUri?: string;\n};\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n    private logger: Logger;\n\n    /**\n     * CryptoOps can be used in contexts outside a PCA instance,\n     * meaning there won't be a performance manager available.\n     */\n    private performanceClient: IPerformanceClient | undefined;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: CryptoKeyStore;\n\n    constructor(logger: Logger, performanceClient?: IPerformanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        BrowserCrypto.validateCryptoAvailable(logger);\n        this.cache = new CryptoKeyStore(this.logger);\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return BrowserCrypto.createNewGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input: string): string {\n        return base64Encode(input);\n    }\n\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input: string): string {\n        return base64Decode(input);\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        const publicKeyThumbMeasurement =\n            this.performanceClient?.startMeasurement(\n                PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n                request.correlationId\n            );\n\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await BrowserCrypto.generateKeyPair(\n            CryptoOps.EXTRACTABLE,\n            CryptoOps.POP_KEY_USAGES\n        );\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.publicKey\n        );\n\n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n\n        const publicJwkString: string =\n            getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.privateKey\n        );\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey =\n            await BrowserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        return await this.cache.clear();\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        shrOptions?: ShrOptions,\n        correlationId?: string\n    ): Promise<string> {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(\n            PerformanceEvents.CryptoOptsSignJwt,\n            correlationId\n        );\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n\n        if (!cachedKeyPair) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.cryptoKeyNotFound\n            );\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await BrowserCrypto.exportJwk(\n            cachedKeyPair.publicKey\n        );\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({\n            ...shrOptions?.header,\n            alg: publicKeyJwk.alg,\n            kid: encodedKeyIdThumbprint,\n        });\n\n        const encodedShrHeader = urlEncode(shrHeader);\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n\n        // Sign token\n        const encoder = new TextEncoder();\n        const tokenBuffer = encoder.encode(tokenString);\n        const signatureBuffer = await BrowserCrypto.sign(\n            cachedKeyPair.privateKey,\n            tokenBuffer\n        );\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n\n        return signedJwt;\n    }\n\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText: string): Promise<string> {\n        const hashBuffer: ArrayBuffer = await BrowserCrypto.sha256Digest(\n            plainText\n        );\n        const hashBytes = new Uint8Array(hashBuffer);\n        return urlEncodeArr(hashBytes);\n    }\n}\n\nfunction getSortedObjectString(obj: object): string {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nexport function urlEncode(input: string): string {\n    return encodeURIComponent(\n        base64Encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n    );\n}\n\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nexport function urlEncodeArr(inputArr: Uint8Array): string {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nexport function base64Encode(input: string): string {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes: Uint8Array): string {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\n        \"\"\n    );\n    return btoa(binString);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\nimport * as BrowserAuthErrorCodes from \"./BrowserAuthErrorCodes\";\nexport { BrowserAuthErrorCodes }; // Allow importing as \"BrowserAuthErrorCodes\"\n\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessages = {\n    [BrowserAuthErrorCodes.pkceNotCreated]:\n        \"The PKCE code challenge and verifier could not be generated.\",\n    [BrowserAuthErrorCodes.cryptoNonExistent]:\n        \"The crypto object or function is not available.\",\n    [BrowserAuthErrorCodes.emptyNavigateUri]:\n        \"Navigation URI is empty. Please check stack trace for more info.\",\n    [BrowserAuthErrorCodes.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\n    [BrowserAuthErrorCodes.noStateInHash]:\n        \"Hash does not contain state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.unableToParseState]:\n        \"Unable to parse state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.stateInteractionTypeMismatch]:\n        \"Hash contains state but the interaction type does not match the caller.\",\n    [BrowserAuthErrorCodes.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\n    [BrowserAuthErrorCodes.popupWindowError]:\n        \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    [BrowserAuthErrorCodes.emptyWindowError]:\n        \"window.open returned null or undefined window object.\",\n    [BrowserAuthErrorCodes.userCancelled]: \"User cancelled the flow.\",\n    [BrowserAuthErrorCodes.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.redirectInIframe]:\n        \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    [BrowserAuthErrorCodes.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.blockNestedPopups]:\n        \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    [BrowserAuthErrorCodes.iframeClosedPrematurely]:\n        \"The iframe being monitored was closed prematurely.\",\n    [BrowserAuthErrorCodes.silentLogoutUnsupported]:\n        \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    [BrowserAuthErrorCodes.noAccountError]:\n        \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    [BrowserAuthErrorCodes.silentPromptValueError]:\n        \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    [BrowserAuthErrorCodes.noTokenRequestCacheError]:\n        \"No token request found in cache.\",\n    [BrowserAuthErrorCodes.unableToParseTokenRequestCacheError]:\n        \"The cached token request could not be parsed.\",\n    [BrowserAuthErrorCodes.noCachedAuthorityError]:\n        \"No cached authority found.\",\n    [BrowserAuthErrorCodes.authRequestNotSetError]:\n        \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    [BrowserAuthErrorCodes.invalidCacheType]: \"Invalid cache type\",\n    [BrowserAuthErrorCodes.nonBrowserEnvironment]:\n        \"Login and token requests are not supported in non-browser environments.\",\n    [BrowserAuthErrorCodes.databaseNotOpen]: \"Database is not open!\",\n    [BrowserAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [BrowserAuthErrorCodes.postRequestFailed]:\n        \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    [BrowserAuthErrorCodes.getRequestFailed]:\n        \"Network request failed. Please check the network trace to determine root cause.\",\n    [BrowserAuthErrorCodes.failedToParseResponse]:\n        \"Failed to parse network response. Check network trace.\",\n    [BrowserAuthErrorCodes.unableToLoadToken]: \"Error loading token to cache.\",\n    [BrowserAuthErrorCodes.cryptoKeyNotFound]:\n        \"Cryptographic Key or Keypair not found in browser storage.\",\n    [BrowserAuthErrorCodes.authCodeRequired]:\n        \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    [BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired]:\n        \"An authorization code or nativeAccountId must be provided to this flow.\",\n    [BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent]:\n        \"Request cannot contain both spa code and native account id.\",\n    [BrowserAuthErrorCodes.databaseUnavailable]:\n        \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    [BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativeHandshakeTimeout]:\n        \"Timed out while attempting to establish connection to browser extension\",\n    [BrowserAuthErrorCodes.nativeExtensionNotInstalled]:\n        \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    [BrowserAuthErrorCodes.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativePromptNotSupported]:\n        \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    [BrowserAuthErrorCodes.invalidBase64String]:\n        \"Invalid base64 encoded string.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use exported BrowserAuthErrorCodes instead.\n * In your app you can do :\n * ```\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\n * ```\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: BrowserAuthErrorCodes.pkceNotCreated,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.pkceNotCreated],\n    },\n    cryptoDoesNotExist: {\n        code: BrowserAuthErrorCodes.cryptoNonExistent,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoNonExistent],\n    },\n    emptyNavigateUriError: {\n        code: BrowserAuthErrorCodes.emptyNavigateUri,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyNavigateUri],\n    },\n    hashEmptyError: {\n        code: BrowserAuthErrorCodes.hashEmptyError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.hashEmptyError],\n    },\n    hashDoesNotContainStateError: {\n        code: BrowserAuthErrorCodes.noStateInHash,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noStateInHash],\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: BrowserAuthErrorCodes.hashDoesNotContainKnownProperties,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n        ],\n    },\n    unableToParseStateError: {\n        code: BrowserAuthErrorCodes.unableToParseState,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseState\n        ],\n    },\n    stateInteractionTypeMismatchError: {\n        code: BrowserAuthErrorCodes.stateInteractionTypeMismatch,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        ],\n    },\n    interactionInProgress: {\n        code: BrowserAuthErrorCodes.interactionInProgress,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.interactionInProgress\n        ],\n    },\n    popupWindowError: {\n        code: BrowserAuthErrorCodes.popupWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.popupWindowError],\n    },\n    emptyWindowError: {\n        code: BrowserAuthErrorCodes.emptyWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyWindowError],\n    },\n    userCancelledError: {\n        code: BrowserAuthErrorCodes.userCancelled,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.userCancelled],\n    },\n    monitorPopupTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorPopupTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorPopupTimeout\n        ],\n    },\n    monitorIframeTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorWindowTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorWindowTimeout\n        ],\n    },\n    redirectInIframeError: {\n        code: BrowserAuthErrorCodes.redirectInIframe,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.redirectInIframe],\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: BrowserAuthErrorCodes.blockIframeReload,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockIframeReload],\n    },\n    blockAcquireTokenInPopupsError: {\n        code: BrowserAuthErrorCodes.blockNestedPopups,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockNestedPopups],\n    },\n    iframeClosedPrematurelyError: {\n        code: BrowserAuthErrorCodes.iframeClosedPrematurely,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.iframeClosedPrematurely\n        ],\n    },\n    silentLogoutUnsupportedError: {\n        code: BrowserAuthErrorCodes.silentLogoutUnsupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentLogoutUnsupported\n        ],\n    },\n    noAccountError: {\n        code: BrowserAuthErrorCodes.noAccountError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noAccountError],\n    },\n    silentPromptValueError: {\n        code: BrowserAuthErrorCodes.silentPromptValueError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentPromptValueError\n        ],\n    },\n    noTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.noTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noTokenRequestCacheError\n        ],\n    },\n    unableToParseTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.unableToParseTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n        ],\n    },\n    noCachedAuthorityError: {\n        code: BrowserAuthErrorCodes.noCachedAuthorityError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noCachedAuthorityError\n        ],\n    },\n    authRequestNotSet: {\n        code: BrowserAuthErrorCodes.authRequestNotSetError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authRequestNotSetError\n        ],\n    },\n    invalidCacheType: {\n        code: BrowserAuthErrorCodes.invalidCacheType,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.invalidCacheType],\n    },\n    notInBrowserEnvironment: {\n        code: BrowserAuthErrorCodes.nonBrowserEnvironment,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        ],\n    },\n    databaseNotOpen: {\n        code: BrowserAuthErrorCodes.databaseNotOpen,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.databaseNotOpen],\n    },\n    noNetworkConnectivity: {\n        code: BrowserAuthErrorCodes.noNetworkConnectivity,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    postRequestFailed: {\n        code: BrowserAuthErrorCodes.postRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.postRequestFailed],\n    },\n    getRequestFailed: {\n        code: BrowserAuthErrorCodes.getRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.getRequestFailed],\n    },\n    failedToParseNetworkResponse: {\n        code: BrowserAuthErrorCodes.failedToParseResponse,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.failedToParseResponse\n        ],\n    },\n    unableToLoadTokenError: {\n        code: BrowserAuthErrorCodes.unableToLoadToken,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.unableToLoadToken],\n    },\n    signingKeyNotFoundInStorage: {\n        code: BrowserAuthErrorCodes.cryptoKeyNotFound,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoKeyNotFound],\n    },\n    authCodeRequired: {\n        code: BrowserAuthErrorCodes.authCodeRequired,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.authCodeRequired],\n    },\n    authCodeOrNativeAccountRequired: {\n        code: BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n        ],\n    },\n    spaCodeAndNativeAccountPresent: {\n        code: BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n        ],\n    },\n    databaseUnavailable: {\n        code: BrowserAuthErrorCodes.databaseUnavailable,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.databaseUnavailable\n        ],\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n        ],\n    },\n    nativeHandshakeTimeout: {\n        code: BrowserAuthErrorCodes.nativeHandshakeTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeHandshakeTimeout\n        ],\n    },\n    nativeExtensionNotInstalled: {\n        code: BrowserAuthErrorCodes.nativeExtensionNotInstalled,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeExtensionNotInstalled\n        ],\n    },\n    nativeConnectionNotEstablished: {\n        code: BrowserAuthErrorCodes.nativeConnectionNotEstablished,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeConnectionNotEstablished\n        ],\n    },\n    uninitializedPublicClientApplication: {\n        code: BrowserAuthErrorCodes.uninitializedPublicClientApplication,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        ],\n    },\n    nativePromptNotSupported: {\n        code: BrowserAuthErrorCodes.nativePromptNotSupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativePromptNotSupported\n        ],\n    },\n    invalidBase64StringError: {\n        code: BrowserAuthErrorCodes.invalidBase64String,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.invalidBase64String\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, BrowserAuthErrorMessages[errorCode]);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n}\n\nexport function createBrowserAuthError(errorCode: string): BrowserAuthError {\n    return new BrowserAuthError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const pkceNotCreated = \"pkce_not_created\";\nexport const cryptoNonExistent = \"crypto_nonexistent\";\nexport const emptyNavigateUri = \"empty_navigate_uri\";\nexport const hashEmptyError = \"hash_empty_error\";\nexport const noStateInHash = \"no_state_in_hash\";\nexport const hashDoesNotContainKnownProperties =\n    \"hash_does_not_contain_known_properties\";\nexport const unableToParseState = \"unable_to_parse_state\";\nexport const stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\nexport const interactionInProgress = \"interaction_in_progress\";\nexport const popupWindowError = \"popup_window_error\";\nexport const emptyWindowError = \"empty_window_error\";\nexport const userCancelled = \"user_cancelled\";\nexport const monitorPopupTimeout = \"monitor_popup_timeout\";\nexport const monitorWindowTimeout = \"monitor_window_timeout\";\nexport const redirectInIframe = \"redirect_in_iframe\";\nexport const blockIframeReload = \"block_iframe_reload\";\nexport const blockNestedPopups = \"block_nested_popups\";\nexport const iframeClosedPrematurely = \"iframe_closed_prematurely\";\nexport const silentLogoutUnsupported = \"silent_logout_unsupported\";\nexport const noAccountError = \"no_account_error\";\nexport const silentPromptValueError = \"silent_prompt_value_error\";\nexport const noTokenRequestCacheError = \"no_token_request_cache_error\";\nexport const unableToParseTokenRequestCacheError =\n    \"unable_to_parse_token_request_cache_error\";\nexport const noCachedAuthorityError = \"no_cached_authority_error\";\nexport const authRequestNotSetError = \"auth_request_not_set_error\";\nexport const invalidCacheType = \"invalid_cache_type\";\nexport const nonBrowserEnvironment = \"non_browser_environment\";\nexport const databaseNotOpen = \"database_not_open\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const postRequestFailed = \"post_request_failed\";\nexport const getRequestFailed = \"get_request_failed\";\nexport const failedToParseResponse = \"failed_to_parse_response\";\nexport const unableToLoadToken = \"unable_to_load_token\";\nexport const cryptoKeyNotFound = \"crypto_key_not_found\";\nexport const authCodeRequired = \"auth_code_required\";\nexport const authCodeOrNativeAccountIdRequired =\n    \"auth_code_or_nativeAccountId_required\";\nexport const spaCodeAndNativeAccountIdPresent =\n    \"spa_code_and_nativeAccountId_present\";\nexport const databaseUnavailable = \"database_unavailable\";\nexport const unableToAcquireTokenFromNativePlatform =\n    \"unable_to_acquire_token_from_native_platform\";\nexport const nativeHandshakeTimeout = \"native_handshake_timeout\";\nexport const nativeExtensionNotInstalled = \"native_extension_not_installed\";\nexport const nativeConnectionNotEstablished =\n    \"native_connection_not_established\";\nexport const uninitializedPublicClientApplication =\n    \"uninitialized_public_client_application\";\nexport const nativePromptNotSupported = \"native_prompt_not_supported\";\nexport const invalidBase64String = \"invalid_base64_string\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    AccountEntity,\n    CacheManager,\n} from \"@azure/msal-common\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\nimport {\n    EventCallbackFunction,\n    EventError,\n    EventMessage,\n    EventPayload,\n} from \"./EventMessage\";\nimport { EventType } from \"./EventType\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<string, EventCallbackFunction>;\n    private logger: Logger;\n    private browserCrypto: ICrypto;\n    private listeningToStorageEvents: boolean;\n\n    constructor(logger: Logger, browserCrypto: ICrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        if (typeof window !== \"undefined\") {\n            const callbackId = createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(\n                `Event callback registered with id: ${callbackId}`\n            );\n\n            return callbackId;\n        }\n\n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        } else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\n                \"storage\",\n                this.handleAccountCacheChange\n            );\n            this.listeningToStorageEvents = false;\n        } else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(\n        eventType: EventType,\n        interactionType?: InteractionType,\n        payload?: EventPayload,\n        error?: EventError\n    ): void {\n        if (typeof window !== \"undefined\") {\n            const message: EventMessage = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n\n            this.logger.info(`Emitting event: ${eventType}`);\n\n            this.eventCallbacks.forEach(\n                (callback: EventCallbackFunction, callbackId: string) => {\n                    this.logger.verbose(\n                        `Emitting event to callback ${callbackId}: ${eventType}`\n                    );\n                    callback.apply(null, [message]);\n                }\n            );\n        }\n    }\n\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    private handleAccountCacheChange(e: StorageEvent): void {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (\n                typeof parsedValue !== \"object\" ||\n                !AccountEntity.isAccountEntity(parsedValue)\n            ) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject<AccountEntity>(\n                new AccountEntity(),\n                parsedValue\n            );\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\n                    \"Account was added to cache in a different window\"\n                );\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            } else if (!e.newValue && e.oldValue) {\n                this.logger.info(\n                    \"Account was removed from cache in a different window\"\n                );\n                this.emitEvent(\n                    EventType.ACCOUNT_REMOVED,\n                    undefined,\n                    accountInfo\n                );\n            }\n        } catch (e) {\n            return;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n} as const;\nexport type EventType = (typeof EventType)[keyof typeof EventType];\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"3.5.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport const NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n};\n\nexport const NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n} as const;\nexport type NativeExtensionMethod =\n    (typeof NativeExtensionMethod)[keyof typeof NativeExtensionMethod];\n\nexport const BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n} as const;\nexport type BrowserCacheLocation =\n    (typeof BrowserCacheLocation)[keyof typeof BrowserCacheLocation];\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport const HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n} as const;\nexport type HTTP_REQUEST_TYPE =\n    (typeof HTTP_REQUEST_TYPE)[keyof typeof HTTP_REQUEST_TYPE];\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport const TemporaryCacheKeys = {\n    AUTHORITY: \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\n    SESSION_STATE: \"session.state\",\n    REQUEST_STATE: \"request.state\",\n    NONCE_IDTOKEN: \"nonce.id_token\",\n    ORIGIN_URI: \"request.origin\",\n    RENEW_STATUS: \"token.renew.status\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    SCOPES: \"scopes\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    CCS_CREDENTIAL: \"ccs.credential\",\n    CORRELATION_ID: \"request.correlationId\",\n    NATIVE_REQUEST: \"request.native\",\n    REDIRECT_CONTEXT: \"request.redirect.context\",\n} as const;\nexport type TemporaryCacheKeys =\n    (typeof TemporaryCacheKeys)[keyof typeof TemporaryCacheKeys];\n\nexport const StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n} as const;\nexport type StaticCacheKeys =\n    (typeof StaticCacheKeys)[keyof typeof StaticCacheKeys];\n\n/**\n * Cache keys stored in-memory\n */\nexport const InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n} as const;\nexport type InMemoryCacheKeys =\n    (typeof InMemoryCacheKeys)[keyof typeof InMemoryCacheKeys];\n\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport const ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n} as const;\nexport type ApiId = (typeof ApiId)[keyof typeof ApiId];\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\",\n    None = \"none\",\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport const InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n} as const;\nexport type InteractionStatus =\n    (typeof InteractionStatus)[keyof typeof InteractionStatus];\n\nexport const DEFAULT_REQUEST: RedirectRequest | PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES,\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport const WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n} as const;\nexport type WrapperSKU = (typeof WrapperSKU)[keyof typeof WrapperSKU];\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n\nexport const CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0, // 0 is falsy, is equivalent to not passing in a CacheLookupPolicy\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n} as const;\nexport type CacheLookupPolicy =\n    (typeof CacheLookupPolicy)[keyof typeof CacheLookupPolicy];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\n\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nexport function extractTokenClaims(\n    encodedToken: string,\n    base64Decode: (input: string) => string\n): TokenClaims {\n    const jswPayload = getJWSPayload(encodedToken);\n\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded) as TokenClaims;\n    } catch (err) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n}\n\n/**\n * decode a JWT\n *\n * @param authToken\n */\nexport function getJWSPayload(authToken: string): string {\n    if (!authToken) {\n        throw createClientAuthError(ClientAuthErrorCodes.nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n\n    return matches[2];\n}\n\n/**\n * Determine if the token's max_age has transpired\n */\nexport function checkMaxAge(authTime: number, maxAge: number): void {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw createClientAuthError(ClientAuthErrorCodes.maxAgeTranspired);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Separators, Constants } from \"../utils/Constants\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string;\n    utid: string;\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(\n    rawClientInfo: string,\n    crypto: ICrypto\n): ClientInfo {\n    if (!rawClientInfo) {\n        throw createClientAuthError(ClientAuthErrorCodes.clientInfoEmptyError);\n    }\n\n    try {\n        const decodedClientInfo: string = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nexport function buildClientInfoFromHomeAccountId(\n    homeAccountId: string\n): ClientInfo {\n    if (!homeAccountId) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n    const clientInfoParts: string[] = homeAccountId.split(\n        Separators.CLIENT_INFO_SEPARATOR,\n        2\n    );\n    return {\n        uid: clientInfoParts[0],\n        utid:\n            clientInfoParts.length < 2\n                ? Constants.EMPTY_STRING\n                : clientInfoParts[1],\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger\";\nimport { UrlString } from \"../url/UrlString\";\nimport { AuthorityMetadataSource } from \"../utils/Constants\";\nimport { StaticAuthorityOptions } from \"./AuthorityOptions\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\nexport const rawMetdataJSON = {\n    endpointMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.com/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint:\n                \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.us/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.com/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint:\n                \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.us/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.com/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint:\n                \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.us/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        tenant_discovery_endpoint:\n            \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\n        \"api-version\": \"1.1\",\n        metadata: [\n            {\n                preferred_network: \"login.microsoftonline.com\",\n                preferred_cache: \"login.windows.net\",\n                aliases: [\n                    \"login.microsoftonline.com\",\n                    \"login.windows.net\",\n                    \"login.microsoft.com\",\n                    \"sts.windows.net\",\n                ],\n            },\n            {\n                preferred_network: \"login.partner.microsoftonline.cn\",\n                preferred_cache: \"login.partner.microsoftonline.cn\",\n                aliases: [\n                    \"login.partner.microsoftonline.cn\",\n                    \"login.chinacloudapi.cn\",\n                ],\n            },\n            {\n                preferred_network: \"login.microsoftonline.de\",\n                preferred_cache: \"login.microsoftonline.de\",\n                aliases: [\"login.microsoftonline.de\"],\n            },\n            {\n                preferred_network: \"login.microsoftonline.us\",\n                preferred_cache: \"login.microsoftonline.us\",\n                aliases: [\n                    \"login.microsoftonline.us\",\n                    \"login.usgovcloudapi.net\",\n                ],\n            },\n            {\n                preferred_network: \"login-us.microsoftonline.com\",\n                preferred_cache: \"login-us.microsoftonline.com\",\n                aliases: [\"login-us.microsoftonline.com\"],\n            },\n        ],\n    },\n};\n\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\nexport const InstanceDiscoveryMetadata =\n    rawMetdataJSON.instanceDiscoveryMetadata;\n\nexport const InstanceDiscoveryMetadataAliases: Set<String> = new Set();\nInstanceDiscoveryMetadata.metadata.forEach(\n    (metadataEntry: CloudDiscoveryMetadata) => {\n        metadataEntry.aliases.forEach((alias: string) => {\n            InstanceDiscoveryMetadataAliases.add(alias);\n        });\n    }\n);\n\n/**\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\n * @param staticAuthorityOptions\n * @param logger\n * @returns\n */\nexport function getAliasesFromStaticSources(\n    staticAuthorityOptions: StaticAuthorityOptions,\n    logger?: Logger\n): string[] {\n    let staticAliases: string[] | undefined;\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\n    if (canonicalAuthority) {\n        const authorityHost = new UrlString(\n            canonicalAuthority\n        ).getUrlComponents().HostNameAndPort;\n        staticAliases =\n            getAliasesFromMetadata(\n                authorityHost,\n                staticAuthorityOptions.cloudDiscoveryMetadata?.metadata,\n                AuthorityMetadataSource.CONFIG,\n                logger\n            ) ||\n            getAliasesFromMetadata(\n                authorityHost,\n                InstanceDiscoveryMetadata.metadata,\n                AuthorityMetadataSource.HARDCODED_VALUES,\n                logger\n            ) ||\n            staticAuthorityOptions.knownAuthorities;\n    }\n\n    return staticAliases || [];\n}\n\n/**\n * Returns aliases for from the raw cloud discovery metadata passed in\n * @param authorityHost\n * @param rawCloudDiscoveryMetadata\n * @returns\n */\nexport function getAliasesFromMetadata(\n    authorityHost?: string,\n    cloudDiscoveryMetadata?: CloudDiscoveryMetadata[],\n    source?: AuthorityMetadataSource,\n    logger?: Logger\n): string[] | null {\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\n    if (authorityHost && cloudDiscoveryMetadata) {\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n            cloudDiscoveryMetadata,\n            authorityHost\n        );\n\n        if (metadata) {\n            logger?.trace(\n                `getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`\n            );\n            return metadata.aliases;\n        } else {\n            logger?.trace(\n                `getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`\n            );\n        }\n    }\n\n    return null;\n}\n\n/**\n * Get cloud discovery metadata for common authorities\n */\nexport function getCloudDiscoveryMetadataFromHardcodedValues(\n    authorityHost: string\n): CloudDiscoveryMetadata | null {\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(\n        InstanceDiscoveryMetadata.metadata,\n        authorityHost\n    );\n    return metadata;\n}\n\n/**\n * Searches instance discovery network response for the entry that contains the host in the aliases list\n * @param response\n * @param authority\n */\nexport function getCloudDiscoveryMetadataFromNetworkResponse(\n    response: CloudDiscoveryMetadata[],\n    authorityHost: string\n): CloudDiscoveryMetadata | null {\n    for (let i = 0; i < response.length; i++) {\n        const metadata = response[i];\n        if (metadata.aliases.includes(authorityHost)) {\n            return metadata;\n        }\n    }\n\n    return null;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { OIDCOptions } from \"./OIDCOptions\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration\";\nimport { CloudInstanceDiscoveryResponse } from \"./CloudInstanceDiscoveryResponse\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    OIDCOptions?: OIDCOptions | null;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n    authority?: string;\n};\n\nexport type StaticAuthorityOptions = Partial<\n    Pick<AuthorityOptions, \"knownAuthorities\">\n> & {\n    canonicalAuthority?: string;\n    cloudDiscoveryMetadata?: CloudInstanceDiscoveryResponse;\n};\n\nexport const AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n} as const;\nexport type AzureCloudInstance =\n    (typeof AzureCloudInstance)[keyof typeof AzureCloudInstance];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport const AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n} as const;\nexport type AuthorityType = (typeof AuthorityType)[keyof typeof AuthorityType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport const ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n} as const;\nexport type ProtocolMode = (typeof ProtocolMode)[keyof typeof ProtocolMode];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    CredentialFilter,\n    ValidCredentialType,\n    AppMetadataFilter,\n    AppMetadataCache,\n    TokenKeys,\n} from \"./utils/CacheTypes\";\nimport { CacheRecord } from \"./entities/CacheRecord\";\nimport {\n    CredentialType,\n    APP_METADATA,\n    THE_FAMILY_ID,\n    AUTHORITY_METADATA_CONSTANTS,\n    AuthenticationScheme,\n    Separators,\n} from \"../utils/Constants\";\nimport { CredentialEntity } from \"./entities/CredentialEntity\";\nimport { generateCredentialKey } from \"./utils/CacheHelpers\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AccountEntity } from \"./entities/AccountEntity\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity\";\nimport { ICacheManager } from \"./interface/ICacheManager\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity\";\nimport { extractTokenClaims } from \"../account/AuthToken\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { Logger } from \"../logger/Logger\";\nimport { name, version } from \"../packageMetadata\";\nimport { StoreInCache } from \"../request/StoreInCache\";\nimport { getAliasesFromStaticSources } from \"../authority/AuthorityMetadata\";\nimport { StaticAuthorityOptions } from \"../authority/AuthorityOptions\";\nimport { TokenClaims } from \"../account/TokenClaims\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n    // Instance of logger for functions defined in the msal-common layer\n    private commonLogger: Logger;\n    private staticAuthorityOptions?: StaticAuthorityOptions;\n\n    constructor(\n        clientId: string,\n        cryptoImpl: ICrypto,\n        logger: Logger,\n        staticAuthorityOptions?: StaticAuthorityOptions\n    ) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(name, version);\n        this.staticAuthorityOptions = staticAuthorityOptions;\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(accountKey: string): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    abstract setAccount(account: AccountEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     */\n    abstract setIdTokenCredential(idToken: IdTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(\n        accessTokenKey: string\n    ): AccessTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param accessToken\n     */\n    abstract setAccessTokenCredential(accessToken: AccessTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param refreshToken\n     */\n    abstract setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     *\n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(\n        key: string,\n        value: AuthorityMetadataEntity\n    ): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(\n        throttlingCacheKey: string\n    ): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string): void;\n\n    /**\n     * Function which returns boolean whether cache contains a specific key.\n     * @param key\n     */\n    abstract containsKey(key: string, type?: string): boolean;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which retrieves all account keys from the cache\n     */\n    abstract getAccountKeys(): string[];\n\n    /**\n     * Function which retrieves all token keys from the cache\n     */\n    abstract getTokenKeys(): TokenKeys;\n\n    /**\n     * Function which clears cache.\n     */\n    abstract clear(): Promise<void>;\n\n    /**\n     * Function which updates an outdated credential cache key\n     */\n    abstract updateCredentialCacheKey(\n        currentCacheKey: string,\n        credential: ValidCredentialType\n    ): string;\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        const validAccounts: AccountInfo[] = [];\n        this.getAccountsFilteredBy(accountFilter || {}).forEach(\n            (accountEntity: AccountEntity) => {\n                const accountInfo = this.getAccountInfoFromEntity(\n                    accountEntity,\n                    accountFilter\n                );\n                if (accountInfo) {\n                    validAccounts.push(accountInfo);\n                }\n            }\n        );\n        return validAccounts;\n    }\n\n    /**\n     * Gets accountInfo object based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter: AccountFilter): AccountInfo | null {\n        const allAccounts = this.getAllAccounts(accountFilter);\n        if (allAccounts.length > 1) {\n            // If one or more accounts are found, further filter to the first account that has an ID token\n            return allAccounts.filter((account) => {\n                return !!account.idTokenClaims;\n            })[0];\n        } else if (allAccounts.length === 1) {\n            // If only one account is found, return it regardless of whether a matching ID token was found\n            return allAccounts[0];\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns a single matching\n     * @param accountFilter\n     * @returns\n     */\n    getBaseAccountInfo(accountFilter: AccountFilter): AccountInfo | null {\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\n        if (accountEntities.length > 0) {\n            return accountEntities[0].getAccountInfo();\n        } else {\n            return null;\n        }\n    }\n\n    private getAccountInfoFromEntity(\n        accountEntity: AccountEntity,\n        accountFilter?: AccountFilter\n    ): AccountInfo | null {\n        const accountInfo = accountEntity.getAccountInfo();\n        const idToken = this.getIdToken(accountInfo);\n        if (idToken) {\n            const idTokenClaims = extractTokenClaims(\n                idToken.secret,\n                this.cryptoImpl.base64Decode\n            );\n\n            if (\n                this.idTokenClaimsMatchAccountFilter(\n                    idTokenClaims,\n                    accountFilter\n                )\n            ) {\n                accountInfo.idToken = idToken.secret;\n                accountInfo.idTokenClaims = idTokenClaims;\n                return accountInfo;\n            }\n        }\n        return accountInfo;\n    }\n\n    private idTokenClaimsMatchAccountFilter(\n        idTokenClaims: TokenClaims,\n        accountFilter?: AccountFilter\n    ): boolean {\n        if (accountFilter) {\n            if (\n                !!accountFilter.loginHint &&\n                !this.matchLoginHint(idTokenClaims, accountFilter.loginHint)\n            ) {\n                return false;\n            }\n            if (\n                !!accountFilter.sid &&\n                !this.matchSid(idTokenClaims, accountFilter.sid)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(\n        cacheRecord: CacheRecord,\n        storeInCache?: StoreInCache\n    ): Promise<void> {\n        if (!cacheRecord) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheRecord\n            );\n        }\n\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n\n        if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n\n        if (!!cacheRecord.accessToken && storeInCache?.accessToken !== false) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n\n        if (\n            !!cacheRecord.refreshToken &&\n            storeInCache?.refreshToken !== false\n        ) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(\n        credential: AccessTokenEntity\n    ): Promise<void> {\n        const accessTokenFilter: CredentialFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = ScopeSet.fromString(credential.target);\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (\n                !this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)\n            ) {\n                return;\n            }\n\n            const tokenEntity = this.getAccessTokenCredential(key);\n\n            if (\n                tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)\n            ) {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n\n    /**\n     * Retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter: AccountFilter): AccountEntity[] {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts: AccountEntity[] = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (\n                !this.isAccountKey(\n                    cacheKey,\n                    accountFilter.homeAccountId,\n                    accountFilter.tenantId\n                )\n            ) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n\n            const entity: AccountEntity | null = this.getAccount(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (\n                !!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.localAccountId &&\n                !this.matchLocalAccountId(entity, accountFilter.localAccountId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.username &&\n                !this.matchUsername(entity, accountFilter.username)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)\n            ) {\n                return;\n            }\n\n            // tenantId is another name for realm\n            if (\n                !!accountFilter.tenantId &&\n                !this.matchRealm(entity, accountFilter.tenantId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(\n                    entity,\n                    accountFilter.nativeAccountId\n                )\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.name &&\n                !this.matchName(entity, accountFilter.name)\n            ) {\n                return;\n            }\n\n            matchingAccounts.push(entity);\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(\n        key: string,\n        homeAccountId?: string,\n        tenantId?: string\n    ): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        if (\n            homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())\n        ) {\n            return false;\n        }\n\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n\n        // Do not check environment as aliasing can cause false negatives\n\n        return true;\n    }\n\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key: string): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (\n            lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n            ) === -1 &&\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1\n        ) {\n            return false;\n        }\n\n        if (\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1\n        ) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\n            if (\n                lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1\n            ) {\n                return false;\n            }\n        } else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(\n        entity: ValidCredentialType,\n        filter: CredentialFilter\n    ): boolean {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n\n        if (\n            !!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)\n        ) {\n            return false;\n        }\n\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (\n            typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)\n        ) {\n            return false;\n        }\n\n        if (\n            !!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)\n        ) {\n            return false;\n        }\n\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n\n        if (\n            !!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)\n        ) {\n            return false;\n        }\n\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n\n        // Access Token with Auth Scheme specific matching\n        if (\n            entity.credentialType ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n        ) {\n            if (\n                !!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)\n            ) {\n                return false;\n            }\n\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        return this.getAppMetadataFilteredByInternal(\n            filter.environment,\n            filter.clientId\n        );\n    }\n\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    private getAppMetadataFilteredByInternal(\n        environment?: string,\n        clientId?: string\n    ): AppMetadataCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (\n                !this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1\n            ) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n        });\n\n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<void> {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts: Array<Promise<void>> = [];\n\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n\n        await Promise.all(removedAccounts);\n    }\n\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<void> {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<void> {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<void>> = [];\n\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n\n        await Promise.all(removedCredentials);\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (\n            credential.credentialType.toLowerCase() ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n        ) {\n            if (credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity =\n                    credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw createClientAuthError(\n                            ClientAuthErrorCodes.bindingKeyNotRemoved\n                        );\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account {AccountInfo}\n     * @param request {BaseAuthRequest}\n     * @param environment {string}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    readCacheRecord(\n        account: AccountInfo,\n        request: BaseAuthRequest,\n        environment: string,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): CacheRecord {\n        const tokenKeys = this.getTokenKeys();\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.getIdToken(\n            account,\n            tokenKeys,\n            performanceClient,\n            correlationId\n        );\n        const cachedAccessToken = this.getAccessToken(\n            account,\n            request,\n            tokenKeys,\n            performanceClient,\n            correlationId\n        );\n        const cachedRefreshToken = this.getRefreshToken(\n            account,\n            false,\n            tokenKeys,\n            performanceClient,\n            correlationId\n        );\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment);\n\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = extractTokenClaims(\n                cachedIdToken.secret,\n                this.cryptoImpl.base64Decode\n            );\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string =\n            AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getIdToken(\n        account: AccountInfo,\n        tokenKeys?: TokenKeys,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): IdTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: account.tenantId,\n        };\n\n        const idTokens: IdTokenEntity[] = this.getIdTokensByFilter(\n            idTokenFilter,\n            tokenKeys\n        );\n        const numIdTokens = idTokens.length;\n\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        } else if (numIdTokens > 1) {\n            this.commonLogger.info(\n                \"CacheManager:getIdToken - Multiple id tokens found, clearing them\"\n            );\n            idTokens.forEach((idToken) => {\n                this.removeIdToken(generateCredentialKey(idToken));\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields(\n                    { multiMatchedID: idTokens.length },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning id token\");\n        return idTokens[0];\n    }\n\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(\n        filter: CredentialFilter,\n        tokenKeys?: TokenKeys\n    ): IdTokenEntity[] {\n        const idTokenKeys =\n            (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n\n        const idTokens: IdTokenEntity[] = [];\n        idTokenKeys.forEach((key) => {\n            if (\n                !this.idTokenKeyMatchesFilter(key, {\n                    clientId: this.clientId,\n                    ...filter,\n                })\n            ) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.push(idToken);\n            }\n        });\n\n        return idTokens;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param request {BaseAuthRequest}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getAccessToken(\n        account: AccountInfo,\n        request: BaseAuthRequest,\n        tokenKeys?: TokenKeys,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): AccessTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\n        const authScheme =\n            request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType =\n            authScheme &&\n            authScheme.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n                ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n                : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n\n        const accessTokenKeys =\n            (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens: AccessTokenEntity[] = [];\n\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (\n                this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)\n            ) {\n                const accessToken = this.getAccessTokenCredential(key);\n\n                // Validate value\n                if (\n                    accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)\n                ) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - No token found\"\n            );\n            return null;\n        } else if (numAccessTokens > 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - Multiple access tokens found, clearing them\"\n            );\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken(generateCredentialKey(accessToken));\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields(\n                    { multiMatchedAT: accessTokens.length },\n                    correlationId\n                );\n            }\n            return null;\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getAccessToken - Returning access token\"\n        );\n        return accessTokens[0];\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter,\n        keyMustContainAllScopes: boolean\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n\n        if (\n            filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (\n                    keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                } else if (\n                    !keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter: CredentialFilter): AccessTokenEntity[] {\n        const tokenKeys = this.getTokenKeys();\n\n        const accessTokens: AccessTokenEntity[] = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n\n            const accessToken = this.getAccessTokenCredential(key);\n            if (\n                accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)\n            ) {\n                accessTokens.push(accessToken);\n            }\n        });\n\n        return accessTokens;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param account {AccountInfo}\n     * @param familyRT {boolean}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getRefreshToken(\n        account: AccountInfo,\n        familyRT: boolean,\n        tokenKeys?: TokenKeys,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): RefreshTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n\n        const refreshTokenKeys =\n            (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens: RefreshTokenEntity[] = [];\n\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (\n                    refreshToken &&\n                    this.credentialMatchesFilter(\n                        refreshToken,\n                        refreshTokenFilter\n                    )\n                ) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getRefreshToken - No refresh token found.\"\n            );\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\n            performanceClient.addFields(\n                { multiMatchedRT: numRefreshTokens },\n                correlationId\n            );\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getRefreshToken - returning refresh token\"\n        );\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        // If familyId is used, clientId is not in the key\n        if (\n            !filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n\n        const appMetadata: AppMetadataCache =\n            this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(\n            appMetadata\n        ).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.multipleMatchingAppMetadata\n            );\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(\n        entity: AccountEntity | CredentialEntity,\n        homeAccountId: string\n    ): boolean {\n        return !!(\n            typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId\n        );\n    }\n\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    private matchLocalAccountId(\n        entity: AccountEntity,\n        localAccountId: string\n    ): boolean {\n        return !!(\n            typeof entity.localAccountId === \"string\" &&\n            localAccountId === entity.localAccountId\n        );\n    }\n\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    private matchUsername(entity: AccountEntity, username: string): boolean {\n        return !!(\n            typeof entity.username === \"string\" &&\n            username.toLowerCase() === entity.username.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    private matchName(entity: AccountEntity, name: string): boolean {\n        return !!(name.toLowerCase() === entity.name?.toLowerCase());\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchUserAssertionHash(\n        entity: CredentialEntity,\n        userAssertionHash: string\n    ): boolean {\n        return !!(\n            entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash\n        );\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(\n        entity: AccountEntity | CredentialEntity | AppMetadataEntity,\n        environment: string\n    ): boolean {\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\n        if (this.staticAuthorityOptions) {\n            const staticAliases = getAliasesFromStaticSources(\n                this.staticAuthorityOptions,\n                this.commonLogger\n            );\n            if (\n                staticAliases.includes(environment) &&\n                staticAliases.includes(entity.environment)\n            ) {\n                return true;\n            }\n        }\n\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (\n            cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(\n        entity: CredentialEntity,\n        credentialType: string\n    ): boolean {\n        return (\n            entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(\n        entity: CredentialEntity | AppMetadataEntity,\n        clientId: string\n    ): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(\n        entity: CredentialEntity | AppMetadataEntity,\n        familyId: string\n    ): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(\n        entity: AccountEntity | CredentialEntity,\n        realm: string\n    ): boolean {\n        return !!(entity.realm && realm === entity.realm);\n    }\n\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    private matchNativeAccountId(\n        entity: AccountEntity,\n        nativeAccountId: string\n    ): boolean {\n        return !!(\n            entity.nativeAccountId && nativeAccountId === entity.nativeAccountId\n        );\n    }\n\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    private matchLoginHint(\n        idTokenClaims: TokenClaims,\n        loginHint: string\n    ): boolean {\n        if (idTokenClaims?.login_hint === loginHint) {\n            return true;\n        }\n\n        if (idTokenClaims.preferred_username === loginHint) {\n            return true;\n        }\n\n        if (idTokenClaims?.upn === loginHint) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Helper to match sid\n     * @param idTokenClaims\n     * @param sid\n     * @returns true if the sid claim is present and matches the filter\n     */\n    private matchSid(idTokenClaims: TokenClaims, sid: string): boolean {\n        return !!(idTokenClaims?.sid && idTokenClaims.sid === sid);\n    }\n\n    private matchAuthorityType(\n        entity: AccountEntity,\n        authorityType: string\n    ): boolean {\n        return !!(\n            entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase()\n        );\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: ScopeSet): boolean {\n        const isNotAccessTokenCredential =\n            entity.credentialType !== CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n\n        return entityScopeSet.containsScopeSet(target);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchTokenType(\n        entity: CredentialEntity,\n        tokenType: AuthenticationScheme\n    ): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\n/** @internal */\nexport class DefaultStorageClass extends CacheManager {\n    setAccount(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccount(): AccountEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setIdTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAccessTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setRefreshTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAppMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setServerTelemetry(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAuthorityMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setThrottlingCache(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    removeItem(): boolean {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    containsKey(): boolean {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccountKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getTokenKeys(): TokenKeys {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    async clear(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    updateCredentialCacheKey(): string {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Separators, CacheAccountType, Constants } from \"../../utils/Constants\";\nimport { Authority } from \"../../authority/Authority\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { buildClientInfo } from \"../../account/ClientInfo\";\nimport { AccountInfo } from \"../../account/AccountInfo\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../../error/ClientAuthError\";\nimport { AuthorityType } from \"../../authority/AuthorityType\";\nimport { Logger } from \"../../logger/Logger\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport { ProtocolMode } from \"../../authority/ProtocolMode\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      idTokenClaims: Object containing claims parsed from ID token\n *      nativeAccountId: Account identifier on the native device\n * }\n * @internal\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    clientInfo?: string;\n    name?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string;\n    idTokenClaims?: TokenClaims;\n    nativeAccountId?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n        };\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || Constants.EMPTY_STRING,\n            accountInterface.tenantId || Constants.EMPTY_STRING,\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(\n        accountDetails: {\n            homeAccountId: string;\n            idTokenClaims: TokenClaims;\n            clientInfo?: string;\n            cloudGraphHostName?: string;\n            msGraphHost?: string;\n            environment?: string;\n            nativeAccountId?: string;\n        },\n        authority: Authority\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        if (authority.authorityType === AuthorityType.Adfs) {\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n        } else if (authority.protocolMode === ProtocolMode.AAD) {\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        } else {\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n\n        const env =\n            accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            accountDetails.idTokenClaims.tid || Constants.EMPTY_STRING;\n\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            accountDetails.idTokenClaims.oid ||\n            accountDetails.idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername =\n            accountDetails.idTokenClaims.preferred_username ||\n            accountDetails.idTokenClaims.upn;\n        const email = accountDetails.idTokenClaims.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n\n        account.username = preferredUsername || email || Constants.EMPTY_STRING;\n        account.name = accountDetails.idTokenClaims.name;\n\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(\n        accountInfo: AccountInfo,\n        cloudGraphHostName?: string,\n        msGraphHost?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType =\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(\n        serverClientInfo: string,\n        authType: AuthorityType,\n        logger: Logger,\n        cryptoObj: ICrypto,\n        idTokenClaims?: TokenClaims\n    ): string {\n        const accountId = idTokenClaims?.sub\n            ? idTokenClaims.sub\n            : Constants.EMPTY_STRING;\n\n        // since ADFS does not have tid and does not set client_info\n        if (\n            authType === AuthorityType.Adfs ||\n            authType === AuthorityType.Dsts\n        ) {\n            return accountId;\n        }\n\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\n                if (clientInfo.uid && clientInfo.utid) {\n                    return `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            } catch (e) {}\n        }\n\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(\n        accountA: AccountInfo | null,\n        accountB: AccountInfo | null,\n        compareClaims?: boolean\n    ): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims ||\n                {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                accountAClaims.nonce === accountBClaims.nonce;\n        }\n\n        return (\n            accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { extractTokenClaims } from \"../../account/AuthToken\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../../error/ClientAuthError\";\nimport {\n    AuthenticationScheme,\n    CredentialType,\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n} from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\nimport { AccessTokenEntity } from \"../entities/AccessTokenEntity\";\nimport { CredentialEntity } from \"../entities/CredentialEntity\";\nimport { IdTokenEntity } from \"../entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"../entities/RefreshTokenEntity\";\n\n/**\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\n * @param credentialEntity\n * @returns\n */\nexport function generateCredentialKey(\n    credentialEntity: CredentialEntity\n): string {\n    const credentialKey = [\n        generateAccountId(credentialEntity),\n        generateCredentialId(credentialEntity),\n        generateTarget(credentialEntity),\n        generateClaimsHash(credentialEntity),\n        generateScheme(credentialEntity),\n    ];\n\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Create IdTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nexport function createIdTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    idToken: string,\n    clientId: string,\n    tenantId: string\n): IdTokenEntity {\n    const idTokenEntity: IdTokenEntity = {\n        credentialType: CredentialType.ID_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: idToken,\n        realm: tenantId,\n    };\n\n    return idTokenEntity;\n}\n\n/**\n * Create AccessTokenEntity\n * @param homeAccountId\n * @param environment\n * @param accessToken\n * @param clientId\n * @param tenantId\n * @param scopes\n * @param expiresOn\n * @param extExpiresOn\n */\nexport function createAccessTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    accessToken: string,\n    clientId: string,\n    tenantId: string,\n    scopes: string,\n    expiresOn: number,\n    extExpiresOn: number,\n    base64Decode: (input: string) => string,\n    refreshOn?: number,\n    tokenType?: AuthenticationScheme,\n    userAssertionHash?: string,\n    keyId?: string,\n    requestedClaims?: string,\n    requestedClaimsHash?: string\n): AccessTokenEntity {\n    const atEntity: AccessTokenEntity = {\n        homeAccountId: homeAccountId,\n        credentialType: CredentialType.ACCESS_TOKEN,\n        secret: accessToken,\n        cachedAt: TimeUtils.nowSeconds().toString(),\n        expiresOn: expiresOn.toString(),\n        extendedExpiresOn: extExpiresOn.toString(),\n        environment: environment,\n        clientId: clientId,\n        realm: tenantId,\n        target: scopes,\n        tokenType: tokenType || AuthenticationScheme.BEARER,\n    };\n\n    if (userAssertionHash) {\n        atEntity.userAssertionHash = userAssertionHash;\n    }\n\n    if (refreshOn) {\n        atEntity.refreshOn = refreshOn.toString();\n    }\n\n    if (requestedClaims) {\n        atEntity.requestedClaims = requestedClaims;\n        atEntity.requestedClaimsHash = requestedClaimsHash;\n    }\n\n    /*\n     * Create Access Token With Auth Scheme instead of regular access token\n     * Cast to lower to handle \"bearer\" from ADFS\n     */\n    if (\n        atEntity.tokenType?.toLowerCase() !==\n        AuthenticationScheme.BEARER.toLowerCase()\n    ) {\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        switch (atEntity.tokenType) {\n            case AuthenticationScheme.POP:\n                // Make sure keyId is present and add it to credential\n                const tokenClaims: TokenClaims | null = extractTokenClaims(\n                    accessToken,\n                    base64Decode\n                );\n                if (!tokenClaims?.cnf?.kid) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n                    );\n                }\n                atEntity.keyId = tokenClaims.cnf.kid;\n                break;\n            case AuthenticationScheme.SSH:\n                atEntity.keyId = keyId;\n        }\n    }\n\n    return atEntity;\n}\n\n/**\n * Create RefreshTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nexport function createRefreshTokenEntity(\n    homeAccountId: string,\n    environment: string,\n    refreshToken: string,\n    clientId: string,\n    familyId?: string,\n    userAssertionHash?: string\n): RefreshTokenEntity {\n    const rtEntity: RefreshTokenEntity = {\n        credentialType: CredentialType.REFRESH_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: refreshToken,\n    };\n\n    if (userAssertionHash) {\n        rtEntity.userAssertionHash = userAssertionHash;\n    }\n\n    if (familyId) {\n        rtEntity.familyId = familyId;\n    }\n\n    return rtEntity;\n}\n\nexport function isCredentialEntity(entity: object): boolean {\n    return (\n        entity.hasOwnProperty(\"homeAccountId\") &&\n        entity.hasOwnProperty(\"environment\") &&\n        entity.hasOwnProperty(\"credentialType\") &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"secret\")\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isAccessTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity.hasOwnProperty(\"target\") &&\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\n            entity[\"credentialType\"] ===\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isIdTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN\n    );\n}\n\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nexport function isRefreshTokenEntity(entity: object): boolean {\n    if (!entity) {\n        return false;\n    }\n\n    return (\n        isCredentialEntity(entity) &&\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n    );\n}\n\n/**\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n */\nfunction generateAccountId(credentialEntity: CredentialEntity): string {\n    const accountId: Array<string> = [\n        credentialEntity.homeAccountId,\n        credentialEntity.environment,\n    ];\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n */\nfunction generateCredentialId(credentialEntity: CredentialEntity): string {\n    const clientOrFamilyId =\n        credentialEntity.credentialType === CredentialType.REFRESH_TOKEN\n            ? credentialEntity.familyId || credentialEntity.clientId\n            : credentialEntity.clientId;\n    const credentialId: Array<string> = [\n        credentialEntity.credentialType,\n        clientOrFamilyId,\n        credentialEntity.realm || \"\",\n    ];\n\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n\n/**\n * Generate target key component as per schema: <target>\n */\nfunction generateTarget(credentialEntity: CredentialEntity): string {\n    return (credentialEntity.target || \"\").toLowerCase();\n}\n\n/**\n * Generate requested claims key component as per schema: <requestedClaims>\n */\nfunction generateClaimsHash(credentialEntity: CredentialEntity): string {\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\n}\n\n/**\n * Generate scheme key componenet as per schema: <scheme>\n */\nfunction generateScheme(credentialEntity: CredentialEntity): string {\n    /*\n     * PoP Tokens and SSH certs include scheme in cache key\n     * Cast to lowercase to handle \"bearer\" from ADFS\n     */\n    return credentialEntity.tokenType &&\n        credentialEntity.tokenType.toLowerCase() !==\n            AuthenticationScheme.BEARER.toLowerCase()\n        ? credentialEntity.tokenType.toLowerCase()\n        : \"\";\n}\n\n/**\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\n * @param key\n * @param entity\n */\nexport function isServerTelemetryEntity(key: string, entity?: object): boolean {\n    const validateKey: boolean =\n        key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    let validateEntity: boolean = true;\n\n    if (entity) {\n        validateEntity =\n            entity.hasOwnProperty(\"failedRequests\") &&\n            entity.hasOwnProperty(\"errors\") &&\n            entity.hasOwnProperty(\"cacheHits\");\n    }\n\n    return validateKey && validateEntity;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto\";\nimport { ILoggerCallback, Logger, LogLevel } from \"../logger/Logger\";\nimport { Constants } from \"../utils/Constants\";\nimport { version } from \"../packageMetadata\";\nimport { Authority } from \"../authority/Authority\";\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { ClientCredentials } from \"../account/ClientCredentials\";\nimport { ProtocolMode } from \"../authority/ProtocolMode\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - telemetry                  - Telemetry options and data\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n * @internal\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions;\n    systemOptions?: SystemOptions;\n    loggerOptions?: LoggerOptions;\n    cacheOptions?: CacheOptions;\n    storageInterface?: CacheManager;\n    networkInterface?: INetworkModule;\n    cryptoInterface?: ICrypto;\n    clientCredentials?: ClientCredentials;\n    libraryInfo?: LibraryInfo;\n    telemetry?: TelemetryOptions;\n    serverTelemetryManager?: ServerTelemetryManager | null;\n    persistencePlugin?: ICachePlugin | null;\n    serializableCache?: ISerializableTokenCache | null;\n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>;\n    systemOptions: Required<SystemOptions>;\n    loggerOptions: Required<LoggerOptions>;\n    cacheOptions: Required<CacheOptions>;\n    storageInterface: CacheManager;\n    networkInterface: INetworkModule;\n    cryptoInterface: Required<ICrypto>;\n    libraryInfo: LibraryInfo;\n    telemetry: Required<TelemetryOptions>;\n    serverTelemetryManager: ServerTelemetryManager | null;\n    clientCredentials: ClientCredentials;\n    persistencePlugin: ICachePlugin | null;\n    serializableCache: ISerializableTokenCache | null;\n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n * - skipAuthorityMetadataCache      - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\n * @internal\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    clientCapabilities?: Array<string>;\n    azureCloudOptions?: AzureCloudOptions;\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback;\n    piiLoggingEnabled?: boolean;\n    logLevel?: LogLevel;\n    correlationId?: string;\n};\n\n/**\n *  Use this to configure credential cache preferences in the ClientConfiguration object\n *\n * - claimsBasedCachingEnabled   - Sets whether tokens should be cached based on the claims hash. Default is false.\n */\nexport type CacheOptions = {\n    claimsBasedCachingEnabled?: boolean;\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string;\n    version: string;\n    cpu: string;\n    os: string;\n};\n\n/**\n * AzureCloudInstance specific options\n *\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\n * - tenant                         - provision to provide the tenant info\n */\nexport type AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance;\n    tenant?: string;\n};\n\nexport type TelemetryOptions = {\n    application: ApplicationTelemetry;\n};\n\n/**\n * Telemetry information sent on request\n * - appName: Unique string name of an application\n * - appVersion: Version of the application using MSAL\n */\nexport type ApplicationTelemetry = {\n    appName: string;\n    appVersion: string;\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n    claimsBasedCachingEnabled: false,\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\n\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\n};\n\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration({\n    authOptions: userAuthOptions,\n    systemOptions: userSystemOptions,\n    loggerOptions: userLoggerOption,\n    cacheOptions: userCacheOptions,\n    storageInterface: storageImplementation,\n    networkInterface: networkImplementation,\n    cryptoInterface: cryptoImplementation,\n    clientCredentials: clientCredentials,\n    libraryInfo: libraryInfo,\n    telemetry: telemetry,\n    serverTelemetryManager: serverTelemetryManager,\n    persistencePlugin: persistencePlugin,\n    serializableCache: serializableCache,\n}: ClientConfiguration): CommonClientConfiguration {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface:\n            storageImplementation ||\n            new DefaultStorageClass(\n                userAuthOptions.clientId,\n                DEFAULT_CRYPTO_IMPLEMENTATION,\n                new Logger(loggerOptions)\n            ),\n        networkInterface:\n            networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nexport function isOidcProtocolMode(config: ClientConfiguration): boolean {\n    return (\n        config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { ShrOptions, SignedHttpRequest } from \"./SignedHttpRequest\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string;\n    challenge: string;\n};\n\nexport type SignedHttpRequestParameters = Pick<\n    BaseAuthRequest,\n    | \"resourceRequestMethod\"\n    | \"resourceRequestUri\"\n    | \"shrClaims\"\n    | \"shrNonce\"\n    | \"shrOptions\"\n> & {\n    correlationId?: string;\n};\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input\n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input\n     */\n    base64Decode(input: string): string;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /**\n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken\n     */\n    signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        shrOptions?: ShrOptions,\n        correlationId?: string\n    ): Promise<string>;\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    hashString(plainText: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Decode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Encode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async clearKeystore(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async signJwt(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async hashString(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport * as AuthErrorCodes from \"./AuthErrorCodes\";\nexport { AuthErrorCodes };\n\nexport const AuthErrorMessages = {\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\n    [AuthErrorCodes.postRequestFailed]:\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: AuthErrorCodes.unexpectedError,\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\n    },\n    postRequestFailed: {\n        code: AuthErrorCodes.postRequestFailed,\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n}\n\nexport function createAuthError(\n    code: string,\n    additionalMessage?: string\n): AuthError {\n    return new AuthError(\n        code,\n        additionalMessage\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\n            : AuthErrorMessages[code]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as ClientAuthErrorCodes from \"./ClientAuthErrorCodes\";\nexport { ClientAuthErrorCodes }; // Allow importing as \"ClientAuthErrorCodes\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\n\nexport const ClientAuthErrorMessages = {\n    [ClientAuthErrorCodes.clientInfoDecodingError]:\n        \"The client info could not be parsed/decoded correctly\",\n    [ClientAuthErrorCodes.clientInfoEmptyError]: \"The client info was empty\",\n    [ClientAuthErrorCodes.tokenParsingError]: \"Token cannot be parsed\",\n    [ClientAuthErrorCodes.nullOrEmptyToken]: \"The token is null or empty\",\n    [ClientAuthErrorCodes.endpointResolutionError]:\n        \"Endpoints cannot be resolved\",\n    [ClientAuthErrorCodes.networkError]: \"Network request failed\",\n    [ClientAuthErrorCodes.openIdConfigError]:\n        \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [ClientAuthErrorCodes.hashNotDeserialized]:\n        \"The hash parameters could not be deserialized\",\n    [ClientAuthErrorCodes.invalidState]: \"State was not the expected format\",\n    [ClientAuthErrorCodes.stateMismatch]: \"State mismatch error\",\n    [ClientAuthErrorCodes.stateNotFound]: \"State not found\",\n    [ClientAuthErrorCodes.nonceMismatch]: \"Nonce mismatch error\",\n    [ClientAuthErrorCodes.authTimeNotFound]:\n        \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [ClientAuthErrorCodes.maxAgeTranspired]:\n        \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [ClientAuthErrorCodes.multipleMatchingTokens]:\n        \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [ClientAuthErrorCodes.multipleMatchingAccounts]:\n        \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [ClientAuthErrorCodes.multipleMatchingAppMetadata]:\n        \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [ClientAuthErrorCodes.requestCannotBeMade]:\n        \"Token request cannot be made without authorization code or refresh token.\",\n    [ClientAuthErrorCodes.cannotRemoveEmptyScope]:\n        \"Cannot remove null or empty scope from ScopeSet\",\n    [ClientAuthErrorCodes.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [ClientAuthErrorCodes.emptyInputScopeSet]:\n        \"Empty input ScopeSet cannot be processed\",\n    [ClientAuthErrorCodes.deviceCodePollingCancelled]:\n        \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [ClientAuthErrorCodes.deviceCodeExpired]: \"Device code is expired.\",\n    [ClientAuthErrorCodes.deviceCodeUnknownError]:\n        \"Device code stopped polling for unknown reasons.\",\n    [ClientAuthErrorCodes.noAccountInSilentRequest]:\n        \"Please pass an account object, silent flow is not supported without account information\",\n    [ClientAuthErrorCodes.invalidCacheRecord]:\n        \"Cache record object was null or undefined.\",\n    [ClientAuthErrorCodes.invalidCacheEnvironment]:\n        \"Invalid environment when attempting to create cache entry\",\n    [ClientAuthErrorCodes.noAccountFound]:\n        \"No account found in cache for given key.\",\n    [ClientAuthErrorCodes.noCryptoObject]: \"No crypto object detected.\",\n    [ClientAuthErrorCodes.unexpectedCredentialType]:\n        \"Unexpected credential type.\",\n    [ClientAuthErrorCodes.invalidAssertion]:\n        \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [ClientAuthErrorCodes.invalidClientCredential]:\n        \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [ClientAuthErrorCodes.tokenRefreshRequired]:\n        \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [ClientAuthErrorCodes.userTimeoutReached]:\n        \"User defined timeout for device code polling reached\",\n    [ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt]:\n        \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse]:\n        \"Server response does not contain an authorization code to proceed\",\n    [ClientAuthErrorCodes.bindingKeyNotRemoved]:\n        \"Could not remove the credential's binding key from storage.\",\n    [ClientAuthErrorCodes.endSessionEndpointNotSupported]:\n        \"The provided authority does not support logout\",\n    [ClientAuthErrorCodes.keyIdMissing]:\n        \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [ClientAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [ClientAuthErrorCodes.userCanceled]: \"User cancelled the flow.\",\n    [ClientAuthErrorCodes.missingTenantIdError]:\n        \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [ClientAuthErrorCodes.methodNotImplemented]:\n        \"This method has not been implemented\",\n    [ClientAuthErrorCodes.nestedAppAuthBridgeDisabled]:\n        \"The nested app auth bridge is disabled\",\n};\n\n/**\n * String constants used by error codes and messages.\n * @deprecated Use ClientAuthErrorCodes instead\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: ClientAuthErrorCodes.clientInfoDecodingError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoDecodingError\n        ],\n    },\n    clientInfoEmptyError: {\n        code: ClientAuthErrorCodes.clientInfoEmptyError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoEmptyError\n        ],\n    },\n    tokenParsingError: {\n        code: ClientAuthErrorCodes.tokenParsingError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.tokenParsingError],\n    },\n    nullOrEmptyToken: {\n        code: ClientAuthErrorCodes.nullOrEmptyToken,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nullOrEmptyToken],\n    },\n    endpointResolutionError: {\n        code: ClientAuthErrorCodes.endpointResolutionError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endpointResolutionError\n        ],\n    },\n    networkError: {\n        code: ClientAuthErrorCodes.networkError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.networkError],\n    },\n    unableToGetOpenidConfigError: {\n        code: ClientAuthErrorCodes.openIdConfigError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.openIdConfigError],\n    },\n    hashNotDeserialized: {\n        code: ClientAuthErrorCodes.hashNotDeserialized,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.hashNotDeserialized],\n    },\n    invalidStateError: {\n        code: ClientAuthErrorCodes.invalidState,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidState],\n    },\n    stateMismatchError: {\n        code: ClientAuthErrorCodes.stateMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateMismatch],\n    },\n    stateNotFoundError: {\n        code: ClientAuthErrorCodes.stateNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateNotFound],\n    },\n    nonceMismatchError: {\n        code: ClientAuthErrorCodes.nonceMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nonceMismatch],\n    },\n    authTimeNotFoundError: {\n        code: ClientAuthErrorCodes.authTimeNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.authTimeNotFound],\n    },\n    maxAgeTranspired: {\n        code: ClientAuthErrorCodes.maxAgeTranspired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.maxAgeTranspired],\n    },\n    multipleMatchingTokens: {\n        code: ClientAuthErrorCodes.multipleMatchingTokens,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingTokens\n        ],\n    },\n    multipleMatchingAccounts: {\n        code: ClientAuthErrorCodes.multipleMatchingAccounts,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAccounts\n        ],\n    },\n    multipleMatchingAppMetadata: {\n        code: ClientAuthErrorCodes.multipleMatchingAppMetadata,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAppMetadata\n        ],\n    },\n    tokenRequestCannotBeMade: {\n        code: ClientAuthErrorCodes.requestCannotBeMade,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.requestCannotBeMade],\n    },\n    removeEmptyScopeError: {\n        code: ClientAuthErrorCodes.cannotRemoveEmptyScope,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotRemoveEmptyScope\n        ],\n    },\n    appendScopeSetError: {\n        code: ClientAuthErrorCodes.cannotAppendScopeSet,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotAppendScopeSet\n        ],\n    },\n    emptyInputScopeSetError: {\n        code: ClientAuthErrorCodes.emptyInputScopeSet,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.emptyInputScopeSet],\n    },\n    DeviceCodePollingCancelled: {\n        code: ClientAuthErrorCodes.deviceCodePollingCancelled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodePollingCancelled\n        ],\n    },\n    DeviceCodeExpired: {\n        code: ClientAuthErrorCodes.deviceCodeExpired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.deviceCodeExpired],\n    },\n    DeviceCodeUnknownError: {\n        code: ClientAuthErrorCodes.deviceCodeUnknownError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodeUnknownError\n        ],\n    },\n    NoAccountInSilentRequest: {\n        code: ClientAuthErrorCodes.noAccountInSilentRequest,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noAccountInSilentRequest\n        ],\n    },\n    invalidCacheRecord: {\n        code: ClientAuthErrorCodes.invalidCacheRecord,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidCacheRecord],\n    },\n    invalidCacheEnvironment: {\n        code: ClientAuthErrorCodes.invalidCacheEnvironment,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidCacheEnvironment\n        ],\n    },\n    noAccountFound: {\n        code: ClientAuthErrorCodes.noAccountFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noAccountFound],\n    },\n    noCryptoObj: {\n        code: ClientAuthErrorCodes.noCryptoObject,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noCryptoObject],\n    },\n    unexpectedCredentialType: {\n        code: ClientAuthErrorCodes.unexpectedCredentialType,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.unexpectedCredentialType\n        ],\n    },\n    invalidAssertion: {\n        code: ClientAuthErrorCodes.invalidAssertion,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidAssertion],\n    },\n    invalidClientCredential: {\n        code: ClientAuthErrorCodes.invalidClientCredential,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidClientCredential\n        ],\n    },\n    tokenRefreshRequired: {\n        code: ClientAuthErrorCodes.tokenRefreshRequired,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenRefreshRequired\n        ],\n    },\n    userTimeoutReached: {\n        code: ClientAuthErrorCodes.userTimeoutReached,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userTimeoutReached],\n    },\n    tokenClaimsRequired: {\n        code: ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n        ],\n    },\n    noAuthorizationCodeFromServer: {\n        code: ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n        ],\n    },\n    bindingKeyNotRemovedError: {\n        code: ClientAuthErrorCodes.bindingKeyNotRemoved,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.bindingKeyNotRemoved\n        ],\n    },\n    logoutNotSupported: {\n        code: ClientAuthErrorCodes.endSessionEndpointNotSupported,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endSessionEndpointNotSupported\n        ],\n    },\n    keyIdMissing: {\n        code: ClientAuthErrorCodes.keyIdMissing,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.keyIdMissing],\n    },\n    noNetworkConnectivity: {\n        code: ClientAuthErrorCodes.noNetworkConnectivity,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    userCanceledError: {\n        code: ClientAuthErrorCodes.userCanceled,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userCanceled],\n    },\n    missingTenantIdError: {\n        code: ClientAuthErrorCodes.missingTenantIdError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.missingTenantIdError\n        ],\n    },\n    nestedAppAuthBridgeDisabled: {\n        code: ClientAuthErrorCodes.nestedAppAuthBridgeDisabled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.nestedAppAuthBridgeDisabled\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n    constructor(errorCode: string, additionalMessage?: string) {\n        super(\n            errorCode,\n            additionalMessage\n                ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n                : ClientAuthErrorMessages[errorCode]\n        );\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\n\nexport function createClientAuthError(\n    errorCode: string,\n    additionalMessage?: string\n): ClientAuthError {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const clientInfoDecodingError = \"client_info_decoding_error\";\nexport const clientInfoEmptyError = \"client_info_empty_error\";\nexport const tokenParsingError = \"token_parsing_error\";\nexport const nullOrEmptyToken = \"null_or_empty_token\";\nexport const endpointResolutionError = \"endpoints_resolution_error\";\nexport const networkError = \"network_error\";\nexport const openIdConfigError = \"openid_config_error\";\nexport const hashNotDeserialized = \"hash_not_deserialized\";\nexport const invalidState = \"invalid_state\";\nexport const stateMismatch = \"state_mismatch\";\nexport const stateNotFound = \"state_not_found\";\nexport const nonceMismatch = \"nonce_mismatch\";\nexport const authTimeNotFound = \"auth_time_not_found\";\nexport const maxAgeTranspired = \"max_age_transpired\";\nexport const multipleMatchingTokens = \"multiple_matching_tokens\";\nexport const multipleMatchingAccounts = \"multiple_matching_accounts\";\nexport const multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nexport const requestCannotBeMade = \"request_cannot_be_made\";\nexport const cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nexport const cannotAppendScopeSet = \"cannot_append_scopeset\";\nexport const emptyInputScopeSet = \"empty_input_scopeset\";\nexport const deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nexport const deviceCodeExpired = \"device_code_expired\";\nexport const deviceCodeUnknownError = \"device_code_unknown_error\";\nexport const noAccountInSilentRequest = \"no_account_in_silent_request\";\nexport const invalidCacheRecord = \"invalid_cache_record\";\nexport const invalidCacheEnvironment = \"invalid_cache_environment\";\nexport const noAccountFound = \"no_account_found\";\nexport const noCryptoObject = \"no_crypto_object\";\nexport const unexpectedCredentialType = \"unexpected_credential_type\";\nexport const invalidAssertion = \"invalid_assertion\";\nexport const invalidClientCredential = \"invalid_client_credential\";\nexport const tokenRefreshRequired = \"token_refresh_required\";\nexport const userTimeoutReached = \"user_timeout_reached\";\nexport const tokenClaimsCnfRequiredForSignedJwt =\n    \"token_claims_cnf_required_for_signedjwt\";\nexport const authorizationCodeMissingFromServerResponse =\n    \"authorization_code_missing_from_server_response\";\nexport const bindingKeyNotRemoved = \"binding_key_not_removed\";\nexport const endSessionEndpointNotSupported =\n    \"end_session_endpoint_not_supported\";\nexport const keyIdMissing = \"key_id_missing\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const userCanceled = \"user_canceled\";\nexport const missingTenantIdError = \"missing_tenant_id_error\";\nexport const methodNotImplemented = \"method_not_implemented\";\nexport const nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as ClientConfigurationErrorCodes from \"./ClientConfigurationErrorCodes\";\nexport { ClientConfigurationErrorCodes };\n\nexport const ClientConfigurationErrorMessages = {\n    [ClientConfigurationErrorCodes.redirectUriEmpty]:\n        \"A redirect URI is required for all calls, and none has been set.\",\n    [ClientConfigurationErrorCodes.claimsRequestParsingError]:\n        \"Could not parse the given claims request object.\",\n    [ClientConfigurationErrorCodes.authorityUriInsecure]:\n        \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [ClientConfigurationErrorCodes.urlParseError]:\n        \"URL could not be parsed into appropriate segments.\",\n    [ClientConfigurationErrorCodes.urlEmptyError]: \"URL was empty or null.\",\n    [ClientConfigurationErrorCodes.emptyInputScopesError]:\n        \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [ClientConfigurationErrorCodes.invalidPromptValue]:\n        \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [ClientConfigurationErrorCodes.invalidClaims]:\n        \"Given claims parameter must be a stringified JSON object.\",\n    [ClientConfigurationErrorCodes.tokenRequestEmpty]:\n        \"Token request was empty and not found in cache.\",\n    [ClientConfigurationErrorCodes.logoutRequestEmpty]:\n        \"The logout request was null or undefined.\",\n    [ClientConfigurationErrorCodes.invalidCodeChallengeMethod]:\n        'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [ClientConfigurationErrorCodes.pkceParamsMissing]:\n        \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata]:\n        \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [ClientConfigurationErrorCodes.invalidAuthorityMetadata]:\n        \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [ClientConfigurationErrorCodes.untrustedAuthority]:\n        \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [ClientConfigurationErrorCodes.missingSshJwk]:\n        \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingSshKid]:\n        \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingNonceAuthenticationHeader]:\n        \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [ClientConfigurationErrorCodes.invalidAuthenticationHeader]:\n        \"Invalid authentication header provided\",\n    [ClientConfigurationErrorCodes.cannotSetOIDCOptions]:\n        \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [ClientConfigurationErrorCodes.cannotAllowNativeBroker]:\n        \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    [ClientConfigurationErrorCodes.authorityMismatch]:\n        \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use ClientConfigurationErrorCodes instead\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: ClientConfigurationErrorCodes.redirectUriEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.redirectUriEmpty\n        ],\n    },\n    claimsRequestParsingError: {\n        code: ClientConfigurationErrorCodes.claimsRequestParsingError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.claimsRequestParsingError\n        ],\n    },\n    authorityUriInsecure: {\n        code: ClientConfigurationErrorCodes.authorityUriInsecure,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityUriInsecure\n        ],\n    },\n    urlParseError: {\n        code: ClientConfigurationErrorCodes.urlParseError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlParseError\n        ],\n    },\n    urlEmptyError: {\n        code: ClientConfigurationErrorCodes.urlEmptyError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlEmptyError\n        ],\n    },\n    emptyScopesError: {\n        code: ClientConfigurationErrorCodes.emptyInputScopesError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.emptyInputScopesError\n        ],\n    },\n    invalidPrompt: {\n        code: ClientConfigurationErrorCodes.invalidPromptValue,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidPromptValue\n        ],\n    },\n    invalidClaimsRequest: {\n        code: ClientConfigurationErrorCodes.invalidClaims,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidClaims\n        ],\n    },\n    tokenRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.tokenRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.tokenRequestEmpty\n        ],\n    },\n    logoutRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.logoutRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.logoutRequestEmpty\n        ],\n    },\n    invalidCodeChallengeMethod: {\n        code: ClientConfigurationErrorCodes.invalidCodeChallengeMethod,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n        ],\n    },\n    invalidCodeChallengeParams: {\n        code: ClientConfigurationErrorCodes.pkceParamsMissing,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.pkceParamsMissing\n        ],\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n        ],\n    },\n    invalidAuthorityMetadata: {\n        code: ClientConfigurationErrorCodes.invalidAuthorityMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthorityMetadata\n        ],\n    },\n    untrustedAuthority: {\n        code: ClientConfigurationErrorCodes.untrustedAuthority,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.untrustedAuthority\n        ],\n    },\n    missingSshJwk: {\n        code: ClientConfigurationErrorCodes.missingSshJwk,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshJwk\n        ],\n    },\n    missingSshKid: {\n        code: ClientConfigurationErrorCodes.missingSshKid,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshKid\n        ],\n    },\n    missingNonceAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.missingNonceAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingNonceAuthenticationHeader\n        ],\n    },\n    invalidAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.invalidAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthenticationHeader\n        ],\n    },\n    cannotSetOIDCOptions: {\n        code: ClientConfigurationErrorCodes.cannotSetOIDCOptions,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotSetOIDCOptions\n        ],\n    },\n    cannotAllowNativeBroker: {\n        code: ClientConfigurationErrorCodes.cannotAllowNativeBroker,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotAllowNativeBroker\n        ],\n    },\n    authorityMismatch: {\n        code: ClientConfigurationErrorCodes.authorityMismatch,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityMismatch\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\n\nexport function createClientConfigurationError(\n    errorCode: string\n): ClientConfigurationError {\n    return new ClientConfigurationError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const redirectUriEmpty = \"redirect_uri_empty\";\nexport const claimsRequestParsingError = \"claims_request_parsing_error\";\nexport const authorityUriInsecure = \"authority_uri_insecure\";\nexport const urlParseError = \"url_parse_error\";\nexport const urlEmptyError = \"empty_url_error\";\nexport const emptyInputScopesError = \"empty_input_scopes_error\";\nexport const invalidPromptValue = \"invalid_prompt_value\";\nexport const invalidClaims = \"invalid_claims\";\nexport const tokenRequestEmpty = \"token_request_empty\";\nexport const logoutRequestEmpty = \"logout_request_empty\";\nexport const invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nexport const pkceParamsMissing = \"pkce_params_missing\";\nexport const invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nexport const invalidAuthorityMetadata = \"invalid_authority_metadata\";\nexport const untrustedAuthority = \"untrusted_authority\";\nexport const missingSshJwk = \"missing_ssh_jwk\";\nexport const missingSshKid = \"missing_ssh_kid\";\nexport const missingNonceAuthenticationHeader =\n    \"missing_nonce_authentication_header\";\nexport const invalidAuthenticationHeader = \"invalid_authentication_header\";\nexport const cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nexport const cannotAllowNativeBroker = \"cannot_allow_native_broker\";\nexport const authorityMismatch = \"authority_mismatch\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport { AuthError } from \"./AuthError\";\nimport * as InteractionRequiredAuthErrorCodes from \"./InteractionRequiredAuthErrorCodes\";\nexport { InteractionRequiredAuthErrorCodes };\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    InteractionRequiredAuthErrorCodes.interactionRequired,\n    InteractionRequiredAuthErrorCodes.consentRequired,\n    InteractionRequiredAuthErrorCodes.loginRequired,\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n];\n\nconst InteractionRequiredAuthErrorMessages = {\n    [InteractionRequiredAuthErrorCodes.noTokensFound]:\n        \"No refresh token found in the cache. Please sign-in.\",\n    [InteractionRequiredAuthErrorCodes.nativeAccountUnavailable]:\n        \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n};\n\n/**\n * Interaction required errors defined by the SDK\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: InteractionRequiredAuthErrorCodes.noTokensFound,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.noTokensFound\n        ],\n    },\n    native_account_unavailable: {\n        code: InteractionRequiredAuthErrorCodes.nativeAccountUnavailable,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n        ],\n    },\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n    /**\n     * The time the error occured at\n     */\n    timestamp: string;\n\n    /**\n     * TraceId associated with the error\n     */\n    traceId: string;\n\n    /**\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\n     *\n     * A string with extra claims needed for the token request to succeed\n     * web site: redirect the user to the authorization page and set the extra claims\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\n     * desktop application or browser context: include the claims when acquiring the token interactively\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\n     */\n    claims: string;\n\n    constructor(\n        errorCode?: string,\n        errorMessage?: string,\n        subError?: string,\n        timestamp?: string,\n        traceId?: string,\n        correlationId?: string,\n        claims?: string\n    ) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n    }\n}\n\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nexport function isInteractionRequiredError(\n    errorCode?: string,\n    errorString?: string,\n    subError?: string\n): boolean {\n    const isInteractionRequiredErrorCode =\n        !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError =\n        !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc =\n        !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n    return (\n        isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError\n    );\n}\n\n/**\n * Creates an InteractionRequiredAuthError\n */\nexport function createInteractionRequiredAuthError(\n    errorCode: string\n): InteractionRequiredAuthError {\n    return new InteractionRequiredAuthError(\n        errorCode,\n        InteractionRequiredAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LoggerOptions } from \"../config/ClientConfiguration\";\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel;\n    containsPii?: boolean;\n    context?: string;\n    correlationId?: string;\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace,\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(\n        loggerOptions: LoggerOptions,\n        packageName?: string,\n        packageVersion?: string\n    ) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions =\n            loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    private static createDefaultLoggerOptions(): LoggerOptions {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(\n        packageName: string,\n        packageVersion: string,\n        correlationId?: string\n    ): Logger {\n        return new Logger(\n            {\n                loggerCallback: this.localCallback,\n                piiLoggingEnabled: this.piiLoggingEnabled,\n                logLevel: this.level,\n                correlationId: correlationId || this.correlationId,\n            },\n            packageName,\n            packageVersion\n        );\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(\n        logMessage: string,\n        options: LoggerMessageOptions\n    ): void {\n        if (\n            options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)\n        ) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${\n            options.correlationId || this.correlationId || \"\"\n        }]`;\n\n        const log = `${logHeader} : ${this.packageName}@${\n            this.packageVersion\n        } : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(\n            options.logLevel,\n            log,\n            options.containsPii || false\n        );\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(\n        level: LogLevel,\n        message: string,\n        containsPii: boolean\n    ): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-common\";\nexport const version = \"14.4.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString: Array<string>): ScopeSet {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        } else {\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n\n        return scopeSet;\n    }\n\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    private validateInputScopes(inputScopes: Array<string>): void {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.emptyInputScopesError\n            );\n        }\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (\n            this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope))\n        );\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotAppendScopeSet\n            );\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (!scope) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotRemoveEmptyScope\n            );\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) =>\n            unionScopes.add(scope.toLowerCase())\n        );\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority:\n        \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    RefreshTokenClientExecutePostToTokenEndpoint:\n        \"refreshTokenClientExecutePostToTokenEndpoint\",\n    AuthorizationCodeClientExecutePostToTokenEndpoint:\n        \"authorizationCodeClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest:\n        \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken:\n        \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken:\n        \"refreshTokenClientAcquireTokenByRefreshToken\",\n\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody:\n        \"refreshTokenClientCreateTokenRequestBody\",\n\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\n    SilentFlowClientGenerateResultFromCacheRecord:\n        \"silentFlowClientGenerateResultFromCacheRecord\",\n\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n\n    InitializeClientApplication: \"initializeClientApplication\",\n\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\n\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient:\n        \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration:\n        \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest:\n        \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest:\n        \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponse: \"handleCodeResponse\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    DeserializeResponse: \"deserializeResponse\",\n\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance:\n        \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityResolveEndpointsFromLocalSources:\n        \"authorityResolveEndpointsFromLocalSources\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork:\n        \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata:\n        \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork:\n        \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation:\n        \"authorityUpdateMetadataWithRegionalInformation\",\n\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement:\n        \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromiseMeasurement\",\n\n    UpdateCloudDiscoveryMetadataMeasurement:\n        \"updateCloudDiscoveryMetadataMeasurement\",\n\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n\n    RemoveHiddenIframe: \"removeHiddenIframe\",\n\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\n\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n} as const;\nexport type PerformanceEvents =\n    (typeof PerformanceEvents)[keyof typeof PerformanceEvents];\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n} as const;\nexport type PerformanceEventStatus =\n    (typeof PerformanceEventStatus)[keyof typeof PerformanceEventStatus];\n\nexport type SubMeasurement = {\n    name: string;\n    startTimeMs: number;\n};\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string;\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus;\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string;\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string;\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string;\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null;\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null;\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null;\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number;\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null;\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string;\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string;\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string;\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string;\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean;\n\n    /**\n     * Request ID returned from the response\n     *\n     * @type {?string}\n     */\n    requestId?: string;\n\n    /**\n     * Cache lookup policy\n     *\n     * @type {?number}\n     */\n    cacheLookupPolicy?: number | undefined;\n\n    /**\n     * Cache Outcome\n     * @type {?number}\n     */\n    cacheOutcome?: number;\n\n    /**\n     * Amount of time spent in the JS queue in milliseconds.\n     *\n     * @type {?number}\n     */\n    queuedTimeMs?: number;\n\n    /**\n     * Sub-measurements for internal use. To be deleted before flushing.\n     */\n    incompleteSubMeasurements?: Map<string, SubMeasurement>;\n\n    visibilityChangeCount?: number;\n    incompleteSubsCount?: number;\n    /**\n     * Amount of times queued in the JS event queue.\n     *\n     * @type {?number}\n     */\n    queuedCount?: number;\n    /**\n     * Amount of manually completed queue events.\n     *\n     * @type {?number}\n     */\n    queuedManuallyCompletedCount?: number;\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number;\n\n    /**\n     *\n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number;\n\n    /**\n     *\n     * Size of the refresh token\n     *\n     * @type {number}\n     */\n\n    refreshTokenSize?: number | undefined;\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string;\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string;\n\n    /**\n     * The following are fields that may be emitted in native broker scenarios\n     */\n    extensionId?: string;\n    extensionVersion?: string;\n    matsBrokerVersion?: string;\n    matsAccountJoinOnStart?: string;\n    matsAccountJoinOnEnd?: string;\n    matsDeviceJoin?: string;\n    matsPromptBehavior?: string;\n    matsApiErrorCode?: number;\n    matsUiVisible?: boolean;\n    matsSilentCode?: number;\n    matsSilentBiSubCode?: number;\n    matsSilentMessage?: string;\n    matsSilentStatus?: number;\n    matsHttpStatus?: number;\n    matsHttpEventCount?: number;\n    httpVerToken?: string;\n\n    /**\n     * Native broker fields\n     */\n    allowNativeBroker?: boolean;\n    extensionInstalled?: boolean;\n    extensionHandshakeTimeoutMs?: number;\n    extensionHandshakeTimedOut?: boolean;\n\n    /**\n     * Nested App Auth Fields\n     */\n    nestedAppAuthRequest?: boolean;\n\n    /**\n     * Multiple matched access/id/refresh tokens in the cache\n     */\n    multiMatchedAT?: number;\n    multiMatchedID?: number;\n    multiMatchedRT?: number;\n};\n\nexport const IntFields: ReadonlySet<string> = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n    \"multiMatchedAT\",\n    \"multiMatchedID\",\n    \"multiMatchedRT\",\n]);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IUri } from \"./IUri\";\nimport { AADAuthorityConstants, Constants } from \"../utils/Constants\";\nimport * as UrlUtils from \"../utils/UrlUtils\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n\n    constructor(url: string) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlEmptyError\n            );\n        }\n\n        if (!url.includes(\"#\")) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if uri is insecure.\n        if (\n            !components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\"\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityUriInsecure\n            );\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (!queryString) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (\n            tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)\n        ) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\n            \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n        );\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (\n            urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")\n        ) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(\n                0,\n                urlComponents.QueryString.length - 1\n            );\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return (\n                baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl\n            );\n        }\n\n        return relativeUrl;\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(\n            urlObject.Protocol +\n                \"//\" +\n                urlObject.HostNameAndPort +\n                \"/\" +\n                urlObject.PathSegments.join(\"/\")\n        );\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     * @deprecated This API will be removed in a future version\n     */\n    static hashContainsKnownProperties(response: string): boolean {\n        return !!UrlUtils.getDeserializedResponse(response);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT:\n        \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\n\nexport const HttpStatus = {\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR_RANGE_START: 400,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVER_ERROR_RANGE_END: 599,\n} as const;\nexport type HttpStatus = (typeof HttpStatus)[keyof typeof HttpStatus];\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\n\nexport const OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n\n/**\n * Request header names\n */\nexport const HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n} as const;\nexport type HeaderNames = (typeof HeaderNames)[keyof typeof HeaderNames];\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport const PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\", // Legacy active-account cache key, use new key instead\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n} as const;\nexport type PersistentCacheKeys =\n    (typeof PersistentCacheKeys)[keyof typeof PersistentCacheKeys];\n\n/**\n * String constants related to AAD Authority\n */\nexport const AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n} as const;\nexport type AADAuthorityConstants =\n    (typeof AADAuthorityConstants)[keyof typeof AADAuthorityConstants];\n\n/**\n * Keys in the hashParams sent by AAD Server\n */\nexport const AADServerParamKeys = {\n    CLIENT_ID: \"client_id\",\n    REDIRECT_URI: \"redirect_uri\",\n    RESPONSE_TYPE: \"response_type\",\n    RESPONSE_MODE: \"response_mode\",\n    GRANT_TYPE: \"grant_type\",\n    CLAIMS: \"claims\",\n    SCOPE: \"scope\",\n    ERROR: \"error\",\n    ERROR_DESCRIPTION: \"error_description\",\n    ACCESS_TOKEN: \"access_token\",\n    ID_TOKEN: \"id_token\",\n    REFRESH_TOKEN: \"refresh_token\",\n    EXPIRES_IN: \"expires_in\",\n    STATE: \"state\",\n    NONCE: \"nonce\",\n    PROMPT: \"prompt\",\n    SESSION_STATE: \"session_state\",\n    CLIENT_INFO: \"client_info\",\n    CODE: \"code\",\n    CODE_CHALLENGE: \"code_challenge\",\n    CODE_CHALLENGE_METHOD: \"code_challenge_method\",\n    CODE_VERIFIER: \"code_verifier\",\n    CLIENT_REQUEST_ID: \"client-request-id\",\n    X_CLIENT_SKU: \"x-client-SKU\",\n    X_CLIENT_VER: \"x-client-VER\",\n    X_CLIENT_OS: \"x-client-OS\",\n    X_CLIENT_CPU: \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM: \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM: \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY: \"x-ms-lib-capability\",\n    X_APP_NAME: \"x-app-name\",\n    X_APP_VER: \"x-app-ver\",\n    POST_LOGOUT_URI: \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT: \"id_token_hint\",\n    DEVICE_CODE: \"device_code\",\n    CLIENT_SECRET: \"client_secret\",\n    CLIENT_ASSERTION: \"client_assertion\",\n    CLIENT_ASSERTION_TYPE: \"client_assertion_type\",\n    TOKEN_TYPE: \"token_type\",\n    REQ_CNF: \"req_cnf\",\n    OBO_ASSERTION: \"assertion\",\n    REQUESTED_TOKEN_USE: \"requested_token_use\",\n    ON_BEHALF_OF: \"on_behalf_of\",\n    FOCI: \"foci\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    RETURN_SPA_CODE: \"return_spa_code\",\n    NATIVE_BROKER: \"nativebroker\",\n    LOGOUT_HINT: \"logout_hint\",\n} as const;\nexport type AADServerParamKeys =\n    (typeof AADServerParamKeys)[keyof typeof AADServerParamKeys];\n\n/**\n * Claims request keys\n */\nexport const ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n} as const;\nexport type ClaimsRequestKeys =\n    (typeof ClaimsRequestKeys)[keyof typeof ClaimsRequestKeys];\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n\n/**\n * SSO Types - generated to populate hints\n */\nexport const SSOTypes = {\n    ACCOUNT: \"account\",\n    SID: \"sid\",\n    LOGIN_HINT: \"login_hint\",\n    ID_TOKEN: \"id_token\",\n    DOMAIN_HINT: \"domain_hint\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n    ACCOUNT_ID: \"accountIdentifier\",\n    HOMEACCOUNT_ID: \"homeAccountIdentifier\",\n} as const;\nexport type SSOTypes = (typeof SSOTypes)[keyof typeof SSOTypes];\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n\n/**\n * allowed values for server response type\n */\nexport const ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n} as const;\nexport type ServerResponseType =\n    (typeof ServerResponseType)[keyof typeof ServerResponseType];\n\n/**\n * allowed values for response_mode\n */\nexport const ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n} as const;\nexport type ResponseMode = (typeof ResponseMode)[keyof typeof ResponseMode];\n\n/**\n * allowed grant_type\n */\nexport const GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n} as const;\nexport type GrantType = (typeof GrantType)[keyof typeof GrantType];\n\n/**\n * Account types in Cache\n */\nexport const CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n} as const;\nexport type CacheAccountType =\n    (typeof CacheAccountType)[keyof typeof CacheAccountType];\n\n/**\n * Separators used in cache\n */\nexport const Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n} as const;\nexport type Separators = (typeof Separators)[keyof typeof Separators];\n\n/**\n * Credential Type stored in the cache\n */\nexport const CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n} as const;\nexport type CredentialType =\n    (typeof CredentialType)[keyof typeof CredentialType];\n\n/**\n * Combine all cache types\n */\nexport const CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n} as const;\nexport type CacheType = (typeof CacheType)[keyof typeof CacheType];\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\n\nexport const AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n} as const;\nexport type AuthorityMetadataSource =\n    (typeof AuthorityMetadataSource)[keyof typeof AuthorityMetadataSource];\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n\n/**\n * Type of the authentication request\n */\nexport const AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n} as const;\nexport type AuthenticationScheme =\n    (typeof AuthenticationScheme)[keyof typeof AuthenticationScheme];\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport const PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n} as const;\nexport type PasswordGrantConstants =\n    (typeof PasswordGrantConstants)[keyof typeof PasswordGrantConstants];\n\n/**\n * Response codes\n */\nexport const ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n} as const;\nexport type ResponseCodes = (typeof ResponseCodes)[keyof typeof ResponseCodes];\n\n/**\n * Region Discovery Sources\n */\nexport const RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n} as const;\nexport type RegionDiscoverySources =\n    (typeof RegionDiscoverySources)[keyof typeof RegionDiscoverySources];\n\n/**\n * Region Discovery Outcomes\n */\nexport const RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n} as const;\nexport type RegionDiscoveryOutcomes =\n    (typeof RegionDiscoveryOutcomes)[keyof typeof RegionDiscoveryOutcomes];\n\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nexport const CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n} as const;\nexport type CacheOutcome = (typeof CacheOutcome)[keyof typeof CacheOutcome];\n\nexport const JsonWebTokenTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n} as const;\nexport type JsonWebTokenTypes =\n    (typeof JsonWebTokenTypes)[keyof typeof JsonWebTokenTypes];\n\nexport const ONE_DAY_IN_MS = 86400000;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (\n            str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length\n        );\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map((entry) => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex: RegExp = new RegExp(\n            pattern\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\*/g, \"[^ ]*\")\n                .replace(/\\?/g, \"\\\\?\")\n        );\n\n        return regex.test(input);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nexport class TimeUtils {\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds(): number {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n\n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn: string, offset: number): boolean {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return offsetCurrentTimeSec > expirationSec;\n    }\n\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt\n     * @param offset\n     */\n    static wasClockTurnedBack(cachedAt: string): boolean {\n        const cachedAtSec = Number(cachedAt);\n\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay<T>(t: number, value?: T): Promise<T | void> {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n/**\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\n * @param hashString\n */\nexport function stripLeadingHashOrQuery(responseString: string): string {\n    if (responseString.startsWith(\"#/\")) {\n        return responseString.substring(2);\n    } else if (\n        responseString.startsWith(\"#\") ||\n        responseString.startsWith(\"?\")\n    ) {\n        return responseString.substring(1);\n    }\n\n    return responseString;\n}\n\n/**\n * Returns URL hash as server auth code response object.\n */\nexport function getDeserializedResponse(\n    responseString: string\n): ServerAuthorizationCodeResponse | null {\n    // Check if given hash is empty\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\n        return null;\n    }\n    try {\n        // Strip the # or ? symbol if present\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: ServerAuthorizationCodeResponse =\n            Object.fromEntries(new URLSearchParams(normalizedResponse));\n\n        // Check for known response properties\n        if (\n            deserializedHash.code ||\n            deserializedHash.error ||\n            deserializedHash.error_description ||\n            deserializedHash.state\n        ) {\n            return deserializedHash;\n        }\n    } catch (e) {\n        throw createClientAuthError(ClientAuthErrorCodes.hashNotDeserialized);\n    }\n\n    return null;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"0552252c\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"my_component:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_component\"] = self[\"webpackChunkmy_component\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n////\n//\n// A few enums copied from `fb/Schema.ts` and `fb/Message.ts` because Webpack\n// v4 doesn't seem to be able to tree-shake the rest of those exports.\n//\n// We will have to keep these enums in sync when we re-generate the flatbuffers\n// code from the shchemas. See js/DEVELOP.md for info on how to run flatbuffers\n// code generation.\n//\n////\n\n/**\n * Logical types, vector layouts, and schemas\n *\n * @enum {number}\n */\nexport enum MetadataVersion {\n    /**\n     * 0.1.0 (October 2016).\n     */\n    V1 = 0,\n\n    /**\n     * 0.2.0 (February 2017). Non-backwards compatible with V1.\n     */\n    V2 = 1,\n\n    /**\n     * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n     */\n    V3 = 2,\n\n    /**\n     * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n     */\n    V4 = 3,\n\n    /**\n     * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n     * metadata and IPC messages). Implementations are recommended to provide a\n     * V4 compatibility mode with V5 format changes disabled.\n     *\n     * Incompatible changes between V4 and V5:\n     * - Union buffer layout has changed. In V5, Unions don't have a validity\n     *   bitmap buffer.\n     */\n    V5 = 4\n}\n\n/**\n * @enum {number}\n */\nexport enum UnionMode {\n    Sparse = 0,\n    Dense = 1\n}\n\n/**\n * @enum {number}\n */\nexport enum Precision {\n    HALF = 0,\n    SINGLE = 1,\n    DOUBLE = 2\n}\n\n/**\n * @enum {number}\n */\nexport enum DateUnit {\n    DAY = 0,\n    MILLISECOND = 1\n}\n\n/**\n * @enum {number}\n */\nexport enum TimeUnit {\n    SECOND = 0,\n    MILLISECOND = 1,\n    MICROSECOND = 2,\n    NANOSECOND = 3\n}\n\n/**\n * @enum {number}\n */\nexport enum IntervalUnit {\n    YEAR_MONTH = 0,\n    DAY_TIME = 1,\n    MONTH_DAY_NANO = 2\n}\n\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport enum MessageHeader {\n    NONE = 0,\n    Schema = 1,\n    DictionaryBatch = 2,\n    RecordBatch = 3,\n    Tensor = 4,\n    SparseTensor = 5\n}\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    NONE = 0, /** The default placeholder type */\n    Null = 1, /** A NULL type having no physical storage */\n    Int = 2, /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Float = 3, /** 2, 4, or 8-byte floating point value */\n    Binary = 4, /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Utf8 = 5, /** UTF8 variable-length string as List<Char> */\n    Bool = 6, /** Boolean as 1 bit, LSB bit-packed ordering */\n    Decimal = 7, /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Date = 8, /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Time = 9, /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Timestamp = 10, /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Interval = 11, /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    List = 12, /** A list of some logical data type */\n    Struct = 13, /** Struct of logical types */\n    Union = 14, /** Union of logical types */\n    FixedSizeBinary = 15, /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeList = 16, /** Fixed-size list. Each value occupies the same number of bytes */\n    Map = 17, /** Map of named logical types */\n\n    Dictionary = -1, /** Dictionary aka Category type */\n    Int8 = -2,\n    Int16 = -3,\n    Int32 = -4,\n    Int64 = -5,\n    Uint8 = -6,\n    Uint16 = -7,\n    Uint32 = -8,\n    Uint64 = -9,\n    Float16 = -10,\n    Float32 = -11,\n    Float64 = -12,\n    DateDay = -13,\n    DateMillisecond = -14,\n    TimestampSecond = -15,\n    TimestampMillisecond = -16,\n    TimestampMicrosecond = -17,\n    TimestampNanosecond = -18,\n    TimeSecond = -19,\n    TimeMillisecond = -20,\n    TimeMicrosecond = -21,\n    TimeNanosecond = -22,\n    DenseUnion = -23,\n    SparseUnion = -24,\n    IntervalDayTime = -25,\n    IntervalYearMonth = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces.js';\n\n/* eslint-disable unicorn/throw-new-error */\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any>BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any>BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any>BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any>x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\nconst isReadableInterop = <T = any>(x: any): x is ReadableInterop<T> => ('_getDOMStream' in x && '_getNodeStream' in x);\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !isReadableInterop(x);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !isReadableInterop(x);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !isReadableInterop(x);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !isReadableInterop(x);\n};\n\n/** @ignore */\nexport const isFlatbuffersByteBuffer = (x: any): x is import('flatbuffers').ByteBuffer => {\n    return isObject(x) &&\n        isFunction(x['clear']) &&\n        isFunction(x['bytes']) &&\n        isFunction(x['position']) &&\n        isFunction(x['setPosition']) &&\n        isFunction(x['capacity']) &&\n        isFunction(x['getBufferIdentifier']) &&\n        isFunction(x['createLong']);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BigInt64Array, BigUint64Array } from './compat.js';\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any): string {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    if (ArrayBuffer.isView(x)) {\n        if (x instanceof BigInt64Array || x instanceof BigUint64Array) {\n            return `[${[...x].map(x => valueToString(x))}]`;\n        }\n        return `[${x}]`;\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x, (_, y) => typeof y === 'bigint' ? `${y}` : y);\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst decoder = new TextDecoder('utf-8');\n/** @ignore */\nexport const decodeUtf8 = (buffer?: BufferSource) => decoder.decode(buffer);\n\nconst encoder = new TextEncoder();\n/** @ignore */\nexport const encodeUtf8 = (value?: string) => encoder.encode(value);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { encodeUtf8 } from '../util/utf8.js';\nimport { TypedArray, TypedArrayConstructor, BigIntArrayConstructor } from '../interfaces.js';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isFlatbuffersByteBuffer, BigInt64Array, BigUint64Array } from './compat.js';\nimport { ByteBuffer } from 'flatbuffers';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    const result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    const result = collapseContiguousByteRanges(chunks);\n    const byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1;\n    const length = Math.min(size || Number.POSITIVE_INFINITY, byteLength);\n    for (const n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined |\n    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n    ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined>;\n\n/** @ignore */\nexport function toArrayBufferView<\n    T extends TypedArrayConstructor<any> | BigIntArrayConstructor<any>\n>(ArrayBufferViewCtor: any, input: ArrayBufferViewInput): InstanceType<T> {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (isFlatbuffersByteBuffer(value)) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : (value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT));\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n        (typeof source === 'string') ? wrap(source)\n            : (ArrayBuffer.isView(source)) ? wrap(source)\n                : (source instanceof ArrayBuffer) ? wrap(source)\n                    : (source instanceof SharedArrayBuf) ? wrap(source)\n                        : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it: Iterator<ArrayBufferViewInput, any, number | undefined>): Generator<T, void, number | undefined> {\n        let r: IteratorResult<any> = <any>null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n    return new ArrayCtor();\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncGenerator<T, T, number | undefined> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function* (it: Iterator<any>) {\n            let r: IteratorResult<any> = <any>null;\n            do {\n                r = it.next(yield r?.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n            : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                    : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                        : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                            : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it: AsyncIterator<ArrayBufferViewInput, any, number | undefined>): AsyncGenerator<T, void, number | undefined> {\n        let r: IteratorResult<any> = <any>null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n    return new ArrayCtor();\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0;\n    const n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer.js';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces.js';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces.js';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat.js';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function <T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function <T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function <T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function <T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    // @ts-ignore\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void];\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    const { buffer, byteOffset, length, 'signed': signed } = bn;\n    const words = new BigUint64Array(buffer, byteOffset, length);\n    const negative = signed && words[words.length - 1] & (BigInt(1) << BigInt(63));\n    let number = negative ? BigInt(1) : BigInt(0);\n    let i = BigInt(0);\n    if (!negative) {\n        for (const word of words) {\n            number += word * (BigInt(1) << (BigInt(32) * i++));\n        }\n    } else {\n        for (const word of words) {\n            number += ~word * (BigInt(1) << (BigInt(32) * i++));\n        }\n        number *= BigInt(-1);\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any>bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    const base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    const checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1;\n    const n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ?? `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any>SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any>UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any>SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any>DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any>UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any>SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any>UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any>DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new <T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n    'Int8Array' |\n    'Int16Array' |\n    'Int32Array' |\n    'Uint8Array' |\n    'Uint16Array' |\n    'Uint32Array' |\n    'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from './schema.js';\nimport { Vector } from './vector.js';\nimport { MapRow } from './row/map.js';\nimport { StructRow, StructRowProxy } from './row/struct.js';\nimport { Long } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces.js';\nimport { BigInt64Array, BigUint64Array } from './util/compat.js';\n\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum.js';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n\nexport interface DataType<TType extends Type = Type, TChildren extends TypeMap = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly TChildren: TChildren;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends TypeMap = any> {\n\n    declare public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static isNull(x: any): x is Null { return x?.typeId === Type.Null; }\n    /** @nocollapse */ static isInt(x: any): x is Int_ { return x?.typeId === Type.Int; }\n    /** @nocollapse */ static isFloat(x: any): x is Float { return x?.typeId === Type.Float; }\n    /** @nocollapse */ static isBinary(x: any): x is Binary { return x?.typeId === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x: any): x is Utf8 { return x?.typeId === Type.Utf8; }\n    /** @nocollapse */ static isBool(x: any): x is Bool { return x?.typeId === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x: any): x is Decimal { return x?.typeId === Type.Decimal; }\n    /** @nocollapse */ static isDate(x: any): x is Date_ { return x?.typeId === Type.Date; }\n    /** @nocollapse */ static isTime(x: any): x is Time_ { return x?.typeId === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x: any): x is Timestamp_ { return x?.typeId === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x: any): x is Interval_ { return x?.typeId === Type.Interval; }\n    /** @nocollapse */ static isList(x: any): x is List { return x?.typeId === Type.List; }\n    /** @nocollapse */ static isStruct(x: any): x is Struct { return x?.typeId === Type.Struct; }\n    /** @nocollapse */ static isUnion(x: any): x is Union_ { return x?.typeId === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x: any): x is FixedSizeBinary { return x?.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x: any): x is FixedSizeList { return x?.typeId === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x: any): x is Map_ { return x?.typeId === Type.Map; }\n    /** @nocollapse */ static isDictionary(x: any): x is Dictionary { return x?.typeId === Type.Dictionary; }\n\n    /** @nocollapse */ static isDenseUnion(x: any): x is DenseUnion { return DataType.isUnion(x) && x.mode === UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x: any): x is SparseUnion { return DataType.isUnion(x) && x.mode === UnionMode.Sparse; }\n\n    public get typeId(): TType { return <any>Type.NONE; }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any>proto).children = null;\n        (<any>proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray; TValue: number | bigint };\n    [Type.Int8]: { bitWidth: 8; isSigned: true; TArray: Int8Array; TValue: number };\n    [Type.Int16]: { bitWidth: 16; isSigned: true; TArray: Int16Array; TValue: number };\n    [Type.Int32]: { bitWidth: 32; isSigned: true; TArray: Int32Array; TValue: number };\n    [Type.Int64]: { bitWidth: 64; isSigned: true; TArray: BigInt64Array; TValue: bigint };\n    [Type.Uint8]: { bitWidth: 8; isSigned: false; TArray: Uint8Array; TValue: number };\n    [Type.Uint16]: { bitWidth: 16; isSigned: false; TArray: Uint16Array; TValue: number };\n    [Type.Uint32]: { bitWidth: 32; isSigned: false; TArray: Uint32Array; TValue: number };\n    [Type.Uint64]: { bitWidth: 64; isSigned: false; TArray: BigUint64Array; TValue: bigint };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue'] }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n        public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any>proto).isSigned = null;\n        (<any>proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> {\n    constructor() { super(true, 8); }\n    public get ArrayType() { return Int8Array; }\n}\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> {\n    constructor() { super(true, 16); }\n    public get ArrayType() { return Int16Array; }\n}\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> {\n    constructor() { super(true, 32); }\n    public get ArrayType() { return Int32Array; }\n}\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> {\n    constructor() { super(true, 64); }\n    public get ArrayType() { return BigInt64Array; }\n}\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> {\n    constructor() { super(false, 8); }\n    public get ArrayType() { return Uint8Array; }\n}\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> {\n    constructor() { super(false, 16); }\n    public get ArrayType() { return Uint16Array; }\n}\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> {\n    constructor() { super(false, 32); }\n    public get ArrayType() { return Uint32Array; }\n}\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> {\n    constructor() { super(false, 64); }\n    public get ArrayType() { return BigUint64Array; }\n}\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float]: { precision: Precision; TArray: FloatArray; TValue: number };\n    [Type.Float16]: { precision: Precision.HALF; TArray: Uint16Array; TValue: number };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array; TValue: number };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array; TValue: number };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any>proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array> }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n        public readonly precision: number,\n        public readonly bitWidth: number = 128) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any>proto).scale = null;\n        (<any>proto).precision = null;\n        (<any>proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array> }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any>proto).unit = null;\n        (<any>proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time]: { unit: TimeUnit; TValue: number | bigint; TArray: Int32Array | BigInt64Array };\n    [Type.TimeSecond]: { unit: TimeUnit.SECOND; TValue: number; TArray: Int32Array };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number; TArray: Int32Array };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: bigint; TArray: BigInt64Array };\n    [Type.TimeNanosecond]: { unit: TimeUnit.NANOSECOND; TValue: bigint; TArray: BigInt64Array };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> {\n    TArray: TimesType[T]['TArray'];\n    TValue: TimesType[T]['TValue'];\n}\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n        public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    public get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any>proto).unit = null;\n        (<any>proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    TArray: Int32Array;\n    TValue: number;\n    ArrayType: TypedArrayConstructor<Int32Array>;\n}\n\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n        public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any>proto).unit = null;\n        (<any>proto).timezone = null;\n        (<any>proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    TArray: Int32Array;\n    TValue: Int32Array;\n    ArrayType: TypedArrayConstructor<Int32Array>;\n}\n\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any>proto).unit = null;\n        (<any>proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    TArray: Array<T>;\n    TValue: Vector<T>;\n}\n\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public declare readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any>proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends TypeMap = any> extends DataType<Type.Struct, T> {\n    TArray: Array<StructRowProxy<T>>;\n    TValue: StructRowProxy<T>;\n    dataTypes: T;\n}\n\n/** @ignore */\nexport class Struct<T extends TypeMap = any> extends DataType<Type.Struct, T> {\n    public declare _row: StructRow<T>;\n    public declare readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any>proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array> }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public declare readonly mode: UnionMode;\n    public declare readonly typeIds: Int32Array;\n    public declare readonly children: Field<any>[];\n    public declare readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n        typeIds: number[] | Int32Array,\n        children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)\n            }>`;\n    }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any>proto).mode = null;\n        (<any>proto).typeIds = null;\n        (<any>proto).children = null;\n        (<any>proto).typeIdToChildIndex = null;\n        (<any>proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    TArray: Uint8Array;\n    TValue: Uint8Array;\n    ArrayType: TypedArrayConstructor<Uint8Array>;\n}\n\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any>proto).byteWidth = null;\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    TArray: Array<T['TArray']>;\n    TValue: Vector<T>;\n}\n\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public declare readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any>proto).children = null;\n        (<any>proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map, { [0]: Struct<{ key: TKey; value: TValue }> }> {\n    TArray: Array<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey; value: TValue }>;\n    TValue: MapRow<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map, { [0]: Struct<{ key: TKey; value: TValue }> }> {\n    constructor(child: Field<Struct<{ key: TKey; value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public declare readonly keysSorted: boolean;\n    public declare readonly children: Field<Struct<{ key: TKey; value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public get childType() { return this.children[0].type as Struct<{ key: TKey; value: TValue }>; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any>proto).children = null;\n        (<any>proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    TArray: TKey['TArray'];\n    TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public declare readonly id: number;\n    public declare readonly indices: TKey;\n    public declare readonly dictionary: T;\n    public declare readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : (typeof id === 'number' ? id : id.low);\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any>proto).id = null;\n        (<any>proto).indices = null;\n        (<any>proto).isOrdered = null;\n        (<any>proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    const t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return (type as Decimal).bitWidth / 32;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n\n/** @ignore */\nexport type TypeMap = Record<string | number | symbol, DataType>;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum.js';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type.js';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public getVisitFnByTypeId(typeId: Type, throwIfNotFound = true) {\n        return getVisitFnByTypeId(this, typeId, throwIfNotFound);\n    }\n    public visitNull(_node: any, ..._args: any[]): any { return null; }\n    public visitBool(_node: any, ..._args: any[]): any { return null; }\n    public visitInt(_node: any, ..._args: any[]): any { return null; }\n    public visitFloat(_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8(_node: any, ..._args: any[]): any { return null; }\n    public visitBinary(_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary(_node: any, ..._args: any[]): any { return null; }\n    public visitDate(_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp(_node: any, ..._args: any[]): any { return null; }\n    public visitTime(_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal(_node: any, ..._args: any[]): any { return null; }\n    public visitList(_node: any, ..._args: any[]): any { return null; }\n    public visitStruct(_node: any, ..._args: any[]): any { return null; }\n    public visitUnion(_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary(_node: any, ..._args: any[]): any { return null; }\n    public visitInterval(_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList(_node: any, ..._args: any[]): any { return null; }\n    public visitMap(_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    if (typeof node === 'number') {\n        return getVisitFnByTypeId(visitor, node, throwIfNotFound);\n    }\n    if (typeof node === 'string' && (node in Type)) {\n        return getVisitFnByTypeId(visitor, Type[node as keyof typeof Type], throwIfNotFound);\n    }\n    if (node && (node instanceof DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node as T), throwIfNotFound);\n    }\n    if (node?.type && (node.type instanceof DataType)) {\n        return getVisitFnByTypeId(visitor, inferDType(node.type as T), throwIfNotFound);\n    }\n    return getVisitFnByTypeId(visitor, Type.NONE, throwIfNotFound);\n}\n\n/** @ignore */\nfunction getVisitFnByTypeId(visitor: Visitor, dtype: Type, throwIfNotFound = true) {\n    let fn: any = null;\n    switch (dtype) {\n        case Type.Null: fn = visitor.visitNull; break;\n        case Type.Bool: fn = visitor.visitBool; break;\n        case Type.Int: fn = visitor.visitInt; break;\n        case Type.Int8: fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16: fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32: fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64: fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8: fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16: fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32: fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64: fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float: fn = visitor.visitFloat; break;\n        case Type.Float16: fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32: fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64: fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8: fn = visitor.visitUtf8; break;\n        case Type.Binary: fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary: fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date: fn = visitor.visitDate; break;\n        case Type.DateDay: fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond: fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp: fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond: fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond: fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time: fn = visitor.visitTime; break;\n        case Type.TimeSecond: fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond: fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond: fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond: fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal: fn = visitor.visitDecimal; break;\n        case Type.List: fn = visitor.visitList; break;\n        case Type.Struct: fn = visitor.visitStruct; break;\n        case Type.Union: fn = visitor.visitUnion; break;\n        case Type.DenseUnion: fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion: fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary: fn = visitor.visitDictionary; break;\n        case Type.Interval: fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime: fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth: fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList: fn = visitor.visitFixedSizeList; break;\n        case Type.Map: fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int: {\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            // @ts-ignore\n            return Type.Int;\n        }\n        case Type.Float:\n            switch ((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            // @ts-ignore\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            // @ts-ignore\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            // @ts-ignore\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            // @ts-ignore\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            // @ts-ignore\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            // @ts-ignore\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull(node: any, ...args: any[]): any;\n    visitBool(node: any, ...args: any[]): any;\n    visitInt(node: any, ...args: any[]): any;\n    visitInt8?(node: any, ...args: any[]): any;\n    visitInt16?(node: any, ...args: any[]): any;\n    visitInt32?(node: any, ...args: any[]): any;\n    visitInt64?(node: any, ...args: any[]): any;\n    visitUint8?(node: any, ...args: any[]): any;\n    visitUint16?(node: any, ...args: any[]): any;\n    visitUint32?(node: any, ...args: any[]): any;\n    visitUint64?(node: any, ...args: any[]): any;\n    visitFloat(node: any, ...args: any[]): any;\n    visitFloat16?(node: any, ...args: any[]): any;\n    visitFloat32?(node: any, ...args: any[]): any;\n    visitFloat64?(node: any, ...args: any[]): any;\n    visitUtf8(node: any, ...args: any[]): any;\n    visitBinary(node: any, ...args: any[]): any;\n    visitFixedSizeBinary(node: any, ...args: any[]): any;\n    visitDate(node: any, ...args: any[]): any;\n    visitDateDay?(node: any, ...args: any[]): any;\n    visitDateMillisecond?(node: any, ...args: any[]): any;\n    visitTimestamp(node: any, ...args: any[]): any;\n    visitTimestampSecond?(node: any, ...args: any[]): any;\n    visitTimestampMillisecond?(node: any, ...args: any[]): any;\n    visitTimestampMicrosecond?(node: any, ...args: any[]): any;\n    visitTimestampNanosecond?(node: any, ...args: any[]): any;\n    visitTime(node: any, ...args: any[]): any;\n    visitTimeSecond?(node: any, ...args: any[]): any;\n    visitTimeMillisecond?(node: any, ...args: any[]): any;\n    visitTimeMicrosecond?(node: any, ...args: any[]): any;\n    visitTimeNanosecond?(node: any, ...args: any[]): any;\n    visitDecimal(node: any, ...args: any[]): any;\n    visitList(node: any, ...args: any[]): any;\n    visitStruct(node: any, ...args: any[]): any;\n    visitUnion(node: any, ...args: any[]): any;\n    visitDenseUnion?(node: any, ...args: any[]): any;\n    visitSparseUnion?(node: any, ...args: any[]): any;\n    visitDictionary(node: any, ...args: any[]): any;\n    visitInterval(node: any, ...args: any[]): any;\n    visitIntervalDayTime?(node: any, ...args: any[]): any;\n    visitIntervalYearMonth?(node: any, ...args: any[]): any;\n    visitFixedSizeList(node: any, ...args: any[]): any;\n    visitMap(node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    const expo = (h & 0x7C00) >> 10;\n    const sigf = (h & 0x03FF) / 1024;\n    const sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? Number.NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    const sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7FF00000), sigf = 0x0000;\n\n    if (expo >= 0x40F00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000FFFFF) >> 10;\n        }\n    } else if (expo <= 0x3F000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000FFFFF);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3F000000) >> 10;\n        sigf = ((u32[1] & 0x000FFFFF) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Field } from '../schema.js';\nimport { Vector } from '../vector.js';\nimport { Visitor } from '../visitor.js';\nimport { encodeUtf8 } from '../util/utf8.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport { float64ToUint16 } from '../util/math.js';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.js';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type.js';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends DataType>(node: Data<T>, index: number, value: T['TValue']): void;\n    visitMany<T extends DataType>(nodes: Data<T>[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends DataType>(node: Data<T> | T): (data: Data<T>, index: number, value: Data<T>['TValue']) => void;\n    getVisitFn<T extends Type>(node: T): (data: Data<TypeToDataType<T>>, index: number, value: TypeToDataType<T>['TValue']) => void;\n    visitNull<T extends Null>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitBool<T extends Bool>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt<T extends Int>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt8<T extends Int8>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt16<T extends Int16>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt32<T extends Int32>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt64<T extends Int64>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint8<T extends Uint8>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint16<T extends Uint16>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint32<T extends Uint32>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint64<T extends Uint64>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat<T extends Float>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat16<T extends Float16>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat32<T extends Float32>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat64<T extends Float64>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUtf8<T extends Utf8>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitBinary<T extends Binary>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDate<T extends Date_>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDateDay<T extends DateDay>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond<T extends DateMillisecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestamp<T extends Timestamp>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond<T extends TimestampSecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond<T extends TimestampMillisecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond<T extends TimestampMicrosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond<T extends TimestampNanosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTime<T extends Time>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond<T extends TimeSecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond<T extends TimeMillisecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond<T extends TimeMicrosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond<T extends TimeNanosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDecimal<T extends Decimal>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitList<T extends List>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitStruct<T extends Struct>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUnion<T extends Union>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion<T extends DenseUnion>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion<T extends SparseUnion>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDictionary<T extends Dictionary>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInterval<T extends Interval>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime<T extends IntervalDayTime>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth<T extends IntervalYearMonth>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList<T extends FixedSizeList>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitMap<T extends Map_>(data: Data<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor { }\n\n/** @ignore */\nfunction wrapSet<T extends DataType>(fn: (data: Data<T>, _1: any, _2: any) => void) {\n    return (data: Data<T>, _1: any, _2: any) => {\n        if (data.setValid(_1, _2 != null)) {\n            return fn(data, _1, _2);\n        }\n    };\n}\n\n/** @ignore */\nexport const setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = Math.trunc(epochMs / 86400000); };\n/** @ignore */\nexport const setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = Math.trunc(epochMs % 4294967296);\n    data[index + 1] = Math.trunc(epochMs / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = Math.trunc((epochMs * 1000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000) / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = Math.trunc((epochMs * 1000000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000000) / 4294967296);\n};\n\n/** @ignore */\nexport const setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    if (index + 1 < valueOffsets.length) {\n        const { [index]: x, [index + 1]: y } = valueOffsets;\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: Data<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n/** @ignore */\nexport const setInt = <T extends Int>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setFloat = <T extends Float32 | Float64>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setFloat16 = <T extends Float16>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = float64ToUint16(value); };\n/* istanbul ignore next */\n/** @ignore */\nexport const setAnyFloat = <T extends Float>(data: Data<T>, index: number, value: T['TValue']): void => {\n    switch (data.type.precision) {\n        case Precision.HALF:\n            return setFloat16(data as Data<Float16>, index, value);\n        case Precision.SINGLE:\n        case Precision.DOUBLE:\n            return setFloat(data as Data<Float32 | Float64>, index, value);\n    }\n};\n/** @ignore */\nexport const setDateDay = <T extends DateDay>({ values }: Data<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nexport const setDateMillisecond = <T extends DateMillisecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nexport const setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: Data<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: Data<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: Data<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\nexport const setDate = <T extends Date_>(data: Data<T>, index: number, value: T['TValue']): void => {\n    data.type.unit === DateUnit.DAY\n        ? setDateDay(data as Data<DateDay>, index, value)\n        : setDateMillisecond(data as Data<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nexport const setTimestampSecond = <T extends TimestampSecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nexport const setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampNanosecond = <T extends TimestampNanosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nexport const setTimestamp = <T extends Timestamp>(data: Data<T>, index: number, value: T['TValue']): void => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(data as Data<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(data as Data<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(data as Data<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(data as Data<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nexport const setTimeSecond = <T extends TimeSecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setTimeMillisecond = <T extends TimeMillisecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setTimeMicrosecond = <T extends TimeMicrosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setTimeNanosecond = <T extends TimeNanosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/* istanbul ignore next */\n/** @ignore */\nexport const setTime = <T extends Time>(data: Data<T>, index: number, value: T['TValue']): void => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(data as Data<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(data as Data<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(data as Data<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(data as Data<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nexport const setDecimal = <T extends Decimal>({ values, stride }: Data<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setList = <T extends List>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const values = data.children[0];\n    const valueOffsets = data.valueOffsets;\n    const set = instance.getVisitFn(values);\n    if (Array.isArray(value)) {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value[++idx]);\n        }\n    } else {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value.get(++idx));\n        }\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(data: Data<T>, index: number, value: T['TValue']) => {\n    const values = data.children[0];\n    const { valueOffsets } = data;\n    const set = instance.getVisitFn(values);\n    let { [index]: idx, [index + 1]: end } = valueOffsets;\n    const entries = value instanceof Map ? value.entries() : Object.entries(value);\n    for (const val of entries) {\n        set(values, idx, val);\n        if (++idx >= end) break;\n    }\n};\n\n/** @ignore */ type SetFunc<T extends DataType> = (data: Data<T>, i: number, v: T['TValue']) => void;\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, _: Field, i: number) => c && set(c, o, v[i]);\n\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, _: Field, i: number) => c && set(c, o, v.get(i));\n\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, f: Field, _: number) => c && set(c, o, v.get(f.name));\n\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, f: Field, _: number) => c && set(c, o, v[f.name]);\n\n/** @ignore */\nconst setStruct = <T extends Struct>(data: Data<T>, index: number, value: T['TValue']) => {\n\n    const childSetters = data.type.children.map((f) => instance.getVisitFn(f.type));\n    const set = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n\n    // eslint-disable-next-line unicorn/no-array-for-each\n    data.type.children.forEach((f: Field, i: number) => set(childSetters[i], data.children[i], f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends Data<Union> | Data<DenseUnion> | Data<SparseUnion>\n>(data: V, index: number, value: V['TValue']) => {\n    data.type.mode === UnionMode.Dense ?\n        setDenseUnion(data as Data<DenseUnion>, index, value) :\n        setSparseUnion(data as Data<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, data.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(data: Data<T>, index: number, value: T['TValue']): void => {\n    data.dictionary?.set(data.values[index], value);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nexport const setIntervalValue = <T extends Interval>(data: Data<T>, index: number, value: T['TValue']): void => {\n    (data.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(data as Data<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(data as Data<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nexport const setIntervalDayTime = <T extends IntervalDayTime>({ values }: Data<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nexport const setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const { stride } = data;\n    const child = data.children[0];\n    const set = instance.getVisitFn(child);\n    if (Array.isArray(value)) {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value[idx]);\n        }\n    } else {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value.get(idx));\n        }\n    }\n};\n\nSetVisitor.prototype.visitBool = wrapSet(setBool);\nSetVisitor.prototype.visitInt = wrapSet(setInt);\nSetVisitor.prototype.visitInt8 = wrapSet(setInt);\nSetVisitor.prototype.visitInt16 = wrapSet(setInt);\nSetVisitor.prototype.visitInt32 = wrapSet(setInt);\nSetVisitor.prototype.visitInt64 = wrapSet(setInt);\nSetVisitor.prototype.visitUint8 = wrapSet(setInt);\nSetVisitor.prototype.visitUint16 = wrapSet(setInt);\nSetVisitor.prototype.visitUint32 = wrapSet(setInt);\nSetVisitor.prototype.visitUint64 = wrapSet(setInt);\nSetVisitor.prototype.visitFloat = wrapSet(setAnyFloat);\nSetVisitor.prototype.visitFloat16 = wrapSet(setFloat16);\nSetVisitor.prototype.visitFloat32 = wrapSet(setFloat);\nSetVisitor.prototype.visitFloat64 = wrapSet(setFloat);\nSetVisitor.prototype.visitUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitFixedSizeBinary = wrapSet(setFixedSizeBinary);\nSetVisitor.prototype.visitDate = wrapSet(setDate);\nSetVisitor.prototype.visitDateDay = wrapSet(setDateDay);\nSetVisitor.prototype.visitDateMillisecond = wrapSet(setDateMillisecond);\nSetVisitor.prototype.visitTimestamp = wrapSet(setTimestamp);\nSetVisitor.prototype.visitTimestampSecond = wrapSet(setTimestampSecond);\nSetVisitor.prototype.visitTimestampMillisecond = wrapSet(setTimestampMillisecond);\nSetVisitor.prototype.visitTimestampMicrosecond = wrapSet(setTimestampMicrosecond);\nSetVisitor.prototype.visitTimestampNanosecond = wrapSet(setTimestampNanosecond);\nSetVisitor.prototype.visitTime = wrapSet(setTime);\nSetVisitor.prototype.visitTimeSecond = wrapSet(setTimeSecond);\nSetVisitor.prototype.visitTimeMillisecond = wrapSet(setTimeMillisecond);\nSetVisitor.prototype.visitTimeMicrosecond = wrapSet(setTimeMicrosecond);\nSetVisitor.prototype.visitTimeNanosecond = wrapSet(setTimeNanosecond);\nSetVisitor.prototype.visitDecimal = wrapSet(setDecimal);\nSetVisitor.prototype.visitList = wrapSet(setList);\nSetVisitor.prototype.visitStruct = wrapSet(setStruct);\nSetVisitor.prototype.visitUnion = wrapSet(setUnion);\nSetVisitor.prototype.visitDenseUnion = wrapSet(setDenseUnion);\nSetVisitor.prototype.visitSparseUnion = wrapSet(setSparseUnion);\nSetVisitor.prototype.visitDictionary = wrapSet(setDictionary);\nSetVisitor.prototype.visitInterval = wrapSet(setIntervalValue);\nSetVisitor.prototype.visitIntervalDayTime = wrapSet(setIntervalDayTime);\nSetVisitor.prototype.visitIntervalYearMonth = wrapSet(setIntervalYearMonth);\nSetVisitor.prototype.visitFixedSizeList = wrapSet(setFixedSizeList);\nSetVisitor.prototype.visitMap = wrapSet(setMap);\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Field } from '../schema.js';\nimport { Struct, TypeMap } from '../type.js';\nimport { valueToString } from '../util/pretty.js';\nimport { instance as getVisitor } from '../visitor/get.js';\nimport { instance as setVisitor } from '../visitor/set.js';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n\nexport type StructRowProxy<T extends TypeMap = any> = StructRow<T> & {\n    [P in keyof T]: T[P]['TValue'];\n} & {\n    [key: symbol]: any;\n};\n\nexport class StructRow<T extends TypeMap = any> {\n\n    declare private [kRowIndex]: number;\n    declare private [kParent]: Data<Struct<T>>;\n\n    constructor(parent: Data<Struct<T>>, rowIndex: number) {\n        this[kParent] = parent;\n        this[kRowIndex] = rowIndex;\n        return new Proxy(this, new StructRowProxyHandler());\n    }\n\n    public toArray() { return Object.values(this.toJSON()); }\n\n    public toJSON() {\n        const i = this[kRowIndex];\n        const parent = this[kParent];\n        const keys = parent.type.children;\n        const json = {} as { [P in string & keyof T]: T[P]['TValue'] };\n        for (let j = -1, n = keys.length; ++j < n;) {\n            json[keys[j].name as string & keyof T] = getVisitor.visit(parent.children[j], i);\n        }\n        return json;\n    }\n\n    public toString() {\n        return `{${[...this].map(([key, val]) =>\n            `${valueToString(key)}: ${valueToString(val)}`\n        ).join(', ')\n            }}`;\n    }\n\n    public [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n\n    [Symbol.iterator](): IterableIterator<[\n        keyof T, { [P in keyof T]: T[P]['TValue'] | null }[keyof T]\n    ]> {\n        return new StructRowIterator(this[kParent], this[kRowIndex]);\n    }\n}\n\nclass StructRowIterator<T extends TypeMap = any>\n    implements IterableIterator<[\n        keyof T, { [P in keyof T]: T[P]['TValue'] | null }[keyof T]\n    ]> {\n\n    declare private rowIndex: number;\n    declare private childIndex: number;\n    declare private numChildren: number;\n    declare private children: Data<any>[];\n    declare private childFields: Field<T[keyof T]>[];\n\n    constructor(data: Data<Struct<T>>, rowIndex: number) {\n        this.childIndex = 0;\n        this.children = data.children;\n        this.rowIndex = rowIndex;\n        this.childFields = data.type.children;\n        this.numChildren = this.childFields.length;\n    }\n\n    [Symbol.iterator]() { return this; }\n\n    next() {\n        const i = this.childIndex;\n        if (i < this.numChildren) {\n            this.childIndex = i + 1;\n            return {\n                done: false,\n                value: [\n                    this.childFields[i].name,\n                    getVisitor.visit(this.children[i], this.rowIndex)\n                ]\n            } as IteratorYieldResult<[any, any]>;\n        }\n        return { done: true, value: null } as IteratorReturnResult<null>;\n    }\n}\n\nObject.defineProperties(StructRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n    [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n});\n\nclass StructRowProxyHandler<T extends TypeMap = any> implements ProxyHandler<StructRow<T>> {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row: StructRow<T>) {\n        return row[kParent].type.children.map((f) => f.name);\n    }\n    has(row: StructRow<T>, key: string) {\n        return row[kParent].type.children.findIndex((f) => f.name === key) !== -1;\n    }\n    getOwnPropertyDescriptor(row: StructRow<T>, key: string) {\n        if (row[kParent].type.children.findIndex((f) => f.name === key) !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row: StructRow<T>, key: string) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return (row as any)[key];\n        }\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            const val = getVisitor.visit(row[kParent].children[idx], row[kRowIndex]);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row: StructRow<T>, key: string, val: any) {\n        const idx = row[kParent].type.children.findIndex((f) => f.name === key);\n        if (idx !== -1) {\n            setVisitor.visit(row[kParent].children[idx], row[kRowIndex], val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        } else if (Reflect.has(row, key) || typeof key === 'symbol') {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { BN } from '../util/bn.js';\nimport { Vector } from '../vector.js';\nimport { Visitor } from '../visitor.js';\nimport { MapRow } from '../row/map.js';\nimport { StructRow, StructRowProxy } from '../row/struct.js';\nimport { decodeUtf8 } from '../util/utf8.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport { uint16ToFloat64 } from '../util/math.js';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.js';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type.js';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends DataType>(node: Data<T>, index: number): T['TValue'] | null;\n    visitMany<T extends DataType>(nodes: Data<T>[], indices: number[]): (T['TValue'] | null)[];\n    getVisitFn<T extends DataType>(node: Vector<T> | Data<T> | T): (data: Data<T>, index: number) => T['TValue'] | null;\n    getVisitFn<T extends Type>(node: T): (data: Data<TypeToDataType<T>>, index: number) => TypeToDataType<T>['TValue'];\n    visitNull<T extends Null>(data: Data<T>, index: number): T['TValue'] | null;\n    visitBool<T extends Bool>(data: Data<T>, index: number): T['TValue'] | null;\n    visitInt<T extends Int>(data: Data<T>, index: number): T['TValue'] | null;\n    visitInt8<T extends Int8>(data: Data<T>, index: number): T['TValue'] | null;\n    visitInt16<T extends Int16>(data: Data<T>, index: number): T['TValue'] | null;\n    visitInt32<T extends Int32>(data: Data<T>, index: number): T['TValue'] | null;\n    visitInt64<T extends Int64>(data: Data<T>, index: number): T['TValue'] | null;\n    visitUint8<T extends Uint8>(data: Data<T>, index: number): T['TValue'] | null;\n    visitUint16<T extends Uint16>(data: Data<T>, index: number): T['TValue'] | null;\n    visitUint32<T extends Uint32>(data: Data<T>, index: number): T['TValue'] | null;\n    visitUint64<T extends Uint64>(data: Data<T>, index: number): T['TValue'] | null;\n    visitFloat<T extends Float>(data: Data<T>, index: number): T['TValue'] | null;\n    visitFloat16<T extends Float16>(data: Data<T>, index: number): T['TValue'] | null;\n    visitFloat32<T extends Float32>(data: Data<T>, index: number): T['TValue'] | null;\n    visitFloat64<T extends Float64>(data: Data<T>, index: number): T['TValue'] | null;\n    visitUtf8<T extends Utf8>(data: Data<T>, index: number): T['TValue'] | null;\n    visitBinary<T extends Binary>(data: Data<T>, index: number): T['TValue'] | null;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(data: Data<T>, index: number): T['TValue'] | null;\n    visitDate<T extends Date_>(data: Data<T>, index: number): T['TValue'] | null;\n    visitDateDay<T extends DateDay>(data: Data<T>, index: number): T['TValue'] | null;\n    visitDateMillisecond<T extends DateMillisecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimestamp<T extends Timestamp>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimestampSecond<T extends TimestampSecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimestampMillisecond<T extends TimestampMillisecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimestampMicrosecond<T extends TimestampMicrosecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimestampNanosecond<T extends TimestampNanosecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTime<T extends Time>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimeSecond<T extends TimeSecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimeMillisecond<T extends TimeMillisecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimeMicrosecond<T extends TimeMicrosecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitTimeNanosecond<T extends TimeNanosecond>(data: Data<T>, index: number): T['TValue'] | null;\n    visitDecimal<T extends Decimal>(data: Data<T>, index: number): T['TValue'] | null;\n    visitList<T extends List>(data: Data<T>, index: number): T['TValue'] | null;\n    visitStruct<T extends Struct>(data: Data<T>, index: number): T['TValue'] | null;\n    visitUnion<T extends Union>(data: Data<T>, index: number): T['TValue'] | null;\n    visitDenseUnion<T extends DenseUnion>(data: Data<T>, index: number): T['TValue'] | null;\n    visitSparseUnion<T extends SparseUnion>(data: Data<T>, index: number): T['TValue'] | null;\n    visitDictionary<T extends Dictionary>(data: Data<T>, index: number): T['TValue'] | null;\n    visitInterval<T extends Interval>(data: Data<T>, index: number): T['TValue'] | null;\n    visitIntervalDayTime<T extends IntervalDayTime>(data: Data<T>, index: number): T['TValue'] | null;\n    visitIntervalYearMonth<T extends IntervalYearMonth>(data: Data<T>, index: number): T['TValue'] | null;\n    visitFixedSizeList<T extends FixedSizeList>(data: Data<T>, index: number): T['TValue'] | null;\n    visitMap<T extends Map_>(data: Data<T>, index: number): T['TValue'] | null;\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor { }\n\n/** @ignore */\nfunction wrapGet<T extends DataType>(fn: (data: Data<T>, _1: any) => any) {\n    return (data: Data<T>, _1: any) => data.getValid(_1) ? fn(data, _1) : null;\n}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_data: Data<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    if (index + 1 >= valueOffsets.length) {\n        return null as any;\n    }\n    const x = valueOffsets[index];\n    const y = valueOffsets[index + 1];\n    return values.subarray(x, y);\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: Data<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay = <T extends DateDay>({ values }: Data<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values }: Data<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = <T extends Numeric1X>({ stride, values }: Data<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16 = <T extends Float16>({ stride, values }: Data<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = <T extends Numeric2X>({ values }: Data<T>, index: number): T['TValue'] => values[index];\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: Data<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: Data<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: Data<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>({ values }: Data<T>, index: number): T['TValue'] => values[index];\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float>({ type, values }: Data<T>, index: number): T['TValue'] => (\n    type.precision !== Precision.HALF ? values[index] : uint16ToFloat64(values[index])\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_>(data: Data<T>, index: number): T['TValue'] => (\n    data.type.unit === DateUnit.DAY\n        ? getDateDay(data as Data<DateDay>, index)\n        : getDateMillisecond(data as Data<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond = <T extends TimestampSecond>({ values }: Data<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: Data<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: Data<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = <T extends TimestampNanosecond>({ values }: Data<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = <T extends Timestamp>(data: Data<T>, index: number): T['TValue'] => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(data as Data<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(data as Data<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(data as Data<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(data as Data<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond = <T extends TimeSecond>({ values }: Data<T>, index: number): T['TValue'] => values[index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values }: Data<T>, index: number): T['TValue'] => values[index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values }: Data<T>, index: number): T['TValue'] => values[index];\n/** @ignore */\nconst getTimeNanosecond = <T extends TimeNanosecond>({ values }: Data<T>, index: number): T['TValue'] => values[index];\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = <T extends Time>(data: Data<T>, index: number): T['TValue'] => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(data as Data<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(data as Data<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(data as Data<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(data as Data<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values, stride }: Data<T>, index: number): T['TValue'] => BN.decimal(values.subarray(stride * index, stride * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(data: Data<T>, index: number): T['TValue'] => {\n    const { valueOffsets, stride, children } = data;\n    const { [index * stride]: begin, [index * stride + 1]: end } = valueOffsets;\n    const child: Data<T['valueType']> = children[0];\n    const slice = child.slice(begin, end - begin);\n    return new Vector([slice]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(data: Data<T>, index: number): T['TValue'] => {\n    const { valueOffsets, children } = data;\n    const { [index]: begin, [index + 1]: end } = valueOffsets;\n    const child = children[0] as Data<T['childType']>;\n    return new MapRow(child.slice(begin, end - begin));\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(data: Data<T>, index: number): T['TValue'] => {\n    return new StructRow(data, index) as StructRowProxy<T['TValue']>;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    D extends Data<Union> | Data<DenseUnion> | Data<SparseUnion>\n>(data: D, index: number): D['TValue'] => {\n    return data.type.mode === UnionMode.Dense ?\n        getDenseUnion(data as Data<DenseUnion>, index) :\n        getSparseUnion(data as Data<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(data: Data<T>, index: number): T['TValue'] => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return instance.visit(child, data.valueOffsets[index]);\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(data: Data<T>, index: number): T['TValue'] => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    return instance.visit(child, index);\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(data: Data<T>, index: number): T['TValue'] => {\n    return data.dictionary?.get(data.values[index]);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(data: Data<T>, index: number): T['TValue'] =>\n    (data.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(data as Data<IntervalDayTime>, index)\n        : getIntervalYearMonth(data as Data<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: Data<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: Data<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = Math.trunc(interval / 12); /* years */\n    int32s[1] = Math.trunc(interval % 12); /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(data: Data<T>, index: number): T['TValue'] => {\n    const { stride, children } = data;\n    const child: Data<T['valueType']> = children[0];\n    const slice = child.slice(index * stride, stride);\n    return new Vector([slice]);\n};\n\nGetVisitor.prototype.visitNull = wrapGet(getNull);\nGetVisitor.prototype.visitBool = wrapGet(getBool);\nGetVisitor.prototype.visitInt = wrapGet(getInt);\nGetVisitor.prototype.visitInt8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitInt64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitUint8 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint16 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUint64 = wrapGet(getBigInts);\nGetVisitor.prototype.visitFloat = wrapGet(getFloat);\nGetVisitor.prototype.visitFloat16 = wrapGet(getFloat16);\nGetVisitor.prototype.visitFloat32 = wrapGet(getNumeric);\nGetVisitor.prototype.visitFloat64 = wrapGet(getNumeric);\nGetVisitor.prototype.visitUtf8 = wrapGet(getUtf8);\nGetVisitor.prototype.visitBinary = wrapGet(getBinary);\nGetVisitor.prototype.visitFixedSizeBinary = wrapGet(getFixedSizeBinary);\nGetVisitor.prototype.visitDate = wrapGet(getDate);\nGetVisitor.prototype.visitDateDay = wrapGet(getDateDay);\nGetVisitor.prototype.visitDateMillisecond = wrapGet(getDateMillisecond);\nGetVisitor.prototype.visitTimestamp = wrapGet(getTimestamp);\nGetVisitor.prototype.visitTimestampSecond = wrapGet(getTimestampSecond);\nGetVisitor.prototype.visitTimestampMillisecond = wrapGet(getTimestampMillisecond);\nGetVisitor.prototype.visitTimestampMicrosecond = wrapGet(getTimestampMicrosecond);\nGetVisitor.prototype.visitTimestampNanosecond = wrapGet(getTimestampNanosecond);\nGetVisitor.prototype.visitTime = wrapGet(getTime);\nGetVisitor.prototype.visitTimeSecond = wrapGet(getTimeSecond);\nGetVisitor.prototype.visitTimeMillisecond = wrapGet(getTimeMillisecond);\nGetVisitor.prototype.visitTimeMicrosecond = wrapGet(getTimeMicrosecond);\nGetVisitor.prototype.visitTimeNanosecond = wrapGet(getTimeNanosecond);\nGetVisitor.prototype.visitDecimal = wrapGet(getDecimal);\nGetVisitor.prototype.visitList = wrapGet(getList);\nGetVisitor.prototype.visitStruct = wrapGet(getStruct);\nGetVisitor.prototype.visitUnion = wrapGet(getUnion);\nGetVisitor.prototype.visitDenseUnion = wrapGet(getDenseUnion);\nGetVisitor.prototype.visitSparseUnion = wrapGet(getSparseUnion);\nGetVisitor.prototype.visitDictionary = wrapGet(getDictionary);\nGetVisitor.prototype.visitInterval = wrapGet(getInterval);\nGetVisitor.prototype.visitIntervalDayTime = wrapGet(getIntervalDayTime);\nGetVisitor.prototype.visitIntervalYearMonth = wrapGet(getIntervalYearMonth);\nGetVisitor.prototype.visitFixedSizeList = wrapGet(getFixedSizeList);\nGetVisitor.prototype.visitMap = wrapGet(getMap);\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Vector } from '../vector.js';\nimport { DataType, Struct } from '../type.js';\nimport { valueToString } from '../util/pretty.js';\nimport { instance as getVisitor } from '../visitor/get.js';\nimport { instance as setVisitor } from '../visitor/set.js';\n\n/** @ignore */ export const kKeys = Symbol.for('keys');\n/** @ignore */ export const kVals = Symbol.for('vals');\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> {\n\n    [key: string]: V['TValue'];\n\n    declare private [kKeys]: Vector<K>;\n    declare private [kVals]: Data<V>;\n\n    constructor(slice: Data<Struct<{ key: K; value: V }>>) {\n        this[kKeys] = new Vector([slice.children[0]]).memoize() as Vector<K>;\n        this[kVals] = slice.children[1] as Data<V>;\n        return new Proxy(this, new MapRowProxyHandler<K, V>());\n    }\n\n    [Symbol.iterator]() {\n        return new MapRowIterator(this[kKeys], this[kVals]);\n    }\n\n    public get size() { return this[kKeys].length; }\n\n    public toArray() { return Object.values(this.toJSON()); }\n\n    public toJSON() {\n        const keys = this[kKeys];\n        const vals = this[kVals];\n        const json = {} as { [P in K['TValue']]: V['TValue'] };\n        for (let i = -1, n = keys.length; ++i < n;) {\n            json[keys.get(i)] = getVisitor.visit(vals, i);\n        }\n        return json;\n    }\n\n    public toString() {\n        return `{${[...this].map(([key, val]) =>\n            `${valueToString(key)}: ${valueToString(val)}`\n        ).join(', ')\n            }}`;\n    }\n\n    public [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.toString();\n    }\n}\n\nclass MapRowIterator<K extends DataType = any, V extends DataType = any>\n    implements IterableIterator<[K['TValue'], V['TValue'] | null]> {\n\n    private keys: Vector<K>;\n    private vals: Data<V>;\n    private numKeys: number;\n    private keyIndex: number;\n\n    constructor(keys: Vector<K>, vals: Data<V>) {\n        this.keys = keys;\n        this.vals = vals;\n        this.keyIndex = 0;\n        this.numKeys = keys.length;\n    }\n\n    [Symbol.iterator]() { return this; }\n\n    next() {\n        const i = this.keyIndex;\n        if (i === this.numKeys) {\n            return { done: true, value: null } as IteratorReturnResult<null>;\n        }\n        this.keyIndex++;\n        return {\n            done: false,\n            value: [\n                this.keys.get(i),\n                getVisitor.visit(this.vals, i),\n            ] as [K['TValue'], V['TValue'] | null]\n        };\n    }\n}\n\n/** @ignore */\nclass MapRowProxyHandler<K extends DataType = any, V extends DataType = any> implements ProxyHandler<MapRow<K, V>> {\n    isExtensible() { return false; }\n    deleteProperty() { return false; }\n    preventExtensions() { return true; }\n    ownKeys(row: MapRow<K, V>) {\n        return row[kKeys].toArray().map(String);\n    }\n    has(row: MapRow<K, V>, key: string | symbol) {\n        return row[kKeys].includes(key);\n    }\n    getOwnPropertyDescriptor(row: MapRow<K, V>, key: string | symbol) {\n        const idx = row[kKeys].indexOf(key);\n        if (idx !== -1) {\n            return { writable: true, enumerable: true, configurable: true };\n        }\n        return;\n    }\n    get(row: MapRow<K, V>, key: string | symbol) {\n        // Look up key in row first\n        if (Reflect.has(row, key)) {\n            return (row as any)[key];\n        }\n        const idx = row[kKeys].indexOf(key);\n        if (idx !== -1) {\n            const val = getVisitor.visit(Reflect.get(row, kVals), idx);\n            // Cache key/val lookups\n            Reflect.set(row, key, val);\n            return val;\n        }\n    }\n    set(row: MapRow<K, V>, key: string | symbol, val: V) {\n        const idx = row[kKeys].indexOf(key);\n        if (idx !== -1) {\n            setVisitor.visit(Reflect.get(row, kVals), idx, val);\n            // Cache key/val lookups\n            return Reflect.set(row, key, val);\n        } else if (Reflect.has(row, key)) {\n            return Reflect.set(row, key, val);\n        }\n        return false;\n    }\n}\n\nObject.defineProperties(MapRow.prototype, {\n    [Symbol.toStringTag]: { enumerable: false, configurable: false, value: 'Row' },\n    [kKeys]: { writable: true, enumerable: false, configurable: false, value: null },\n    [kVals]: { writable: true, enumerable: false, configurable: false, value: null },\n});\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector.js';\nimport { MapRow } from '../row/map.js';\nimport { StructRow } from '../row/struct.js';\nimport { compareArrayLike } from '../util/buffer.js';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    const { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    const typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return (value: any) => value === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return createMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    return createObjectComparator(search, true);\n    // Compare non-empty Objects\n    // return createObjectComparator(search, search instanceof Proxy);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    for (const v of lhs.values()) comparators[++i] = createElementComparator(v);\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any, allowEmpty = false) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (!allowEmpty && keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n                return compareObject(comparators, rhs, rhs.keys());\n            case MapRow:\n            case StructRow:\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    const n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n        ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { DataType } from '../type.js';\n\n/** @ignore */\nexport class ChunkedIterator<T extends DataType> implements IterableIterator<T['TValue'] | null> {\n    private chunkIndex = 0;\n    private chunkIterator: IterableIterator<T['TValue'] | null>;\n\n    constructor(\n        private numChunks: number = 0,\n        private getChunkIterator: (chunkIndex: number) => IterableIterator<T['TValue'] | null>\n    ) {\n        this.chunkIterator = this.getChunkIterator(0);\n    }\n\n    next(): IteratorResult<T['TValue'] | null> {\n        while (this.chunkIndex < this.numChunks) {\n            const next = this.chunkIterator.next();\n\n            if (!next.done) {\n                return next;\n            }\n\n            if (++this.chunkIndex < this.numChunks) {\n                this.chunkIterator = this.getChunkIterator(this.chunkIndex);\n            }\n        }\n\n        return { done: true, value: null };\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n\n/** @ignore */\nexport function computeChunkNullCounts<T extends DataType>(chunks: ReadonlyArray<Data<T>>) {\n    return chunks.reduce((nullCount, chunk) => nullCount + chunk.nullCount, 0);\n}\n\n/** @ignore */\nexport function computeChunkOffsets<T extends DataType>(chunks: ReadonlyArray<Data<T>>) {\n    return chunks.reduce((offsets, chunk, index) => {\n        offsets[index + 1] = offsets[index] + chunk.length;\n        return offsets;\n    }, new Uint32Array(chunks.length + 1));\n}\n\n/** @ignore */\nexport function sliceChunks<T extends DataType>(chunks: ReadonlyArray<Data<T>>, offsets: Uint32Array | Array<number>, begin: number, end: number) {\n    const slices: Data<T>[] = [];\n    for (let i = -1, n = chunks.length; ++i < n;) {\n        const chunk = chunks[i];\n        const offset = offsets[i];\n        const { length } = chunk;\n        // Stop if the child is to the right of the slice boundary\n        if (offset >= end) { break; }\n        // Exclude children to the left of of the slice boundary\n        if (begin >= offset + length) { continue; }\n        // Include entire child if between both left and right boundaries\n        if (offset >= begin && (offset + length) <= end) {\n            slices.push(chunk);\n            continue;\n        }\n        // Include the child slice that overlaps one of the slice boundaries\n        const from = Math.max(0, begin - offset);\n        const to = Math.min(end - offset, length);\n        slices.push(chunk.slice(from, to - from));\n    }\n    if (slices.length === 0) {\n        slices.push(chunks[0].slice(0, 0));\n    }\n    return slices;\n}\n\n/** @ignore */\nexport function binarySearch<\n    T extends DataType,\n    F extends (chunks: ReadonlyArray<Data<T>>, _1: number, _2: number) => any\n>(chunks: ReadonlyArray<Data<T>>, offsets: Uint32Array | number[], idx: number, fn: F) {\n    let lhs = 0, mid = 0, rhs = offsets.length - 1;\n    do {\n        if (lhs >= rhs - 1) {\n            return (idx < offsets[rhs]) ? fn(chunks, lhs, idx - offsets[lhs]) : null;\n        }\n        mid = lhs + (Math.trunc((rhs - lhs) * .5));\n        idx < offsets[mid] ? (rhs = mid) : (lhs = mid);\n    } while (lhs < rhs);\n}\n\n/** @ignore */\nexport function isChunkedValid<T extends DataType>(data: Data<T>, index: number): boolean {\n    return data.getValid(index);\n}\n\n/** @ignore */\nexport function wrapChunkedCall1<T extends DataType>(fn: (c: Data<T>, _1: number) => any) {\n    function chunkedFn(chunks: ReadonlyArray<Data<T>>, i: number, j: number) { return fn(chunks[i], j); }\n    return function (this: any, index: number) {\n        const data = this.data as ReadonlyArray<Data<T>>;\n        return binarySearch(data, this._offsets, index, chunkedFn);\n    };\n}\n\n/** @ignore */\nexport function wrapChunkedCall2<T extends DataType>(fn: (c: Data<T>, _1: number, _2: any) => any) {\n    let _2: any;\n    function chunkedFn(chunks: ReadonlyArray<Data<T>>, i: number, j: number) { return fn(chunks[i], j, _2); }\n    return function (this: any, index: number, value: any) {\n        const data = this.data as ReadonlyArray<Data<T>>;\n        _2 = value;\n        const result = binarySearch(data, this._offsets, index, chunkedFn);\n        _2 = undefined;\n        return result;\n    };\n}\n\n/** @ignore */\nexport function wrapChunkedIndexOf<T extends DataType>(indexOf: (c: Data<T>, e: T['TValue'], o?: number) => any) {\n    let _1: any;\n    function chunkedIndexOf(data: ReadonlyArray<Data<T>>, chunkIndex: number, fromIndex: number) {\n        let begin = fromIndex, index = 0, total = 0;\n        for (let i = chunkIndex - 1, n = data.length; ++i < n;) {\n            const chunk = data[i];\n            if (~(index = indexOf(chunk, _1, begin))) {\n                return total + index;\n            }\n            begin = 0;\n            total += chunk.length;\n        }\n        return -1;\n    }\n    return function (this: any, element: T['TValue'], offset?: number) {\n        _1 = element;\n        const data = this.data as ReadonlyArray<Data<T>>;\n        const result = typeof offset !== 'number'\n            ? chunkedIndexOf(data, 0, 0)\n            : binarySearch(data, this._offsets, offset, chunkedIndexOf);\n        _1 = undefined;\n        return result;\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(new BitIterator(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    const xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    const b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport class BitIterator<T> implements IterableIterator<T> {\n    bit: number;\n    byte: number;\n    byteIndex: number;\n    index: number;\n\n    constructor(\n        private bytes: Uint8Array,\n        begin: number,\n        private length: number,\n        private context: any,\n        private get: (context: any, index: number, byte: number, bit: number) => T\n    ) {\n        this.bit = begin % 8;\n        this.byteIndex = begin >> 3;\n        this.byte = bytes[this.byteIndex++];\n        this.index = 0;\n    }\n\n    next(): IteratorResult<T> {\n        if (this.index < this.length) {\n            if (this.bit === 8) {\n                this.bit = 0;\n                this.byte = this.bytes[this.byteIndex++];\n            }\n            return {\n                value: this.get(this.context, this.index++, this.byte, this.bit++)\n            };\n        }\n        return { done: true, value: null };\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of new BitIterator(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = Math.trunc(byteOffset!);\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = Math.trunc(uint32);\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Type } from '../enum.js';\nimport { Visitor } from '../visitor.js';\nimport { instance as getVisitor } from './get.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport { getBool, BitIterator } from '../util/bit.js';\nimport { createElementComparator } from '../util/vector.js';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type.js';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends Data>(node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany<T extends Data>(nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends DataType>(node: Data<T> | T): (data: Data<T>, value: T['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends Type>(node: T): (data: Data<TypeToDataType<T>>, value: TypeToDataType<T>['TValue'] | null, index?: number) => number;\n    visitNull<T extends Null>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool<T extends Bool>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt<T extends Int>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8<T extends Int8>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16<T extends Int16>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32<T extends Int32>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64<T extends Int64>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8<T extends Uint8>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16<T extends Uint16>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32<T extends Uint32>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64<T extends Uint64>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat<T extends Float>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16<T extends Float16>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32<T extends Float32>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64<T extends Float64>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8<T extends Utf8>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary<T extends Binary>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate<T extends Date_>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay<T extends DateDay>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond<T extends DateMillisecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp<T extends Timestamp>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond<T extends TimestampSecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond<T extends TimestampMillisecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond<T extends TimestampMicrosecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond<T extends TimestampNanosecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime<T extends Time>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond<T extends TimeSecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond<T extends TimeMillisecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond<T extends TimeMicrosecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond<T extends TimeNanosecond>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal<T extends Decimal>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitList<T extends List>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct<T extends Struct>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion<T extends Union>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion<T extends DenseUnion>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion<T extends SparseUnion>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary<T extends Dictionary>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval<T extends Interval>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime<T extends IntervalDayTime>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth<T extends IntervalYearMonth>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList<T extends FixedSizeList>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap<T extends Map_>(data: Data<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor { }\n\n/** @ignore */\nfunction nullIndexOf(data: Data<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && data.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(data: Data<T>, fromIndex?: number): number {\n    const { nullBitmap } = data;\n    if (!nullBitmap || data.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of new BitIterator(nullBitmap, data.offset + (fromIndex || 0), data.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(data: Data<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(data, fromIndex); }\n    const get = getVisitor.getVisitFn(data);\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = data.length; ++i < n;) {\n        if (compare(get(data, i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(data: Data<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const get = getVisitor.getVisitFn(data);\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = data.length; ++i < n;) {\n        if (compare(get(data, i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector.js';\nimport { Visitor } from '../visitor.js';\nimport { Type, Precision } from '../enum.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type.js';\nimport { ChunkedIterator } from '../util/chunk.js';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends Vector>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany<T extends Vector>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends DataType>(node: Vector<T> | T): (vector: Vector<T>) => IterableIterator<T['TValue'] | null>;\n    getVisitFn<T extends Type>(node: T): (vector: Vector<TypeToDataType<T>>) => IterableIterator<TypeToDataType<T>['TValue'] | null>;\n    visitNull<T extends Null>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitBool<T extends Bool>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitInt<T extends Int>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8<T extends Int8>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16<T extends Int16>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32<T extends Int32>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64<T extends Int64>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8<T extends Uint8>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16<T extends Uint16>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32<T extends Uint32>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64<T extends Uint64>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat<T extends Float>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16<T extends Float16>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32<T extends Float32>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64<T extends Float64>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8<T extends Utf8>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary<T extends Binary>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitDate<T extends Date_>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay<T extends DateDay>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond<T extends DateMillisecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp<T extends Timestamp>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond<T extends TimestampSecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond<T extends TimestampMillisecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond<T extends TimestampMicrosecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond<T extends TimestampNanosecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTime<T extends Time>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond<T extends TimeSecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond<T extends TimeMillisecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond<T extends TimeMicrosecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond<T extends TimeNanosecond>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal<T extends Decimal>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitList<T extends List>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct<T extends Struct>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion<T extends Union>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion<T extends DenseUnion>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion<T extends SparseUnion>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary<T extends Dictionary>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval<T extends Interval>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime<T extends IntervalDayTime>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth<T extends IntervalYearMonth>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList<T extends FixedSizeList>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n    visitMap<T extends Map_>(vector: Vector<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor { }\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: Vector<T>): IterableIterator<T['TValue'] | null> {\n\n    const { type } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.nullCount === 0 && vector.stride === 1 && (\n        (type.typeId === Type.Timestamp) ||\n        (type instanceof Int && (type as Int).bitWidth !== 64) ||\n        (type instanceof Time && (type as Time).bitWidth !== 64) ||\n        (type instanceof Float && (type as Float).precision !== Precision.HALF)\n    )) {\n        return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n            const data = vector.data[chunkIndex];\n            return data.values.subarray(0, data.length)[Symbol.iterator]();\n        });\n    }\n\n    // Otherwise, iterate manually\n    let offset = 0;\n    return new ChunkedIterator(vector.data.length, (chunkIndex) => {\n        const data = vector.data[chunkIndex];\n        const length = data.length;\n        const inner = vector.slice(offset, offset + length);\n        offset += length;\n        return new VectorIterator(inner);\n    });\n}\n\n/** @ignore */\nclass VectorIterator<T extends DataType> implements IterableIterator<T['TValue'] | null> {\n    private index = 0;\n\n    constructor(private vector: Vector<T>) { }\n\n    next(): IteratorResult<T['TValue'] | null> {\n        if (this.index < this.vector.length) {\n            return {\n                value: this.vector.get(this.index++)\n            };\n        }\n\n        return { done: true, value: null };\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* eslint-disable unicorn/no-array-callback-reference */\n\nimport { Data } from '../data.js';\nimport { Visitor } from '../visitor.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport { Type, TimeUnit, UnionMode } from '../enum.js';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union, DenseUnion, SparseUnion,\n} from '../type.js';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n\n/** @ignore */\nexport interface GetByteLengthVisitor extends Visitor {\n    visit<T extends DataType>(node: Data<T>, index: number): number;\n    visitMany<T extends DataType>(nodes: Data<T>[], index: number[]): number[];\n    getVisitFn<T extends DataType>(node: Data<T> | T): (data: Data<T>, index: number) => number;\n    getVisitFn<T extends Type>(node: T): (data: Data<TypeToDataType<T>>, index: number) => number;\n    visitBinary<T extends Binary>(data: Data<T>, index: number): number;\n    visitUtf8<T extends Utf8>(data: Data<T>, index: number): number;\n    visitList<T extends List>(data: Data<T>, index: number): number;\n    visitDenseUnion<T extends DenseUnion>(data: Data<T>, index: number): number;\n    visitSparseUnion<T extends SparseUnion>(data: Data<T>, index: number): number;\n    visitFixedSizeList<T extends FixedSizeList>(data: Data<T>, index: number): number;\n}\n\n/** @ignore */\nexport class GetByteLengthVisitor extends Visitor {\n    public visitNull(____: Data<Null>, _: number) {\n        return 0;\n    }\n    public visitInt(data: Data<Int>, _: number) {\n        return data.type.bitWidth / 8;\n    }\n    public visitFloat(data: Data<Float>, _: number) {\n        return data.type.ArrayType.BYTES_PER_ELEMENT;\n    }\n    public visitBool(____: Data<Bool>, _: number) {\n        return 1 / 8;\n    }\n    public visitDecimal(data: Data<Decimal>, _: number) {\n        return data.type.bitWidth / 8;\n    }\n    public visitDate(data: Data<Date_>, _: number) {\n        return (data.type.unit + 1) * 4;\n    }\n    public visitTime(data: Data<Time>, _: number) {\n        return data.type.bitWidth / 8;\n    }\n    public visitTimestamp(data: Data<Timestamp>, _: number) {\n        return data.type.unit === TimeUnit.SECOND ? 4 : 8;\n    }\n    public visitInterval(data: Data<Interval>, _: number) {\n        return (data.type.unit + 1) * 4;\n    }\n    public visitStruct(data: Data<Struct>, i: number) {\n        return data.children.reduce((total, child) => total + instance.visit(child, i), 0);\n    }\n    public visitFixedSizeBinary(data: Data<FixedSizeBinary>, _: number) {\n        return data.type.byteWidth;\n    }\n    public visitMap(data: Data<Map_>, i: number) {\n        // 4 + 4 for the indices\n        return 8 + data.children.reduce((total, child) => total + instance.visit(child, i), 0);\n    }\n    public visitDictionary(data: Data<Dictionary>, i: number) {\n        return (data.type.indices.bitWidth / 8) + (data.dictionary?.getByteLength(data.values[i]) || 0);\n    }\n}\n\n/** @ignore */\nconst getUtf8ByteLength = <T extends Utf8>({ valueOffsets }: Data<T>, index: number): number => {\n    // 4 + 4 for the indices, `end - start` for the data bytes\n    return 8 + (valueOffsets[index + 1] - valueOffsets[index]);\n};\n\n/** @ignore */\nconst getBinaryByteLength = <T extends Binary>({ valueOffsets }: Data<T>, index: number): number => {\n    // 4 + 4 for the indices, `end - start` for the data bytes\n    return 8 + (valueOffsets[index + 1] - valueOffsets[index]);\n};\n\n/** @ignore */\nconst getListByteLength = <T extends List>({ valueOffsets, stride, children }: Data<T>, index: number): number => {\n    const child: Data<T['valueType']> = children[0];\n    const { [index * stride]: start } = valueOffsets;\n    const { [index * stride + 1]: end } = valueOffsets;\n    const visit = instance.getVisitFn(child.type);\n    const slice = child.slice(start, end - start);\n    let size = 8; // 4 + 4 for the indices\n    for (let idx = -1, len = end - start; ++idx < len;) {\n        size += visit(slice, idx);\n    }\n    return size;\n};\n\n/** @ignore */\nconst getFixedSizeListByteLength = <T extends FixedSizeList>({ stride, children }: Data<T>, index: number): number => {\n    const child: Data<T['valueType']> = children[0];\n    const slice = child.slice(index * stride, stride);\n    const visit = instance.getVisitFn(child.type);\n    let size = 0;\n    for (let idx = -1, len = slice.length; ++idx < len;) {\n        size += visit(slice, idx);\n    }\n    return size;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnionByteLength = <\n    D extends Data<Union> | Data<DenseUnion> | Data<SparseUnion>\n>(data: D, index: number): number => {\n    return data.type.mode === UnionMode.Dense ?\n        getDenseUnionByteLength(data as Data<DenseUnion>, index) :\n        getSparseUnionByteLength(data as Data<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnionByteLength = <T extends DenseUnion>({ type, children, typeIds, valueOffsets }: Data<T>, index: number): number => {\n    const childIndex = type.typeIdToChildIndex[typeIds[index]];\n    // 4 for the typeId, 4 for the valueOffsets, then the child at the offset\n    return 8 + instance.visit(children[childIndex], valueOffsets[index]);\n};\n\n/** @ignore */\nconst getSparseUnionByteLength = <T extends SparseUnion>({ children }: Data<T>, index: number): number => {\n    // 4 for the typeId, then once each for the children at this index\n    return 4 + instance.visitMany(children, children.map(() => index)).reduce(sum, 0);\n};\n\nGetByteLengthVisitor.prototype.visitUtf8 = getUtf8ByteLength;\nGetByteLengthVisitor.prototype.visitBinary = getBinaryByteLength;\nGetByteLengthVisitor.prototype.visitList = getListByteLength;\nGetByteLengthVisitor.prototype.visitFixedSizeList = getFixedSizeListByteLength;\nGetByteLengthVisitor.prototype.visitUnion = getUnionByteLength;\nGetByteLengthVisitor.prototype.visitDenseUnion = getDenseUnionByteLength;\nGetByteLengthVisitor.prototype.visitSparseUnion = getSparseUnionByteLength;\n\n/** @ignore */\nexport const instance = new GetByteLengthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Type } from './enum.js';\nimport { clampRange } from './util/vector.js';\nimport { DataType, strideForType } from './type.js';\nimport { Data, makeData, DataProps } from './data.js';\nimport { BigIntArray, TypedArray, TypedArrayDataType } from './interfaces.js';\n\nimport {\n    isChunkedValid,\n    computeChunkOffsets,\n    computeChunkNullCounts,\n    sliceChunks,\n    wrapChunkedCall1,\n    wrapChunkedCall2,\n    wrapChunkedIndexOf,\n} from './util/chunk.js';\nimport { BigInt64Array, BigUint64Array } from './util/compat.js';\n\nimport { instance as getVisitor } from './visitor/get.js';\nimport { instance as setVisitor } from './visitor/set.js';\nimport { instance as indexOfVisitor } from './visitor/indexof.js';\nimport { instance as iteratorVisitor } from './visitor/iterator.js';\nimport { instance as byteLengthVisitor } from './visitor/bytelength.js';\n\n// @ts-ignore\nimport type { vectorFromArray } from './factories.js';\n\nexport interface Vector<T extends DataType = any> {\n    ///\n    // Virtual properties for the TypeScript compiler.\n    // These do not exist at runtime.\n    ///\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable\n     */\n    [Symbol.isConcatSpreadable]: true;\n}\n\nconst visitorsByTypeId = {} as { [typeId: number]: { get: any; set: any; indexOf: any; byteLength: any } };\nconst vectorPrototypesByTypeId = {} as { [typeId: number]: any };\n\n/**\n * Array-like data structure. Use the convenience method {@link makeVector} and {@link vectorFromArray} to create vectors.\n */\nexport class Vector<T extends DataType = any> {\n\n    constructor(input: readonly (Data<T> | Vector<T>)[]) {\n        const data: Data<T>[] = input[0] instanceof Vector\n            ? (input as Vector<T>[]).flatMap(x => x.data)\n            : input as Data<T>[];\n        if (data.length === 0 || data.some((x) => !(x instanceof Data))) {\n            throw new TypeError('Vector constructor expects an Array of Data instances.');\n        }\n        const type = data[0]?.type;\n        switch (data.length) {\n            case 0: this._offsets = [0]; break;\n            case 1: {\n                // special case for unchunked vectors\n                const { get, set, indexOf, byteLength } = visitorsByTypeId[type.typeId];\n                const unchunkedData = data[0];\n\n                this.isValid = (index: number) => isChunkedValid(unchunkedData, index);\n                this.get = (index: number) => get(unchunkedData, index);\n                this.set = (index: number, value: T) => set(unchunkedData, index, value);\n                this.indexOf = (index: number) => indexOf(unchunkedData, index);\n                this.getByteLength = (index: number) => byteLength(unchunkedData, index);\n                this._offsets = [0, unchunkedData.length];\n                break;\n            }\n            default:\n                Object.setPrototypeOf(this, vectorPrototypesByTypeId[type.typeId]);\n                this._offsets = computeChunkOffsets(data);\n                break;\n        }\n        this.data = data;\n        this.type = type;\n        this.stride = strideForType(type);\n        this.numChildren = type.children?.length ?? 0;\n        this.length = this._offsets[this._offsets.length - 1];\n    }\n\n    declare protected _offsets: number[] | Uint32Array;\n    declare protected _nullCount: number;\n    declare protected _byteLength: number;\n\n    /**\n     * The {@link DataType `DataType`} of this Vector.\n     */\n    public declare readonly type: T;\n\n    /**\n     * The primitive {@link Data `Data`} instances for this Vector's elements.\n     */\n    public declare readonly data: ReadonlyArray<Data<T>>;\n\n    /**\n     * The number of elements in this Vector.\n     */\n    public declare readonly length: number;\n\n    /**\n     * The number of primitive values per Vector element.\n     */\n    public declare readonly stride: number;\n\n    /**\n     * The number of child Vectors if this Vector is a nested dtype.\n     */\n    public declare readonly numChildren: number;\n\n    /**\n     * The aggregate size (in bytes) of this Vector's buffers and/or child Vectors.\n     */\n    public get byteLength() {\n        if (this._byteLength === -1) {\n            this._byteLength = this.data.reduce((byteLength, data) => byteLength + data.byteLength, 0);\n        }\n        return this._byteLength;\n    }\n\n    /**\n     * The number of null elements in this Vector.\n     */\n    public get nullCount() {\n        if (this._nullCount === -1) {\n            this._nullCount = computeChunkNullCounts(this.data);\n        }\n        return this._nullCount;\n    }\n\n    /**\n     * The Array or TypedAray constructor used for the JS representation\n     *  of the element's values in {@link Vector.prototype.toArray `toArray()`}.\n     */\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    /**\n     * The name that should be printed when the Vector is logged in a message.\n     */\n    public get [Symbol.toStringTag]() {\n        return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`;\n    }\n\n    /**\n     * The name of this Vector.\n     */\n    public get VectorName() { return `${Type[this.type.typeId]}Vector`; }\n\n    /**\n     * Check whether an element is null.\n     * @param index The index at which to read the validity bitmap.\n     */\n    // @ts-ignore\n    public isValid(index: number): boolean { return false; }\n\n    /**\n     * Get an element value by position.\n     * @param index The index of the element to read.\n     */\n    // @ts-ignore\n    public get(index: number): T['TValue'] | null { return null; }\n\n    /**\n     * Set an element value by position.\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    // @ts-ignore\n    public set(index: number, value: T['TValue'] | null): void { return; }\n\n    /**\n     * Retrieve the index of the first occurrence of a value in an Vector.\n     * @param element The value to locate in the Vector.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    // @ts-ignore\n    public indexOf(element: T['TValue'], offset?: number): number { return -1; }\n\n    public includes(element: T['TValue'], offset?: number): boolean { return this.indexOf(element, offset) > 0; }\n\n    /**\n     * Get the size in bytes of an element by index.\n     * @param index The index at which to get the byteLength.\n     */\n    // @ts-ignore\n    public getByteLength(index: number): number { return 0; }\n\n    /**\n     * Iterator for the Vector's elements.\n     */\n    public [Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        return iteratorVisitor.visit(this);\n    }\n\n    /**\n     * Combines two or more Vectors of the same type.\n     * @param others Additional Vectors to add to the end of this Vector.\n     */\n    public concat(...others: Vector<T>[]): Vector<T> {\n        return new Vector(this.data.concat(others.flatMap((x) => x.data).flat(Number.POSITIVE_INFINITY)));\n    }\n\n    /**\n     * Return a zero-copy sub-section of this Vector.\n     * @param start The beginning of the specified portion of the Vector.\n     * @param end The end of the specified portion of the Vector. This is exclusive of the element at the index 'end'.\n     */\n    public slice(begin?: number, end?: number): Vector<T> {\n        return new Vector(clampRange(this, begin, end, ({ data, _offsets }, begin, end) =>\n            sliceChunks(data, _offsets, begin, end)\n        ));\n    }\n\n    public toJSON() { return [...this]; }\n\n    /**\n     * Return a JavaScript Array or TypedArray of the Vector's elements.\n     *\n     * @note If this Vector contains a single Data chunk and the Vector's type is a\n     *  primitive numeric type corresponding to one of the JavaScript TypedArrays, this\n     *  method returns a zero-copy slice of the underlying TypedArray values. If there's\n     *  more than one chunk, the resulting TypedArray will be a copy of the data from each\n     *  chunk's underlying TypedArray values.\n     *\n     * @returns An Array or TypedArray of the Vector's elements, based on the Vector's DataType.\n     */\n    public toArray(): T['TArray'] {\n        const { type, data, length, stride, ArrayType } = this;\n        // Fast case, return subarray if possible\n        switch (type.typeId) {\n            case Type.Int:\n            case Type.Float:\n            case Type.Decimal:\n            case Type.Time:\n            case Type.Timestamp:\n                switch (data.length) {\n                    case 0: return new ArrayType();\n                    case 1: return data[0].values.subarray(0, length * stride);\n                    default: return data.reduce((memo, { values, length: chunk_length }) => {\n                        memo.array.set(values.subarray(0, chunk_length * stride), memo.offset);\n                        memo.offset += chunk_length * stride;\n                        return memo;\n                    }, { array: new ArrayType(length * stride), offset: 0 }).array;\n                }\n        }\n        // Otherwise if not primitive, slow copy\n        return [...this] as T['TArray'];\n    }\n\n    /**\n     * Returns a string representation of the Vector.\n     *\n     * @returns A string representation of the Vector.\n     */\n    public toString() {\n        return `[${[...this].join(',')}]`;\n    }\n\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     * @param name The name of the child to retrieve.\n     */\n    public getChild<R extends keyof T['TChildren']>(name: R) {\n        return this.getChildAt(this.type.children?.findIndex((f) => f.name === name));\n    }\n\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     * @param index The index of the child to retrieve.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        if (index > -1 && index < this.numChildren) {\n            return new Vector(this.data.map(({ children }) => children[index] as Data<R>));\n        }\n        return null;\n    }\n\n    public get isMemoized(): boolean {\n        if (DataType.isDictionary(this.type)) {\n            return this.data[0].dictionary!.isMemoized;\n        }\n        return false;\n    }\n\n    /**\n     * Adds memoization to the Vector's {@link get} method. For dictionary\n     * vectors, this method return a vector that memoizes only the dictionary\n     * values.\n     *\n     * Memoization is very useful when decoding a value is expensive such as\n     * Uft8. The memoization creates a cache of the size of the Vector and\n     * therfore increases memory usage.\n     *\n     * @returns A new vector that memoizes calls to {@link get}.\n     */\n    public memoize(): MemoizedVector<T> {\n        if (DataType.isDictionary(this.type)) {\n            const dictionary = new MemoizedVector(this.data[0].dictionary!);\n            const newData = this.data.map((data) => {\n                const cloned = data.clone();\n                cloned.dictionary = dictionary;\n                return cloned;\n            });\n            return new Vector(newData);\n        }\n        return new MemoizedVector(this);\n    }\n\n    /**\n     * Returns a vector without memoization of the {@link get} method. If this\n     * vector is not memoized, this method returns this vector.\n     *\n     * @returns A a vector without memoization.\n     */\n    public unmemoize(): Vector<T> {\n        if (DataType.isDictionary(this.type) && this.isMemoized) {\n            const dictionary = this.data[0].dictionary!.unmemoize();\n            const newData = this.data.map((data) => {\n                const newData = data.clone();\n                newData.dictionary = dictionary;\n                return newData;\n            });\n            return new Vector(newData);\n        }\n        return this;\n    }\n\n    // Initialize this static property via an IIFE so bundlers don't tree-shake\n    // out this logic, but also so we're still compliant with `\"sideEffects\": false`\n    protected static [Symbol.toStringTag] = ((proto: Vector) => {\n        (proto as any).type = DataType.prototype;\n        (proto as any).data = [];\n        (proto as any).length = 0;\n        (proto as any).stride = 1;\n        (proto as any).numChildren = 0;\n        (proto as any)._nullCount = -1;\n        (proto as any)._byteLength = -1;\n        (proto as any)._offsets = new Uint32Array([0]);\n        (proto as any)[Symbol.isConcatSpreadable] = true;\n\n        const typeIds: Type[] = Object.keys(Type)\n            .map((T: any) => Type[T] as any)\n            .filter((T: any) => typeof T === 'number' && T !== Type.NONE);\n\n        for (const typeId of typeIds) {\n            const get = getVisitor.getVisitFnByTypeId(typeId);\n            const set = setVisitor.getVisitFnByTypeId(typeId);\n            const indexOf = indexOfVisitor.getVisitFnByTypeId(typeId);\n            const byteLength = byteLengthVisitor.getVisitFnByTypeId(typeId);\n\n            visitorsByTypeId[typeId] = { get, set, indexOf, byteLength };\n            vectorPrototypesByTypeId[typeId] = Object.create(proto, {\n                ['isValid']: { value: wrapChunkedCall1(isChunkedValid) },\n                ['get']: { value: wrapChunkedCall1(getVisitor.getVisitFnByTypeId(typeId)) },\n                ['set']: { value: wrapChunkedCall2(setVisitor.getVisitFnByTypeId(typeId)) },\n                ['indexOf']: { value: wrapChunkedIndexOf(indexOfVisitor.getVisitFnByTypeId(typeId)) },\n                ['getByteLength']: { value: wrapChunkedCall1(byteLengthVisitor.getVisitFnByTypeId(typeId)) },\n            });\n        }\n\n        return 'Vector';\n    })(Vector.prototype);\n}\n\nclass MemoizedVector<T extends DataType = any> extends Vector<T> {\n\n    public constructor(vector: Vector<T>) {\n        super(vector.data);\n\n        const get = this.get;\n        const set = this.set;\n        const slice = this.slice;\n\n        const cache = new Array<T['TValue'] | null>(this.length);\n\n        Object.defineProperty(this, 'get', {\n            value(index: number) {\n                const cachedValue = cache[index];\n                if (cachedValue !== undefined) {\n                    return cachedValue;\n                }\n                const value = get.call(this, index);\n                cache[index] = value;\n                return value;\n            }\n        });\n\n        Object.defineProperty(this, 'set', {\n            value(index: number, value: T['TValue'] | null) {\n                set.call(this, index, value);\n                cache[index] = value;\n            }\n        });\n\n        Object.defineProperty(this, 'slice', {\n            value: (begin?: number, end?: number) => new MemoizedVector(slice.call(this, begin, end))\n        });\n\n        Object.defineProperty(this, 'isMemoized', { value: true });\n\n        Object.defineProperty(this, 'unmemoize', {\n            value: () => new Vector(this.data)\n        });\n\n        Object.defineProperty(this, 'memoize', {\n            value: () => this\n        });\n    }\n}\n\nimport * as dtypes from './type.js';\n\n/**\n * Creates a Vector without data copies.\n *\n * @example\n * ```ts\n * const vector = makeVector(new Int32Array([1, 2, 3]));\n * ```\n */\nexport function makeVector<T extends TypedArray | BigIntArray>(data: T | readonly T[]): Vector<TypedArrayDataType<T>>;\nexport function makeVector<T extends DataView>(data: T | readonly T[]): Vector<dtypes.Int8>;\nexport function makeVector<T extends DataType>(data: Data<T> | readonly Data<T>[]): Vector<T>;\nexport function makeVector<T extends DataType>(data: Vector<T> | readonly Vector<T>[]): Vector<T>;\nexport function makeVector<T extends DataType>(data: DataProps<T> | readonly DataProps<T>[]): Vector<T>;\n\nexport function makeVector(init: any) {\n    if (init) {\n        if (init instanceof Data) { return new Vector([init]); }\n        if (init instanceof Vector) { return new Vector(init.data); }\n        if (init.type instanceof DataType) { return new Vector([makeData(init)]); }\n        if (Array.isArray(init)) {\n            return new Vector(init.flatMap(v => unwrapInputs(v)));\n        }\n        if (ArrayBuffer.isView(init)) {\n            if (init instanceof DataView) {\n                init = new Uint8Array(init.buffer);\n            }\n            const props = { offset: 0, length: init.length, nullCount: 0, data: init };\n            if (init instanceof Int8Array) { return new Vector([makeData({ ...props, type: new dtypes.Int8 })]); }\n            if (init instanceof Int16Array) { return new Vector([makeData({ ...props, type: new dtypes.Int16 })]); }\n            if (init instanceof Int32Array) { return new Vector([makeData({ ...props, type: new dtypes.Int32 })]); }\n            if (init instanceof BigInt64Array) { return new Vector([makeData({ ...props, type: new dtypes.Int64 })]); }\n            if (init instanceof Uint8Array || init instanceof Uint8ClampedArray) { return new Vector([makeData({ ...props, type: new dtypes.Uint8 })]); }\n            if (init instanceof Uint16Array) { return new Vector([makeData({ ...props, type: new dtypes.Uint16 })]); }\n            if (init instanceof Uint32Array) { return new Vector([makeData({ ...props, type: new dtypes.Uint32 })]); }\n            if (init instanceof BigUint64Array) { return new Vector([makeData({ ...props, type: new dtypes.Uint64 })]); }\n            if (init instanceof Float32Array) { return new Vector([makeData({ ...props, type: new dtypes.Float32 })]); }\n            if (init instanceof Float64Array) { return new Vector([makeData({ ...props, type: new dtypes.Float64 })]); }\n            throw new Error('Unrecognized input');\n        }\n    }\n    throw new Error('Unrecognized input');\n}\n\nfunction unwrapInputs(x: any) {\n    return x instanceof Data ? [x] : (x instanceof Vector ? x.data : makeVector(x).data);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector.js';\nimport { BufferType, Type } from './enum.js';\nimport { DataType, strideForType } from './type.js';\nimport { popcnt_bit_range, truncateBitmap } from './util/bit.js';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n    [BufferType.OFFSET]: Int32Array;\n    [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n    [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/**\n * Data structure underlying {@link Vector}s. Use the convenience method {@link makeData}.\n */\nexport class Data<T extends DataType = DataType> {\n\n    declare public readonly type: T;\n    declare public readonly length: number;\n    declare public readonly offset: number;\n    declare public readonly stride: number;\n    declare public readonly nullable: boolean;\n    declare public readonly children: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    declare public dictionary?: Vector;\n\n    declare public readonly values: Buffers<T>[BufferType.DATA];\n    declare public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    declare public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    declare public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        const { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.children.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, children: Data[] = [], dictionary?: Vector) {\n        this.type = type;\n        this.children = children;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n        this.nullable = this._nullCount !== 0 && this.nullBitmap && this.nullBitmap.byteLength > 0;\n    }\n\n    public getValid(index: number) {\n        if (this.nullable && this.nullCount > 0) {\n            const pos = this.offset + index;\n            const val = this.nullBitmap[pos >> 3];\n            return (val & (1 << (pos % 8))) !== 0;\n        }\n        return true;\n    }\n\n    public setValid(index: number, value: boolean) {\n        // Don't interact w/ nullBitmap if not nullable\n        if (!this.nullable) { return value; }\n        // If no null bitmap, initialize one on the fly\n        if (!this.nullBitmap || this.nullBitmap.byteLength <= (index >> 3)) {\n            const { nullBitmap } = this._changeLengthAndBackfillNullBitmap(this.length);\n            Object.assign(this, { nullBitmap, _nullCount: 0 });\n        }\n        const { nullBitmap, offset } = this;\n        const pos = (offset + index) >> 3;\n        const bit = (offset + index) % 8;\n        const val = (nullBitmap[pos] >> bit) & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `_nullCount`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `_nullCount`.\n        value ? val === 0 && ((nullBitmap[pos] |= (1 << bit)), (this._nullCount = this.nullCount + 1))\n            : val === 1 && ((nullBitmap[pos] &= ~(1 << bit)), (this._nullCount = this.nullCount - 1));\n        return value;\n    }\n\n    public clone<R extends DataType = T>(type: R = this.type as any, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any>this, children: Data[] = this.children) {\n        return new Data(type, offset, length, nullCount, buffers, children, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, children } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (children.length === 0 || this.valueOffsets) ? children : this._sliceChildren(children, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any;\n        const { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(children: Data[], offset: number, length: number): Data[] {\n        return children.map((child) => child.slice(offset, length));\n    }\n}\n\n(Data.prototype as any).children = Object.freeze([]);\n\nimport {\n    Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float,\n    Int,\n    Date_,\n    Interval,\n    Time,\n    Timestamp,\n    Union, DenseUnion, SparseUnion,\n} from './type.js';\n\nimport { Visitor } from './visitor.js';\nimport { toArrayBufferView, toInt32Array, toUint8Array } from './util/buffer.js';\n\nclass MakeDataVisitor extends Visitor {\n    public visit<T extends DataType>(props: any): Data<T> {\n        return this.getVisitFn(props['type']).call(this, props);\n    }\n    public visitNull<T extends Null>(props: NullDataProps<T>) {\n        const {\n            ['type']: type,\n            ['offset']: offset = 0,\n            ['length']: length = 0,\n        } = props;\n        return new Data(type, offset, length, 0);\n    }\n    public visitBool<T extends Bool>(props: BoolDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length >> 3, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitInt<T extends Int>(props: IntDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitFloat<T extends Float>(props: FloatDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitUtf8<T extends Utf8>(props: Utf8DataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    public visitBinary<T extends Binary>(props: BinaryDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const data = toUint8Array(props['data']);\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, data, nullBitmap]);\n    }\n    public visitFixedSizeBinary<T extends FixedSizeBinary>(props: FixedSizeBinaryDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitDate<T extends Date_>(props: Date_DataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitTimestamp<T extends Timestamp>(props: TimestampDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitTime<T extends Time>(props: TimeDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitDecimal<T extends Decimal>(props: DecimalDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitList<T extends List>(props: ListDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n    public visitStruct<T extends Struct>(props: StructDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const {\n            length = children.reduce((len, { length }) => Math.max(len, length), 0),\n            nullCount = props['nullBitmap'] ? -1 : 0\n        } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], children);\n    }\n    public visitUnion<T extends Union>(props: UnionDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0, ['children']: children = [] } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const typeIds = toArrayBufferView(type.ArrayType, props['typeIds']);\n        const { ['length']: length = typeIds.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        if (DataType.isSparseUnion(type)) {\n            return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap, typeIds], children);\n        }\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap, typeIds], children);\n    }\n    public visitDictionary<T extends Dictionary>(props: DictionaryDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.indices.ArrayType, props['data']);\n        const { ['dictionary']: dictionary = new Vector([new MakeDataVisitor().visit({ type: type.dictionary })]) } = props;\n        const { ['length']: length = data.length, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap], [], dictionary);\n    }\n    public visitInterval<T extends Interval>(props: IntervalDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0 } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const data = toArrayBufferView(type.ArrayType, props['data']);\n        const { ['length']: length = data.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [undefined, data, nullBitmap]);\n    }\n    public visitFixedSizeList<T extends FixedSizeList>(props: FixedSizeListDataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.valueType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const { ['length']: length = child.length / strideForType(type), ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0 } = props;\n        return new Data(type, offset, length, nullCount, [undefined, undefined, nullBitmap], [child]);\n    }\n    public visitMap<T extends Map_>(props: Map_DataProps<T>) {\n        const { ['type']: type, ['offset']: offset = 0, ['child']: child = new MakeDataVisitor().visit({ type: type.childType }) } = props;\n        const nullBitmap = toUint8Array(props['nullBitmap']);\n        const valueOffsets = toInt32Array(props['valueOffsets']);\n        const { ['length']: length = valueOffsets.length - 1, ['nullCount']: nullCount = props['nullBitmap'] ? -1 : 0, } = props;\n        return new Data(type, offset, length, nullCount, [valueOffsets, undefined, nullBitmap], [child]);\n    }\n}\n\n/** @ignore */\ninterface DataProps_<T extends DataType> {\n    type: T;\n    offset?: number;\n    length?: number;\n    nullCount?: number;\n    nullBitmap?: NullBuffer;\n}\n\ninterface NullDataProps<T extends Null> { type: T; offset?: number; length?: number }\ninterface IntDataProps<T extends Int> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface DictionaryDataProps<T extends Dictionary> extends DataProps_<T> { data?: DataBuffer<T>; dictionary?: Vector<T['dictionary']> }\ninterface FloatDataProps<T extends Float> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface BoolDataProps<T extends Bool> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface DecimalDataProps<T extends Decimal> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface Date_DataProps<T extends Date_> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface TimeDataProps<T extends Time> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface TimestampDataProps<T extends Timestamp> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface IntervalDataProps<T extends Interval> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface FixedSizeBinaryDataProps<T extends FixedSizeBinary> extends DataProps_<T> { data?: DataBuffer<T> }\ninterface BinaryDataProps<T extends Binary> extends DataProps_<T> { valueOffsets: ValueOffsetsBuffer; data?: DataBuffer<T> }\ninterface Utf8DataProps<T extends Utf8> extends DataProps_<T> { valueOffsets: ValueOffsetsBuffer; data?: DataBuffer<T> }\ninterface ListDataProps<T extends List> extends DataProps_<T> { valueOffsets: ValueOffsetsBuffer; child: Data<T['valueType']> }\ninterface FixedSizeListDataProps<T extends FixedSizeList> extends DataProps_<T> { child: Data<T['valueType']> }\ninterface StructDataProps<T extends Struct> extends DataProps_<T> { children: Data[] }\ninterface Map_DataProps<T extends Map_> extends DataProps_<T> { valueOffsets: ValueOffsetsBuffer; child: Data }\ninterface SparseUnionDataProps<T extends SparseUnion> extends DataProps_<T> { typeIds: TypeIdsBuffer; children: Data[] }\ninterface DenseUnionDataProps<T extends DenseUnion> extends DataProps_<T> { typeIds: TypeIdsBuffer; children: Data[]; valueOffsets: ValueOffsetsBuffer }\ninterface UnionDataProps<T extends Union> extends DataProps_<T> { typeIds: TypeIdsBuffer; children: Data[]; valueOffsets?: ValueOffsetsBuffer }\n\nexport type DataProps<T extends DataType> = (\n    T extends Null /*            */ ? NullDataProps<T> :\n    T extends Int /*             */ ? IntDataProps<T> :\n    T extends Dictionary /*      */ ? DictionaryDataProps<T> :\n    T extends Float /*           */ ? FloatDataProps<T> :\n    T extends Bool /*            */ ? BoolDataProps<T> :\n    T extends Decimal /*         */ ? DecimalDataProps<T> :\n    T extends Date_ /*           */ ? Date_DataProps<T> :\n    T extends Time /*            */ ? TimeDataProps<T> :\n    T extends Timestamp /*       */ ? TimestampDataProps<T> :\n    T extends Interval /*        */ ? IntervalDataProps<T> :\n    T extends FixedSizeBinary /* */ ? FixedSizeBinaryDataProps<T> :\n    T extends Binary /*          */ ? BinaryDataProps<T> :\n    T extends Utf8 /*            */ ? Utf8DataProps<T> :\n    T extends List /*            */ ? ListDataProps<T> :\n    T extends FixedSizeList /*   */ ? FixedSizeListDataProps<T> :\n    T extends Struct /*          */ ? StructDataProps<T> :\n    T extends Map_ /*            */ ? Map_DataProps<T> :\n    T extends SparseUnion /*     */ ? SparseUnionDataProps<T> :\n    T extends DenseUnion /*      */ ? DenseUnionDataProps<T> :\n    T extends Union /*           */ ? UnionDataProps<T> :\n /*                                */ DataProps_<T>\n);\n\nexport function makeData<T extends Null>(props: NullDataProps<T>): Data<T>;\nexport function makeData<T extends Int>(props: IntDataProps<T>): Data<T>;\nexport function makeData<T extends Dictionary>(props: DictionaryDataProps<T>): Data<T>;\nexport function makeData<T extends Float>(props: FloatDataProps<T>): Data<T>;\nexport function makeData<T extends Bool>(props: BoolDataProps<T>): Data<T>;\nexport function makeData<T extends Decimal>(props: DecimalDataProps<T>): Data<T>;\nexport function makeData<T extends Date_>(props: Date_DataProps<T>): Data<T>;\nexport function makeData<T extends Time>(props: TimeDataProps<T>): Data<T>;\nexport function makeData<T extends Timestamp>(props: TimestampDataProps<T>): Data<T>;\nexport function makeData<T extends Interval>(props: IntervalDataProps<T>): Data<T>;\nexport function makeData<T extends FixedSizeBinary>(props: FixedSizeBinaryDataProps<T>): Data<T>;\nexport function makeData<T extends Binary>(props: BinaryDataProps<T>): Data<T>;\nexport function makeData<T extends Utf8>(props: Utf8DataProps<T>): Data<T>;\nexport function makeData<T extends List>(props: ListDataProps<T>): Data<T>;\nexport function makeData<T extends FixedSizeList>(props: FixedSizeListDataProps<T>): Data<T>;\nexport function makeData<T extends Struct>(props: StructDataProps<T>): Data<T>;\nexport function makeData<T extends Map_>(props: Map_DataProps<T>): Data<T>;\nexport function makeData<T extends SparseUnion>(props: SparseUnionDataProps<T>): Data<T>;\nexport function makeData<T extends DenseUnion>(props: DenseUnionDataProps<T>): Data<T>;\nexport function makeData<T extends Union>(props: UnionDataProps<T>): Data<T>;\nexport function makeData<T extends DataType>(props: DataProps_<T>): Data<T>;\nexport function makeData(props: any) {\n    return new MakeDataVisitor().visit(props);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType, TypeMap } from './type.js';\n\nexport class Schema<T extends TypeMap = any> {\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(\n        fields: Field<T[keyof T]>[] = [],\n        metadata?: Map<string, string> | null,\n        dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n\n    public get names(): (keyof T)[] { return this.fields.map((f) => f.name); }\n\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    /**\n     * Construct a new Schema containing only specified fields.\n     *\n     * @param fieldNames Names of fields to keep.\n     * @returns A new Schema of fields matching the specified names.\n     */\n    public select<K extends keyof T = any>(fieldNames: K[]) {\n        const names = new Set<string | K>(fieldNames);\n        const fields = this.fields.filter((f) => names.has(f.name)) as Field<T[K]>[];\n        return new Schema<{ [P in K]: T[P] }>(fields, this.metadata);\n    }\n\n    /**\n     * Construct a new Schema containing only fields at the specified indices.\n     *\n     * @param fieldIndices Indices of fields to keep.\n     * @returns A new Schema of fields at the specified indices.\n     */\n    public selectAt<K extends T = any>(fieldIndices: number[]) {\n        const fields = fieldIndices.map((i) => this.fields[i]).filter(Boolean) as Field<K[keyof K]>[];\n        return new Schema<K>(fields, this.metadata);\n    }\n\n    public assign<R extends TypeMap = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends TypeMap = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends TypeMap = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = (args[0] instanceof Schema\n            ? args[0] as Schema<R>\n            : Array.isArray(args[0])\n                ? new Schema<R>(<Field<R[keyof R]>[]>args[0])\n                : new Schema<R>(<Field<R[keyof R]>[]>args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = <any>null;\n(Schema.prototype as any).metadata = <any>null;\n(Schema.prototype as any).dictionaries = <any>null;\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number; type: T; nullable?: boolean; metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public clone<R extends DataType = T>(props: { name?: string | number; type?: R; nullable?: boolean; metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Vector } from '../vector.js';\nimport { Visitor } from '../visitor.js';\nimport { Schema, Field } from '../schema.js';\nimport {\n    DataType, TypeMap, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type.js';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: Vector<T> | Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull<T extends Null>(type: T, other?: DataType | null): other is T;\n    visitBool<T extends Bool>(type: T, other?: DataType | null): other is T;\n    visitInt<T extends Int>(type: T, other?: DataType | null): other is T;\n    visitInt8<T extends Int8>(type: T, other?: DataType | null): other is T;\n    visitInt16<T extends Int16>(type: T, other?: DataType | null): other is T;\n    visitInt32<T extends Int32>(type: T, other?: DataType | null): other is T;\n    visitInt64<T extends Int64>(type: T, other?: DataType | null): other is T;\n    visitUint8<T extends Uint8>(type: T, other?: DataType | null): other is T;\n    visitUint16<T extends Uint16>(type: T, other?: DataType | null): other is T;\n    visitUint32<T extends Uint32>(type: T, other?: DataType | null): other is T;\n    visitUint64<T extends Uint64>(type: T, other?: DataType | null): other is T;\n    visitFloat<T extends Float>(type: T, other?: DataType | null): other is T;\n    visitFloat16<T extends Float16>(type: T, other?: DataType | null): other is T;\n    visitFloat32<T extends Float32>(type: T, other?: DataType | null): other is T;\n    visitFloat64<T extends Float64>(type: T, other?: DataType | null): other is T;\n    visitUtf8<T extends Utf8>(type: T, other?: DataType | null): other is T;\n    visitBinary<T extends Binary>(type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T;\n    visitDate<T extends Date_>(type: T, other?: DataType | null): other is T;\n    visitDateDay<T extends DateDay>(type: T, other?: DataType | null): other is T;\n    visitDateMillisecond<T extends DateMillisecond>(type: T, other?: DataType | null): other is T;\n    visitTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T;\n    visitTimestampSecond<T extends TimestampSecond>(type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond<T extends TimestampMillisecond>(type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond<T extends TimestampMicrosecond>(type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond<T extends TimestampNanosecond>(type: T, other?: DataType | null): other is T;\n    visitTime<T extends Time>(type: T, other?: DataType | null): other is T;\n    visitTimeSecond<T extends TimeSecond>(type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond<T extends TimeMillisecond>(type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond<T extends TimeMicrosecond>(type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond<T extends TimeNanosecond>(type: T, other?: DataType | null): other is T;\n    visitDecimal<T extends Decimal>(type: T, other?: DataType | null): other is T;\n    visitList<T extends List>(type: T, other?: DataType | null): other is T;\n    visitStruct<T extends Struct>(type: T, other?: DataType | null): other is T;\n    visitUnion<T extends Union>(type: T, other?: DataType | null): other is T;\n    visitDenseUnion<T extends DenseUnion>(type: T, other?: DataType | null): other is T;\n    visitSparseUnion<T extends SparseUnion>(type: T, other?: DataType | null): other is T;\n    visitDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T;\n    visitInterval<T extends Interval>(type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime<T extends IntervalDayTime>(type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth<T extends IntervalYearMonth>(type: T, other?: DataType | null): other is T;\n    visitFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T;\n    visitMap<T extends Map_>(type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends TypeMap>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            this.compareManyFields(schema.fields, other.fields)\n        );\n    }\n    compareManyFields<T extends TypeMap>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => this.compareFields(f, others[i]))\n        );\n    }\n    compareFields<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            this.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareManyFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any>type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareManyFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n\nexport function compareSchemas<T extends TypeMap>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n    return instance.compareSchemas(schema, other);\n}\n\nexport function compareFields<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n    return instance.compareFields(field, other);\n}\n\nexport function compareTypes<A extends DataType = any>(type: A, other?: DataType): other is A {\n    return instance.visit(type, other);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data, makeData } from './data.js';\nimport { Table } from './table.js';\nimport { Vector } from './vector.js';\nimport { Schema, Field } from './schema.js';\nimport { DataType, Struct, Null, TypeMap } from './type.js';\n\nimport { instance as getVisitor } from './visitor/get.js';\nimport { instance as setVisitor } from './visitor/set.js';\nimport { instance as indexOfVisitor } from './visitor/indexof.js';\nimport { instance as iteratorVisitor } from './visitor/iterator.js';\nimport { instance as byteLengthVisitor } from './visitor/bytelength.js';\n\n/** @ignore */\nexport interface RecordBatch<T extends TypeMap = any> {\n    ///\n    // Virtual properties for the TypeScript compiler.\n    // These do not exist at runtime.\n    ///\n    readonly TType: Struct<T>;\n    readonly TArray: Struct<T>['TArray'];\n    readonly TValue: Struct<T>['TValue'];\n\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable\n     */\n    [Symbol.isConcatSpreadable]: true;\n}\n\n/** @ignore */\nexport class RecordBatch<T extends TypeMap = any> {\n\n    constructor(columns: { [P in keyof T]: Data<T[P]> });\n    constructor(schema: Schema<T>, data?: Data<Struct<T>>);\n    constructor(...args: any[]) {\n        switch (args.length) {\n            case 2: {\n                [this.schema] = args;\n                if (!(this.schema instanceof Schema)) {\n                    throw new TypeError('RecordBatch constructor expects a [Schema, Data] pair.');\n                }\n                [,\n                    this.data = makeData({\n                        nullCount: 0,\n                        type: new Struct<T>(this.schema.fields),\n                        children: this.schema.fields.map((f) => makeData({ type: f.type, nullCount: 0 }))\n                    })\n                ] = args;\n                if (!(this.data instanceof Data)) {\n                    throw new TypeError('RecordBatch constructor expects a [Schema, Data] pair.');\n                }\n                [this.schema, this.data] = ensureSameLengthData<T>(this.schema, this.data.children as Data<T[keyof T]>[]);\n                break;\n            }\n            case 1: {\n                const [obj] = args;\n                const { fields, children, length } = Object.keys(obj).reduce((memo, name, i) => {\n                    memo.children[i] = obj[name];\n                    memo.length = Math.max(memo.length, obj[name].length);\n                    memo.fields[i] = Field.new({ name, type: obj[name].type, nullable: true });\n                    return memo;\n                }, {\n                    length: 0,\n                    fields: new Array<Field<T[keyof T]>>(),\n                    children: new Array<Data<T[keyof T]>>(),\n                });\n\n                const schema = new Schema<T>(fields);\n                const data = makeData({ type: new Struct<T>(fields), length, children, nullCount: 0 });\n                [this.schema, this.data] = ensureSameLengthData<T>(schema, data.children as Data<T[keyof T]>[], length);\n                break;\n            }\n            default: throw new TypeError('RecordBatch constructor expects an Object mapping names to child Data, or a [Schema, Data] pair.');\n        }\n    }\n\n    protected _dictionaries?: Map<number, Vector>;\n\n    public readonly schema: Schema<T>;\n    public readonly data: Data<Struct<T>>;\n\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = collectDictionaries(this.schema.fields, this.data.children));\n    }\n\n    /**\n     * The number of columns in this RecordBatch.\n     */\n    public get numCols() { return this.schema.fields.length; }\n\n    /**\n     * The number of rows in this RecordBatch.\n     */\n    public get numRows() { return this.data.length; }\n\n    /**\n     * The number of null rows in this RecordBatch.\n     */\n    public get nullCount() {\n        return this.data.nullCount;\n    }\n\n    /**\n     * Check whether an element is null.\n     * @param index The index at which to read the validity bitmap.\n     */\n    public isValid(index: number) {\n        return this.data.getValid(index);\n    }\n\n    /**\n     * Get a row by position.\n     * @param index The index of the element to read.\n     */\n    public get(index: number) {\n        return getVisitor.visit(this.data, index);\n    }\n\n    /**\n     * Set a row by position.\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    public set(index: number, value: Struct<T>['TValue']) {\n        return setVisitor.visit(this.data, index, value);\n    }\n\n    /**\n     * Retrieve the index of the first occurrence of a row in an RecordBatch.\n     * @param element The row to locate in the RecordBatch.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    public indexOf(element: Struct<T>['TValue'], offset?: number): number {\n        return indexOfVisitor.visit(this.data, element, offset);\n    }\n\n    /**\n     * Get the size (in bytes) of a row by index.\n     * @param index The row index for which to compute the byteLength.\n     */\n    public getByteLength(index: number): number {\n        return byteLengthVisitor.visit(this.data, index);\n    }\n\n    /**\n     * Iterator for rows in this RecordBatch.\n     */\n    public [Symbol.iterator]() {\n        return iteratorVisitor.visit(new Vector([this.data])) as IterableIterator<Struct<T>['TValue']>;\n    }\n\n    /**\n     * Return a JavaScript Array of the RecordBatch rows.\n     * @returns An Array of RecordBatch rows.\n     */\n    public toArray() {\n        return [...this];\n    }\n\n    /**\n     * Combines two or more RecordBatch of the same schema.\n     * @param others Additional RecordBatch to add to the end of this RecordBatch.\n     */\n    public concat(...others: RecordBatch<T>[]) {\n        return new Table(this.schema, [this, ...others]);\n    }\n\n    /**\n     * Return a zero-copy sub-section of this RecordBatch.\n     * @param start The beginning of the specified portion of the RecordBatch.\n     * @param end The end of the specified portion of the RecordBatch. This is exclusive of the element at the index 'end'.\n     */\n    public slice(begin?: number, end?: number): RecordBatch<T> {\n        const [slice] = new Vector([this.data]).slice(begin, end).data;\n        return new RecordBatch(this.schema, slice);\n    }\n\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     * @param name The name of the child to retrieve.\n     */\n    public getChild<P extends keyof T>(name: P) {\n        return this.getChildAt<T[P]>(this.schema.fields?.findIndex((f) => f.name === name));\n    }\n\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     * @param index The index of the child to retrieve.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        if (index > -1 && index < this.schema.fields.length) {\n            return new Vector([this.data.children[index]]) as Vector<R>;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a child Vector by name.\n     * @param name The name of the child to overwrite.\n     * @returns A new RecordBatch with the new child for the specified name.\n     */\n    public setChild<P extends keyof T, R extends DataType>(name: P, child: Vector<R>) {\n        return this.setChildAt(this.schema.fields?.findIndex((f) => f.name === name), child) as RecordBatch<T & { [K in P]: R }>;\n    }\n\n    /**\n     * Sets a child Vector by index.\n     * @param index The index of the child to overwrite.\n     * @returns A new RecordBatch with the new child at the specified index.\n     */\n    public setChildAt(index: number, child?: null): RecordBatch;\n    public setChildAt<R extends DataType = any>(index: number, child: Vector<R>): RecordBatch;\n    public setChildAt(index: number, child: any) {\n        let schema: Schema = this.schema;\n        let data: Data<Struct> = this.data;\n        if (index > -1 && index < this.numCols) {\n            if (!child) {\n                child = new Vector([makeData({ type: new Null, length: this.numRows })]);\n            }\n            const fields = schema.fields.slice() as Field<any>[];\n            const children = data.children.slice() as Data<any>[];\n            const field = fields[index].clone({ type: child.type });\n            [fields[index], children[index]] = [field, child.data[0]];\n            schema = new Schema(fields, new Map(this.schema.metadata));\n            data = makeData({ type: new Struct<T>(fields), children });\n        }\n        return new RecordBatch(schema, data);\n    }\n\n    /**\n     * Construct a new RecordBatch containing only specified columns.\n     *\n     * @param columnNames Names of columns to keep.\n     * @returns A new RecordBatch of columns matching the specified names.\n     */\n    public select<K extends keyof T = any>(columnNames: K[]) {\n        const schema = this.schema.select(columnNames);\n        const type = new Struct(schema.fields);\n        const children = [] as Data<T[K]>[];\n        for (const name of columnNames) {\n            const index = this.schema.fields.findIndex((f) => f.name === name);\n            if (~index) {\n                children[index] = this.data.children[index] as Data<T[K]>;\n            }\n        }\n        return new RecordBatch(schema, makeData({ type, length: this.numRows, children }));\n    }\n\n    /**\n     * Construct a new RecordBatch containing only columns at the specified indices.\n     *\n     * @param columnIndices Indices of columns to keep.\n     * @returns A new RecordBatch of columns matching at the specified indices.\n     */\n    public selectAt<K extends T = any>(columnIndices: number[]) {\n        const schema = this.schema.selectAt<K>(columnIndices);\n        const children = columnIndices.map((i) => this.data.children[i]).filter(Boolean);\n        const subset = makeData({ type: new Struct(schema.fields), length: this.numRows, children });\n        return new RecordBatch<{ [P in keyof K]: K[P] }>(schema, subset);\n    }\n\n    // Initialize this static property via an IIFE so bundlers don't tree-shake\n    // out this logic, but also so we're still compliant with `\"sideEffects\": false`\n    protected static [Symbol.toStringTag] = ((proto: RecordBatch) => {\n        (proto as any)._nullCount = -1;\n        (proto as any)[Symbol.isConcatSpreadable] = true;\n        return 'RecordBatch';\n    })(RecordBatch.prototype);\n}\n\n\n/** @ignore */\nfunction ensureSameLengthData<T extends TypeMap = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    maxLength = chunks.reduce((max, col) => Math.max(max, col.length), 0)\n) {\n    const fields = [...schema.fields];\n    const children = [...chunks] as Data<T[keyof T]>[];\n    const nullBitmapSize = ((maxLength + 63) & ~63) >> 3;\n\n    for (const [idx, field] of schema.fields.entries()) {\n        const chunk = chunks[idx];\n        if (!chunk || chunk.length !== maxLength) {\n            fields[idx] = field.clone({ nullable: true });\n            children[idx] = chunk?._changeLengthAndBackfillNullBitmap(maxLength) ?? makeData({\n                type: field.type,\n                length: maxLength,\n                nullCount: maxLength,\n                nullBitmap: new Uint8Array(nullBitmapSize)\n            });\n        }\n    }\n\n    return [\n        schema.assign(fields),\n        makeData({ type: new Struct<T>(fields), length: maxLength, children })\n    ] as [Schema<T>, Data<Struct<T>>];\n}\n\n/** @ignore */\nfunction collectDictionaries(fields: Field[], children: Data[], dictionaries = new Map<number, Vector>()): Map<number, Vector> {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        const data = children[i];\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                if (data.dictionary) {\n                    dictionaries.set(type.id, data.dictionary);\n                }\n            } else if (dictionaries.get(type.id) !== data.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            collectDictionaries(type.children, data.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends TypeMap = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        const children = schema.fields.map((f) => makeData({ type: f.type }));\n        const data = makeData({ type: new Struct<T>(schema.fields), nullCount: 0, children });\n        super(schema, data);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector.js';\nimport { Data, makeData } from '../data.js';\nimport { Struct, TypeMap } from '../type.js';\nimport { Schema, Field } from '../schema.js';\nimport { RecordBatch } from '../recordbatch.js';\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends TypeMap = any>(schema: Schema<T>, vecs: Vector<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v.data.concat()));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends TypeMap = any>(schema: Schema<T>, cols: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batches = [] as Data<Struct<T>>[];\n    const memo = { numBatches: cols.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i = -1;\n    const numColumns = cols.length;\n    let child: Data<T[keyof T]>, children: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            children[i] = child = cols[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (Number.isFinite(batchLength)) {\n            children = distributeChildren(fields, batchLength, children, cols, memo);\n            if (batchLength > 0) {\n                batches[numBatches++] = makeData({\n                    type: new Struct(fields),\n                    length: batchLength,\n                    nullCount: 0,\n                    children: children.slice()\n                });\n            }\n        }\n    }\n\n    return [\n        schema = schema.assign(fields),\n        batches.map((data) => new RecordBatch(schema, data))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildren<T extends TypeMap = any>(\n    fields: Field<T[keyof T]>[],\n    batchLength: number,\n    children: Data<T[keyof T]>[],\n    columns: Data<T[keyof T]>[][],\n    memo: { numBatches: number }\n) {\n    const nullBitmapSize = ((batchLength + 63) & ~63) >> 3;\n    for (let i = -1, n = columns.length; ++i < n;) {\n        const child = children[i];\n        const length = child?.length;\n        if (length >= batchLength) {\n            if (length === batchLength) {\n                children[i] = child;\n            } else {\n                children[i] = child.slice(0, batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(\n                    child.slice(batchLength, length - batchLength)\n                ));\n            }\n        } else {\n            const field = fields[i];\n            fields[i] = field.clone({ nullable: true });\n            children[i] = child?._changeLengthAndBackfillNullBitmap(batchLength) ?? makeData({\n                type: field.type,\n                length: batchLength,\n                nullCount: batchLength,\n                nullBitmap: new Uint8Array(nullBitmapSize)\n            }) as Data<T[keyof T]>;\n        }\n    }\n    return children;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Type } from './enum.js';\nimport { Data, makeData } from './data.js';\nimport { vectorFromArray } from './factories.js';\nimport { makeVector, Vector } from './vector.js';\nimport { Field, Schema } from './schema.js';\nimport { DataType, Null, Struct, TypeMap } from './type.js';\nimport { compareSchemas } from './visitor/typecomparator.js';\nimport { distributeVectorsIntoRecordBatches } from './util/recordbatch.js';\n\nimport {\n    isChunkedValid,\n    computeChunkOffsets,\n    computeChunkNullCounts,\n    wrapChunkedCall1,\n    wrapChunkedCall2,\n    wrapChunkedIndexOf,\n    sliceChunks,\n} from './util/chunk.js';\n\nimport { instance as getVisitor } from './visitor/get.js';\nimport { instance as setVisitor } from './visitor/set.js';\nimport { instance as indexOfVisitor } from './visitor/indexof.js';\nimport { instance as iteratorVisitor } from './visitor/iterator.js';\nimport { instance as byteLengthVisitor } from './visitor/bytelength.js';\n\nimport { DataProps } from './data.js';\nimport { clampRange } from './util/vector.js';\nimport { ArrayDataType, BigIntArray, TypedArray, TypedArrayDataType } from './interfaces.js';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch.js';\n\n/** @ignore */\nexport interface Table<T extends TypeMap = any> {\n    ///\n    // Virtual properties for the TypeScript compiler.\n    // These do not exist at runtime.\n    ///\n    readonly TType: Struct<T>;\n    readonly TArray: Struct<T>['TArray'];\n    readonly TValue: Struct<T>['TValue'];\n\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable\n     */\n    [Symbol.isConcatSpreadable]: true;\n}\n\n/**\n * Tables are collections of {@link Vector}s and have a {@link Schema}. Use the convenience methods {@link makeTable}\n * or {@link tableFromArrays} to create a table in JavaScript. To create a table from the IPC format, use\n * {@link tableFromIPC}.\n */\nexport class Table<T extends TypeMap = any> {\n\n    constructor();\n    constructor(batches: Iterable<RecordBatch<T>>);\n    constructor(...batches: readonly RecordBatch<T>[]);\n    constructor(...columns: { [P in keyof T]: Vector<T[P]> }[]);\n    constructor(...columns: { [P in keyof T]: Data<T[P]> | DataProps<T[P]> }[]);\n    constructor(schema: Schema<T>, data?: RecordBatch<T> | RecordBatch<T>[]);\n    constructor(schema: Schema<T>, data?: RecordBatch<T> | RecordBatch<T>[], offsets?: Uint32Array);\n    constructor(...args: any[]) {\n\n        if (args.length === 0) {\n            this.batches = [];\n            this.schema = new Schema([]);\n            this._offsets = [0];\n            return this;\n        }\n\n        let schema: Schema<T> | undefined;\n        let offsets: Uint32Array | number[] | undefined;\n\n        if (args[0] instanceof Schema) {\n            schema = args.shift() as Schema<T>;\n        }\n\n        if (args[args.length - 1] instanceof Uint32Array) {\n            offsets = args.pop();\n        }\n\n        const unwrap = (x: any): RecordBatch<T>[] => {\n            if (x) {\n                if (x instanceof RecordBatch) {\n                    return [x];\n                } else if (x instanceof Table) {\n                    return x.batches;\n                } else if (x instanceof Data) {\n                    if (x.type instanceof Struct) {\n                        return [new RecordBatch(new Schema(x.type.children), x)];\n                    }\n                } else if (Array.isArray(x)) {\n                    return x.flatMap(v => unwrap(v));\n                } else if (typeof x[Symbol.iterator] === 'function') {\n                    return [...x].flatMap(v => unwrap(v));\n                } else if (typeof x === 'object') {\n                    const keys = Object.keys(x) as (keyof T)[];\n                    const vecs = keys.map((k) => new Vector([x[k]]));\n                    const schema = new Schema(keys.map((k, i) => new Field(String(k), vecs[i].type)));\n                    const [, batches] = distributeVectorsIntoRecordBatches(schema, vecs);\n                    return batches.length === 0 ? [new RecordBatch(x)] : batches;\n                }\n            }\n            return [];\n        };\n\n        const batches = args.flatMap(v => unwrap(v));\n\n        schema = schema ?? batches[0]?.schema ?? new Schema([]);\n\n        if (!(schema instanceof Schema)) {\n            throw new TypeError('Table constructor expects a [Schema, RecordBatch[]] pair.');\n        }\n\n        for (const batch of batches) {\n            if (!(batch instanceof RecordBatch)) {\n                throw new TypeError('Table constructor expects a [Schema, RecordBatch[]] pair.');\n            }\n            if (!compareSchemas(schema, batch.schema)) {\n                throw new TypeError('Table and inner RecordBatch schemas must be equivalent.');\n            }\n        }\n\n        this.schema = schema;\n        this.batches = batches;\n        this._offsets = offsets ?? computeChunkOffsets(this.data);\n    }\n\n    declare protected _offsets: Uint32Array | number[];\n    declare protected _nullCount: number;\n\n    declare public readonly schema: Schema<T>;\n\n    /**\n     * The contiguous {@link RecordBatch `RecordBatch`} chunks of the Table rows.\n     */\n    declare public readonly batches: RecordBatch<T>[];\n\n    /**\n     * The contiguous {@link RecordBatch `RecordBatch`} chunks of the Table rows.\n     */\n    public get data() { return this.batches.map(({ data }) => data); }\n\n    /**\n     * The number of columns in this Table.\n     */\n    public get numCols() { return this.schema.fields.length; }\n\n    /**\n     * The number of rows in this Table.\n     */\n    public get numRows() {\n        return this.data.reduce((numRows, data) => numRows + data.length, 0);\n    }\n\n    /**\n     * The number of null rows in this Table.\n     */\n    public get nullCount() {\n        if (this._nullCount === -1) {\n            this._nullCount = computeChunkNullCounts(this.data);\n        }\n        return this._nullCount;\n    }\n\n    /**\n     * Check whether an element is null.\n     *\n     * @param index The index at which to read the validity bitmap.\n     */\n    // @ts-ignore\n    public isValid(index: number): boolean { return false; }\n\n    /**\n     * Get an element value by position.\n     *\n     * @param index The index of the element to read.\n     */\n    // @ts-ignore\n    public get(index: number): Struct<T>['TValue'] | null { return null; }\n\n    /**\n     * Set an element value by position.\n     *\n     * @param index The index of the element to write.\n     * @param value The value to set.\n     */\n    // @ts-ignore\n    public set(index: number, value: Struct<T>['TValue'] | null): void { return; }\n\n    /**\n     * Retrieve the index of the first occurrence of a value in an Vector.\n     *\n     * @param element The value to locate in the Vector.\n     * @param offset The index at which to begin the search. If offset is omitted, the search starts at index 0.\n     */\n    // @ts-ignore\n    public indexOf(element: Struct<T>['TValue'], offset?: number): number { return -1; }\n\n    /**\n     * Get the size in bytes of an element by index.\n     * @param index The index at which to get the byteLength.\n     */\n    // @ts-ignore\n    public getByteLength(index: number): number { return 0; }\n\n    /**\n     * Iterator for rows in this Table.\n     */\n    public [Symbol.iterator]() {\n        if (this.batches.length > 0) {\n            return iteratorVisitor.visit(new Vector(this.data)) as IterableIterator<Struct<T>['TValue']>;\n        }\n        return (new Array(0))[Symbol.iterator]();\n    }\n\n    /**\n     * Return a JavaScript Array of the Table rows.\n     *\n     * @returns An Array of Table rows.\n     */\n    public toArray() {\n        return [...this];\n    }\n\n    /**\n     * Returns a string representation of the Table rows.\n     *\n     * @returns A string representation of the Table rows.\n     */\n    public toString() {\n        return `[\\n  ${this.toArray().join(',\\n  ')}\\n]`;\n    }\n\n    /**\n     * Combines two or more Tables of the same schema.\n     *\n     * @param others Additional Tables to add to the end of this Tables.\n     */\n    public concat(...others: Table<T>[]) {\n        const schema = this.schema;\n        const data = this.data.concat(others.flatMap(({ data }) => data));\n        return new Table(schema, data.map((data) => new RecordBatch(schema, data)));\n    }\n\n    /**\n     * Return a zero-copy sub-section of this Table.\n     *\n     * @param begin The beginning of the specified portion of the Table.\n     * @param end The end of the specified portion of the Table. This is exclusive of the element at the index 'end'.\n     */\n    public slice(begin?: number, end?: number): Table<T> {\n        const schema = this.schema;\n        [begin, end] = clampRange({ length: this.numRows }, begin, end);\n        const data = sliceChunks(this.data, this._offsets, begin, end);\n        return new Table(schema, data.map((chunk) => new RecordBatch(schema, chunk)));\n    }\n\n    /**\n     * Returns a child Vector by name, or null if this Vector has no child with the given name.\n     *\n     * @param name The name of the child to retrieve.\n     */\n    public getChild<P extends keyof T>(name: P) {\n        return this.getChildAt<T[P]>(this.schema.fields.findIndex((f) => f.name === name));\n    }\n\n    /**\n     * Returns a child Vector by index, or null if this Vector has no child at the supplied index.\n     *\n     * @param index The index of the child to retrieve.\n     */\n    public getChildAt<R extends T[keyof T] = any>(index: number): Vector<R> | null {\n        if (index > -1 && index < this.schema.fields.length) {\n            const data = this.data.map((data) => data.children[index] as Data<R>);\n            if (data.length === 0) {\n                const { type } = this.schema.fields[index] as Field<R>;\n                const empty = makeData<R>({ type, length: 0, nullCount: 0 });\n                data.push(empty._changeLengthAndBackfillNullBitmap(this.numRows));\n            }\n            return new Vector(data);\n        }\n        return null;\n    }\n\n    /**\n     * Sets a child Vector by name.\n     *\n     * @param name The name of the child to overwrite.\n     * @returns A new Table with the supplied child for the specified name.\n     */\n    public setChild<P extends keyof T, R extends DataType>(name: P, child: Vector<R>) {\n        return this.setChildAt(this.schema.fields?.findIndex((f) => f.name === name), child) as Table<T & { [K in P]: R }>;\n    }\n\n    /**\n     * Sets a child Vector by index.\n     *\n     * @param index The index of the child to overwrite.\n     * @returns A new Table with the supplied child at the specified index.\n     */\n    public setChildAt(index: number, child?: null): Table;\n    public setChildAt<R extends DataType = any>(index: number, child: Vector<R>): Table;\n    public setChildAt(index: number, child: any) {\n        let schema: Schema = this.schema;\n        let batches: RecordBatch[] = [...this.batches];\n        if (index > -1 && index < this.numCols) {\n            if (!child) {\n                child = new Vector([makeData({ type: new Null, length: this.numRows })]);\n            }\n            const fields = schema.fields.slice() as Field<any>[];\n            const field = fields[index].clone({ type: child.type });\n            const children = this.schema.fields.map((_, i) => this.getChildAt(i)!);\n            [fields[index], children[index]] = [field, child];\n            [schema, batches] = distributeVectorsIntoRecordBatches(schema, children);\n        }\n        return new Table(schema, batches);\n    }\n\n    /**\n     * Construct a new Table containing only specified columns.\n     *\n     * @param columnNames Names of columns to keep.\n     * @returns A new Table of columns matching the specified names.\n     */\n    public select<K extends keyof T = any>(columnNames: K[]) {\n        const nameToIndex = this.schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n\n    /**\n     * Construct a new Table containing only columns at the specified indices.\n     *\n     * @param columnIndices Indices of columns to keep.\n     * @returns A new Table of columns at the specified indices.\n     */\n    public selectAt<K extends T[keyof T] = any>(columnIndices: number[]) {\n        const schema = this.schema.selectAt(columnIndices);\n        const data = this.batches.map((batch) => batch.selectAt(columnIndices));\n        return new Table<{ [key: string]: K }>(schema, data);\n    }\n\n    public assign<R extends TypeMap = any>(other: Table<R>) {\n\n        const fields = this.schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this.schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_, i) => [i, oldToNew[i]]).map(([i, j]) =>\n                (j === undefined ? this.getChildAt(i) : other.getChildAt(j))!),\n            ...indices.map((i) => other.getChildAt(i)!)\n        ].filter(Boolean) as Vector<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n\n    // Initialize this static property via an IIFE so bundlers don't tree-shake\n    // out this logic, but also so we're still compliant with `\"sideEffects\": false`\n    protected static [Symbol.toStringTag] = ((proto: Table) => {\n        (proto as any).schema = null;\n        (proto as any).batches = [];\n        (proto as any)._offsets = new Uint32Array([0]);\n        (proto as any)._nullCount = -1;\n        (proto as any)[Symbol.isConcatSpreadable] = true;\n        (proto as any)['isValid'] = wrapChunkedCall1(isChunkedValid);\n        (proto as any)['get'] = wrapChunkedCall1(getVisitor.getVisitFn(Type.Struct));\n        (proto as any)['set'] = wrapChunkedCall2(setVisitor.getVisitFn(Type.Struct));\n        (proto as any)['indexOf'] = wrapChunkedIndexOf(indexOfVisitor.getVisitFn(Type.Struct));\n        (proto as any)['getByteLength'] = wrapChunkedCall1(byteLengthVisitor.getVisitFn(Type.Struct));\n        return 'Table';\n    })(Table.prototype);\n}\n\n\ntype VectorsMap<T extends TypeMap> = { [P in keyof T]: Vector<T[P]> };\n\n/**\n * Creates a new Table from an object of typed arrays.\n *\n*  @example\n * ```ts\n * const table = makeTable({\n *   a: new Int8Array([1, 2, 3]),\n * })\n * ```\n *\n * @param input Input an object of typed arrays.\n * @returns A new Table.\n */\nexport function makeTable<I extends Record<string | number | symbol, TypedArray>>(input: I): Table<{ [P in keyof I]: TypedArrayDataType<I[P]> }> {\n    type T = { [P in keyof I]: TypedArrayDataType<I[P]> };\n    const vecs = {} as VectorsMap<T>;\n    const inputs = Object.entries(input) as [keyof I, I[keyof I]][];\n    for (const [key, col] of inputs) {\n        vecs[key] = makeVector(col);\n    }\n    return new Table<T>(vecs);\n}\n\n/**\n * Creates a new Table from an object of typed arrays or JavaScript arrays.\n *\n *  @example\n * ```ts\n * const table = tableFromArrays({\n *   a: [1, 2, 3],\n *   b: new Int8Array([1, 2, 3]),\n * })\n * ```\n *\n * @param input Input an object of typed arrays or JavaScript arrays.\n * @returns A new Table.\n */\nexport function tableFromArrays<I extends Record<string | number | symbol, TypedArray | BigIntArray | readonly unknown[]>>(input: I): Table<{ [P in keyof I]: ArrayDataType<I[P]> }> {\n    type T = { [P in keyof I]: ArrayDataType<I[P]> };\n    const vecs = {} as VectorsMap<T>;\n    const inputs = Object.entries(input) as [keyof I, I[keyof I]][];\n    for (const [key, col] of inputs) {\n        vecs[key] = vectorFromArray(col);\n    }\n    return new Table<T>(vecs);\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class Block {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Block {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\n/**\n * Index to the start of the RecordBlock (note this is past the Message header)\n */\noffset():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos);\n}\n\n/**\n * Length of the metadata\n */\nmetaDataLength():number {\n  return this.bb!.readInt32(this.bb_pos + 8);\n}\n\n/**\n * Length of the data (this is aligned so there can be a gap between this and\n * the metadata).\n */\nbodyLength():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos + 16);\n}\n\nstatic sizeOf():number {\n  return 24;\n}\n\nstatic createBlock(builder:flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long):flatbuffers.Offset {\n  builder.prep(8, 24);\n  builder.writeInt64(bodyLength);\n  builder.pad(4);\n  builder.writeInt32(metaDataLength);\n  builder.writeInt64(offset);\n  return builder.offset();\n}\n\n}\n","export const SIZEOF_SHORT = 2;\r\nexport const SIZEOF_INT = 4;\r\nexport const FILE_IDENTIFIER_LENGTH = 4;\r\nexport const SIZE_PREFIX_LENGTH = 4;\r\n","export const int32 = new Int32Array(2);\r\nexport const float32 = new Float32Array(int32.buffer);\r\nexport const float64 = new Float64Array(int32.buffer);\r\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\r\n","export function createLong(low, high) {\r\n    return Long.create(low, high);\r\n}\r\nexport class Long {\r\n    constructor(low, high) {\r\n        this.low = low | 0;\r\n        this.high = high | 0;\r\n    }\r\n    static create(low, high) {\r\n        // Special-case zero to avoid GC overhead for default values\r\n        return low == 0 && high == 0 ? Long.ZERO : new Long(low, high);\r\n    }\r\n    toFloat64() {\r\n        return (this.low >>> 0) + this.high * 0x100000000;\r\n    }\r\n    equals(other) {\r\n        return this.low == other.low && this.high == other.high;\r\n    }\r\n}\r\nLong.ZERO = new Long(0, 0);\r\n","export var Encoding;\r\n(function (Encoding) {\r\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\r\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\r\n})(Encoding || (Encoding = {}));\r\n","// automatically generated by the FlatBuffers compiler, do not modify\n\n/**\n * Logical types, vector layouts, and schemas\n * Format Version History.\n * Version 1.0 - Forward and backwards compatibility guaranteed.\n * Version 1.1 - Add Decimal256 (No format release).\n * Version 1.2 (Pending)- Add Interval MONTH_DAY_NANO\n */\nexport enum MetadataVersion{\n  /**\n   * 0.1.0 (October 2016).\n   */\n  V1 = 0,\n\n  /**\n   * 0.2.0 (February 2017). Non-backwards compatible with V1.\n   */\n  V2 = 1,\n\n  /**\n   * 0.3.0 -> 0.7.1 (May - December 2017). Non-backwards compatible with V2.\n   */\n  V3 = 2,\n\n  /**\n   * >= 0.8.0 (December 2017). Non-backwards compatible with V3.\n   */\n  V4 = 3,\n\n  /**\n   * >= 1.0.0 (July 2020. Backwards compatible with V4 (V5 readers can read V4\n   * metadata and IPC messages). Implementations are recommended to provide a\n   * V4 compatibility mode with V5 format changes disabled.\n   *\n   * Incompatible changes between V4 and V5:\n   * - Union buffer layout has changed. In V5, Unions don't have a validity\n   *   bitmap buffer.\n   */\n  V5 = 4\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n */\nexport enum Endianness{\n  Little = 0,\n  Big = 1\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n * Maintained for forwards compatibility, in the future\n * Dictionaries might be explicit maps between integers and values\n * allowing for non-contiguous index values\n */\nexport enum DictionaryKind{\n  DenseArray = 0\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { Binary } from './binary.js';\nimport { Bool } from './bool.js';\nimport { Date } from './date.js';\nimport { Decimal } from './decimal.js';\nimport { Duration } from './duration.js';\nimport { FixedSizeBinary } from './fixed-size-binary.js';\nimport { FixedSizeList } from './fixed-size-list.js';\nimport { FloatingPoint } from './floating-point.js';\nimport { Int } from './int.js';\nimport { Interval } from './interval.js';\nimport { LargeBinary } from './large-binary.js';\nimport { LargeList } from './large-list.js';\nimport { LargeUtf8 } from './large-utf8.js';\nimport { List } from './list.js';\nimport { Map } from './map.js';\nimport { Null } from './null.js';\nimport { Struct_ } from './struct_.js';\nimport { Time } from './time.js';\nimport { Timestamp } from './timestamp.js';\nimport { Union } from './union.js';\nimport { Utf8 } from './utf8.js';\n\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n */\nexport enum Type{\n  NONE = 0,\n  Null = 1,\n  Int = 2,\n  FloatingPoint = 3,\n  Binary = 4,\n  Utf8 = 5,\n  Bool = 6,\n  Decimal = 7,\n  Date = 8,\n  Time = 9,\n  Timestamp = 10,\n  Interval = 11,\n  List = 12,\n  Struct_ = 13,\n  Union = 14,\n  FixedSizeBinary = 15,\n  FixedSizeList = 16,\n  Map = 17,\n  Duration = 18,\n  LargeBinary = 19,\n  LargeUtf8 = 20,\n  LargeList = 21\n}\n\nexport function unionToType(\n  type: Type,\n  accessor: (obj:Binary|Bool|Date|Decimal|Duration|FixedSizeBinary|FixedSizeList|FloatingPoint|Int|Interval|LargeBinary|LargeList|LargeUtf8|List|Map|Null|Struct_|Time|Timestamp|Union|Utf8) => Binary|Bool|Date|Decimal|Duration|FixedSizeBinary|FixedSizeList|FloatingPoint|Int|Interval|LargeBinary|LargeList|LargeUtf8|List|Map|Null|Struct_|Time|Timestamp|Union|Utf8|null\n): Binary|Bool|Date|Decimal|Duration|FixedSizeBinary|FixedSizeList|FloatingPoint|Int|Interval|LargeBinary|LargeList|LargeUtf8|List|Map|Null|Struct_|Time|Timestamp|Union|Utf8|null {\n  switch(Type[type]) {\n    case 'NONE': return null;\n    case 'Null': return accessor(new Null())! as Null;\n    case 'Int': return accessor(new Int())! as Int;\n    case 'FloatingPoint': return accessor(new FloatingPoint())! as FloatingPoint;\n    case 'Binary': return accessor(new Binary())! as Binary;\n    case 'Utf8': return accessor(new Utf8())! as Utf8;\n    case 'Bool': return accessor(new Bool())! as Bool;\n    case 'Decimal': return accessor(new Decimal())! as Decimal;\n    case 'Date': return accessor(new Date())! as Date;\n    case 'Time': return accessor(new Time())! as Time;\n    case 'Timestamp': return accessor(new Timestamp())! as Timestamp;\n    case 'Interval': return accessor(new Interval())! as Interval;\n    case 'List': return accessor(new List())! as List;\n    case 'Struct_': return accessor(new Struct_())! as Struct_;\n    case 'Union': return accessor(new Union())! as Union;\n    case 'FixedSizeBinary': return accessor(new FixedSizeBinary())! as FixedSizeBinary;\n    case 'FixedSizeList': return accessor(new FixedSizeList())! as FixedSizeList;\n    case 'Map': return accessor(new Map())! as Map;\n    case 'Duration': return accessor(new Duration())! as Duration;\n    case 'LargeBinary': return accessor(new LargeBinary())! as LargeBinary;\n    case 'LargeUtf8': return accessor(new LargeUtf8())! as LargeUtf8;\n    case 'LargeList': return accessor(new LargeList())! as LargeList;\n    default: return null;\n  }\n}\n\nexport function unionListToType(\n  type: Type,\n  accessor: (index: number, obj:Binary|Bool|Date|Decimal|Duration|FixedSizeBinary|FixedSizeList|FloatingPoint|Int|Interval|LargeBinary|LargeList|LargeUtf8|List|Map|Null|Struct_|Time|Timestamp|Union|Utf8) => Binary|Bool|Date|Decimal|Duration|FixedSizeBinary|FixedSizeList|FloatingPoint|Int|Interval|LargeBinary|LargeList|LargeUtf8|List|Map|Null|Struct_|Time|Timestamp|Union|Utf8|null,\n  index: number\n): Binary|Bool|Date|Decimal|Duration|FixedSizeBinary|FixedSizeList|FloatingPoint|Int|Interval|LargeBinary|LargeList|LargeUtf8|List|Map|Null|Struct_|Time|Timestamp|Union|Utf8|null {\n  switch(Type[type]) {\n    case 'NONE': return null;\n    case 'Null': return accessor(index, new Null())! as Null;\n    case 'Int': return accessor(index, new Int())! as Int;\n    case 'FloatingPoint': return accessor(index, new FloatingPoint())! as FloatingPoint;\n    case 'Binary': return accessor(index, new Binary())! as Binary;\n    case 'Utf8': return accessor(index, new Utf8())! as Utf8;\n    case 'Bool': return accessor(index, new Bool())! as Bool;\n    case 'Decimal': return accessor(index, new Decimal())! as Decimal;\n    case 'Date': return accessor(index, new Date())! as Date;\n    case 'Time': return accessor(index, new Time())! as Time;\n    case 'Timestamp': return accessor(index, new Timestamp())! as Timestamp;\n    case 'Interval': return accessor(index, new Interval())! as Interval;\n    case 'List': return accessor(index, new List())! as List;\n    case 'Struct_': return accessor(index, new Struct_())! as Struct_;\n    case 'Union': return accessor(index, new Union())! as Union;\n    case 'FixedSizeBinary': return accessor(index, new FixedSizeBinary())! as FixedSizeBinary;\n    case 'FixedSizeList': return accessor(index, new FixedSizeList())! as FixedSizeList;\n    case 'Map': return accessor(index, new Map())! as Map;\n    case 'Duration': return accessor(index, new Duration())! as Duration;\n    case 'LargeBinary': return accessor(index, new LargeBinary())! as LargeBinary;\n    case 'LargeUtf8': return accessor(index, new LargeUtf8())! as LargeUtf8;\n    case 'LargeList': return accessor(index, new LargeList())! as LargeList;\n    default: return null;\n  }\n}\n\n","import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils\";\r\nimport { Encoding } from \"./encoding\";\r\nexport class ByteBuffer {\r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(bytes_) {\r\n        this.bytes_ = bytes_;\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size) {\r\n        return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n    clear() {\r\n        this.position_ = 0;\r\n    }\r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes() {\r\n        return this.bytes_;\r\n    }\r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position() {\r\n        return this.position_;\r\n    }\r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position) {\r\n        this.position_ = position;\r\n    }\r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity() {\r\n        return this.bytes_.length;\r\n    }\r\n    readInt8(offset) {\r\n        return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n    readUint8(offset) {\r\n        return this.bytes_[offset];\r\n    }\r\n    readInt16(offset) {\r\n        return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n    readUint16(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n    readInt32(offset) {\r\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n    readUint32(offset) {\r\n        return this.readInt32(offset) >>> 0;\r\n    }\r\n    readInt64(offset) {\r\n        return new Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n    readUint64(offset) {\r\n        return new Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n    readFloat32(offset) {\r\n        int32[0] = this.readInt32(offset);\r\n        return float32[0];\r\n    }\r\n    readFloat64(offset) {\r\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n        return float64[0];\r\n    }\r\n    writeInt8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeUint8(offset, value) {\r\n        this.bytes_[offset] = value;\r\n    }\r\n    writeInt16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeUint16(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n    writeInt32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeUint32(offset, value) {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n    writeInt64(offset, value) {\r\n        this.writeInt32(offset, value.low);\r\n        this.writeInt32(offset + 4, value.high);\r\n    }\r\n    writeUint64(offset, value) {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n    writeFloat32(offset, value) {\r\n        float32[0] = value;\r\n        this.writeInt32(offset, int32[0]);\r\n    }\r\n    writeFloat64(offset, value) {\r\n        float64[0] = value;\r\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier() {\r\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n            FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n        }\r\n        let result = \"\";\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos, vtable_offset) {\r\n        const vtable = bb_pos - this.readInt32(bb_pos);\r\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t, offset) {\r\n        t.bb_pos = offset + this.readInt32(offset);\r\n        t.bb = this;\r\n        return t;\r\n    }\r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset, opt_encoding) {\r\n        offset += this.readInt32(offset);\r\n        const length = this.readInt32(offset);\r\n        let result = '';\r\n        let i = 0;\r\n        offset += SIZEOF_INT;\r\n        if (opt_encoding === Encoding.UTF8_BYTES) {\r\n            return this.bytes_.subarray(offset, offset + length);\r\n        }\r\n        while (i < length) {\r\n            let codePoint;\r\n            // Decode UTF-8\r\n            const a = this.readUint8(offset + i++);\r\n            if (a < 0xC0) {\r\n                codePoint = a;\r\n            }\r\n            else {\r\n                const b = this.readUint8(offset + i++);\r\n                if (a < 0xE0) {\r\n                    codePoint =\r\n                        ((a & 0x1F) << 6) |\r\n                            (b & 0x3F);\r\n                }\r\n                else {\r\n                    const c = this.readUint8(offset + i++);\r\n                    if (a < 0xF0) {\r\n                        codePoint =\r\n                            ((a & 0x0F) << 12) |\r\n                                ((b & 0x3F) << 6) |\r\n                                (c & 0x3F);\r\n                    }\r\n                    else {\r\n                        const d = this.readUint8(offset + i++);\r\n                        codePoint =\r\n                            ((a & 0x07) << 18) |\r\n                                ((b & 0x3F) << 12) |\r\n                                ((c & 0x3F) << 6) |\r\n                                (d & 0x3F);\r\n                    }\r\n                }\r\n            }\r\n            // Encode UTF-16\r\n            if (codePoint < 0x10000) {\r\n                result += String.fromCharCode(codePoint);\r\n            }\r\n            else {\r\n                codePoint -= 0x10000;\r\n                result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\r\n     * if a string then return a new one\r\n     *\r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o, offset) {\r\n        if (typeof o === 'string') {\r\n            return this.__string(offset);\r\n        }\r\n        return this.__union(o, offset);\r\n    }\r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset) {\r\n        return offset + this.readInt32(offset);\r\n    }\r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset) {\r\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset) {\r\n        return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n    __has_identifier(ident) {\r\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n            throw new Error('FlatBuffers: file identifier must be length ' +\r\n                FILE_IDENTIFIER_LENGTH);\r\n        }\r\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            if (listAccessor(i) !== null) {\r\n                ret.push(listAccessor(i));\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor, listLength) {\r\n        const ret = [];\r\n        for (let i = 0; i < listLength; ++i) {\r\n            const val = listAccessor(i);\r\n            if (val !== null) {\r\n                ret.push(val.unpack());\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n","import { ByteBuffer } from \"./byte-buffer\";\r\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nexport class Builder {\r\n    /**\r\n     * Create a FlatBufferBuilder.\r\n     */\r\n    constructor(opt_initial_size) {\r\n        /** Minimum alignment encountered so far. */\r\n        this.minalign = 1;\r\n        /** The vtable for the current table. */\r\n        this.vtable = null;\r\n        /** The amount of fields we're actually using. */\r\n        this.vtable_in_use = 0;\r\n        /** Whether we are currently serializing a table. */\r\n        this.isNested = false;\r\n        /** Starting offset of the current struct/table. */\r\n        this.object_start = 0;\r\n        /** List of offsets of all vtables. */\r\n        this.vtables = [];\r\n        /** For the current vector being built. */\r\n        this.vector_num_elems = 0;\r\n        /** False omits default values from the serialized data */\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n        let initial_size;\r\n        if (!opt_initial_size) {\r\n            initial_size = 1024;\r\n        }\r\n        else {\r\n            initial_size = opt_initial_size;\r\n        }\r\n        /**\r\n         * @type {ByteBuffer}\r\n         * @private\r\n         */\r\n        this.bb = ByteBuffer.allocate(initial_size);\r\n        this.space = initial_size;\r\n    }\r\n    clear() {\r\n        this.bb.clear();\r\n        this.space = this.bb.capacity();\r\n        this.minalign = 1;\r\n        this.vtable = null;\r\n        this.vtable_in_use = 0;\r\n        this.isNested = false;\r\n        this.object_start = 0;\r\n        this.vtables = [];\r\n        this.vector_num_elems = 0;\r\n        this.force_defaults = false;\r\n        this.string_maps = null;\r\n    }\r\n    /**\r\n     * In order to save space, fields that are set to their default value\r\n     * don't get serialized into the buffer. Forcing defaults provides a\r\n     * way to manually disable this optimization.\r\n     *\r\n     * @param forceDefaults true always serializes default values\r\n     */\r\n    forceDefaults(forceDefaults) {\r\n        this.force_defaults = forceDefaults;\r\n    }\r\n    /**\r\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\r\n     * called finish(). The actual data starts at the ByteBuffer's current position,\r\n     * not necessarily at 0.\r\n     */\r\n    dataBuffer() {\r\n        return this.bb;\r\n    }\r\n    /**\r\n     * Get the bytes representing the FlatBuffer. Only call this after you've\r\n     * called finish().\r\n     */\r\n    asUint8Array() {\r\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\r\n    }\r\n    /**\r\n     * Prepare to write an element of `size` after `additional_bytes` have been\r\n     * written, e.g. if you write a string, you need to align such the int length\r\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\r\n     * you need to do is alignment, `additional_bytes` will be 0.\r\n     *\r\n     * @param size This is the of the new element to write\r\n     * @param additional_bytes The padding size\r\n     */\r\n    prep(size, additional_bytes) {\r\n        // Track the biggest thing we've ever aligned to.\r\n        if (size > this.minalign) {\r\n            this.minalign = size;\r\n        }\r\n        // Find the amount of alignment needed such that `size` is properly\r\n        // aligned after `additional_bytes`\r\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\r\n        // Reallocate the buffer if needed.\r\n        while (this.space < align_size + size + additional_bytes) {\r\n            const old_buf_size = this.bb.capacity();\r\n            this.bb = Builder.growByteBuffer(this.bb);\r\n            this.space += this.bb.capacity() - old_buf_size;\r\n        }\r\n        this.pad(align_size);\r\n    }\r\n    pad(byte_size) {\r\n        for (let i = 0; i < byte_size; i++) {\r\n            this.bb.writeInt8(--this.space, 0);\r\n        }\r\n    }\r\n    writeInt8(value) {\r\n        this.bb.writeInt8(this.space -= 1, value);\r\n    }\r\n    writeInt16(value) {\r\n        this.bb.writeInt16(this.space -= 2, value);\r\n    }\r\n    writeInt32(value) {\r\n        this.bb.writeInt32(this.space -= 4, value);\r\n    }\r\n    writeInt64(value) {\r\n        this.bb.writeInt64(this.space -= 8, value);\r\n    }\r\n    writeFloat32(value) {\r\n        this.bb.writeFloat32(this.space -= 4, value);\r\n    }\r\n    writeFloat64(value) {\r\n        this.bb.writeFloat64(this.space -= 8, value);\r\n    }\r\n    /**\r\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int8` to add the the buffer.\r\n     */\r\n    addInt8(value) {\r\n        this.prep(1, 0);\r\n        this.writeInt8(value);\r\n    }\r\n    /**\r\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int16` to add the the buffer.\r\n     */\r\n    addInt16(value) {\r\n        this.prep(2, 0);\r\n        this.writeInt16(value);\r\n    }\r\n    /**\r\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int32` to add the the buffer.\r\n     */\r\n    addInt32(value) {\r\n        this.prep(4, 0);\r\n        this.writeInt32(value);\r\n    }\r\n    /**\r\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `int64` to add the the buffer.\r\n     */\r\n    addInt64(value) {\r\n        this.prep(8, 0);\r\n        this.writeInt64(value);\r\n    }\r\n    /**\r\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float32` to add the the buffer.\r\n     */\r\n    addFloat32(value) {\r\n        this.prep(4, 0);\r\n        this.writeFloat32(value);\r\n    }\r\n    /**\r\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\r\n     * @param value The `float64` to add the the buffer.\r\n     */\r\n    addFloat64(value) {\r\n        this.prep(8, 0);\r\n        this.writeFloat64(value);\r\n    }\r\n    addFieldInt8(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt8(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt16(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt16(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addInt32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldInt64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || !value.equals(defaultValue)) {\r\n            this.addInt64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat32(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat32(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldFloat64(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addFloat64(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    addFieldOffset(voffset, value, defaultValue) {\r\n        if (this.force_defaults || value != defaultValue) {\r\n            this.addOffset(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\r\n     */\r\n    addFieldStruct(voffset, value, defaultValue) {\r\n        if (value != defaultValue) {\r\n            this.nested(value);\r\n            this.slot(voffset);\r\n        }\r\n    }\r\n    /**\r\n     * Structures are always stored inline, they need to be created right\r\n     * where they're used.  You'll get this assertion failure if you\r\n     * created it elsewhere.\r\n     */\r\n    nested(obj) {\r\n        if (obj != this.offset()) {\r\n            throw new Error('FlatBuffers: struct must be serialized inline.');\r\n        }\r\n    }\r\n    /**\r\n     * Should not be creating any other object, string or vector\r\n     * while an object is being constructed\r\n     */\r\n    notNested() {\r\n        if (this.isNested) {\r\n            throw new Error('FlatBuffers: object serialization must not be nested.');\r\n        }\r\n    }\r\n    /**\r\n     * Set the current vtable at `voffset` to the current location in the buffer.\r\n     */\r\n    slot(voffset) {\r\n        if (this.vtable !== null)\r\n            this.vtable[voffset] = this.offset();\r\n    }\r\n    /**\r\n     * @returns Offset relative to the end of the buffer.\r\n     */\r\n    offset() {\r\n        return this.bb.capacity() - this.space;\r\n    }\r\n    /**\r\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\r\n     * the end of the new buffer (since we build the buffer backwards).\r\n     *\r\n     * @param bb The current buffer with the existing data\r\n     * @returns A new byte buffer with the old data copied\r\n     * to it. The data is located at the end of the buffer.\r\n     *\r\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\r\n     * it a uint8Array we need to suppress the type check:\r\n     * @suppress {checkTypes}\r\n     */\r\n    static growByteBuffer(bb) {\r\n        const old_buf_size = bb.capacity();\r\n        // Ensure we don't grow beyond what fits in an int.\r\n        if (old_buf_size & 0xC0000000) {\r\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\r\n        }\r\n        const new_buf_size = old_buf_size << 1;\r\n        const nbb = ByteBuffer.allocate(new_buf_size);\r\n        nbb.setPosition(new_buf_size - old_buf_size);\r\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\r\n        return nbb;\r\n    }\r\n    /**\r\n     * Adds on offset, relative to where it will be written.\r\n     *\r\n     * @param offset The offset to add.\r\n     */\r\n    addOffset(offset) {\r\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\r\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\r\n    }\r\n    /**\r\n     * Start encoding a new object in the buffer.  Users will not usually need to\r\n     * call this directly. The FlatBuffers compiler will generate helper methods\r\n     * that call this method internally.\r\n     */\r\n    startObject(numfields) {\r\n        this.notNested();\r\n        if (this.vtable == null) {\r\n            this.vtable = [];\r\n        }\r\n        this.vtable_in_use = numfields;\r\n        for (let i = 0; i < numfields; i++) {\r\n            this.vtable[i] = 0; // This will push additional elements as needed\r\n        }\r\n        this.isNested = true;\r\n        this.object_start = this.offset();\r\n    }\r\n    /**\r\n     * Finish off writing the object that is under construction.\r\n     *\r\n     * @returns The offset to the object inside `dataBuffer`\r\n     */\r\n    endObject() {\r\n        if (this.vtable == null || !this.isNested) {\r\n            throw new Error('FlatBuffers: endObject called without startObject');\r\n        }\r\n        this.addInt32(0);\r\n        const vtableloc = this.offset();\r\n        // Trim trailing zeroes.\r\n        let i = this.vtable_in_use - 1;\r\n        // eslint-disable-next-line no-empty\r\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\r\n        const trimmed_size = i + 1;\r\n        // Write out the current vtable.\r\n        for (; i >= 0; i--) {\r\n            // Offset relative to the start of the table.\r\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\r\n        }\r\n        const standard_fields = 2; // The fields below:\r\n        this.addInt16(vtableloc - this.object_start);\r\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\r\n        this.addInt16(len);\r\n        // Search for an existing vtable that matches the current one.\r\n        let existing_vtable = 0;\r\n        const vt1 = this.space;\r\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\r\n            const vt2 = this.bb.capacity() - this.vtables[i];\r\n            if (len == this.bb.readInt16(vt2)) {\r\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\r\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\r\n                        continue outer_loop;\r\n                    }\r\n                }\r\n                existing_vtable = this.vtables[i];\r\n                break;\r\n            }\r\n        }\r\n        if (existing_vtable) {\r\n            // Found a match:\r\n            // Remove the current vtable.\r\n            this.space = this.bb.capacity() - vtableloc;\r\n            // Point table to existing vtable.\r\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\r\n        }\r\n        else {\r\n            // No match:\r\n            // Add the location of the current vtable to the list of vtables.\r\n            this.vtables.push(this.offset());\r\n            // Point table to current vtable.\r\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\r\n        }\r\n        this.isNested = false;\r\n        return vtableloc;\r\n    }\r\n    /**\r\n     * Finalize a buffer, poiting to the given `root_table`.\r\n     */\r\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\r\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\r\n        if (opt_file_identifier) {\r\n            const file_identifier = opt_file_identifier;\r\n            this.prep(this.minalign, SIZEOF_INT +\r\n                FILE_IDENTIFIER_LENGTH + size_prefix);\r\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\r\n                throw new Error('FlatBuffers: file identifier must be length ' +\r\n                    FILE_IDENTIFIER_LENGTH);\r\n            }\r\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\r\n                this.writeInt8(file_identifier.charCodeAt(i));\r\n            }\r\n        }\r\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\r\n        this.addOffset(root_table);\r\n        if (size_prefix) {\r\n            this.addInt32(this.bb.capacity() - this.space);\r\n        }\r\n        this.bb.setPosition(this.space);\r\n    }\r\n    /**\r\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\r\n     */\r\n    finishSizePrefixed(root_table, opt_file_identifier) {\r\n        this.finish(root_table, opt_file_identifier, true);\r\n    }\r\n    /**\r\n     * This checks a required field has been set in a given table that has\r\n     * just been constructed.\r\n     */\r\n    requiredField(table, field) {\r\n        const table_start = this.bb.capacity() - table;\r\n        const vtable_start = table_start - this.bb.readInt32(table_start);\r\n        const ok = this.bb.readInt16(vtable_start + field) != 0;\r\n        // If this fails, the caller will show what field needs to be set.\r\n        if (!ok) {\r\n            throw new Error('FlatBuffers: field ' + field + ' must be set');\r\n        }\r\n    }\r\n    /**\r\n     * Start a new array/vector of objects.  Users usually will not call\r\n     * this directly. The FlatBuffers compiler will create a start/end\r\n     * method for vector types in generated code.\r\n     *\r\n     * @param elem_size The size of each element in the array\r\n     * @param num_elems The number of elements in the array\r\n     * @param alignment The alignment of the array\r\n     */\r\n    startVector(elem_size, num_elems, alignment) {\r\n        this.notNested();\r\n        this.vector_num_elems = num_elems;\r\n        this.prep(SIZEOF_INT, elem_size * num_elems);\r\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\r\n    }\r\n    /**\r\n     * Finish off the creation of an array and all its elements. The array must be\r\n     * created with `startVector`.\r\n     *\r\n     * @returns The offset at which the newly created array\r\n     * starts.\r\n     */\r\n    endVector() {\r\n        this.writeInt32(this.vector_num_elems);\r\n        return this.offset();\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\r\n     * already been seen, we return the offset of the already written string\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createSharedString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        if (!this.string_maps) {\r\n            this.string_maps = new Map();\r\n        }\r\n        if (this.string_maps.has(s)) {\r\n            return this.string_maps.get(s);\r\n        }\r\n        const offset = this.createString(s);\r\n        this.string_maps.set(s, offset);\r\n        return offset;\r\n    }\r\n    /**\r\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\r\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\r\n     *\r\n     * @param s The string to encode\r\n     * @return The offset in the buffer where the encoded string starts\r\n     */\r\n    createString(s) {\r\n        if (!s) {\r\n            return 0;\r\n        }\r\n        let utf8;\r\n        if (s instanceof Uint8Array) {\r\n            utf8 = s;\r\n        }\r\n        else {\r\n            utf8 = [];\r\n            let i = 0;\r\n            while (i < s.length) {\r\n                let codePoint;\r\n                // Decode UTF-16\r\n                const a = s.charCodeAt(i++);\r\n                if (a < 0xD800 || a >= 0xDC00) {\r\n                    codePoint = a;\r\n                }\r\n                else {\r\n                    const b = s.charCodeAt(i++);\r\n                    codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\r\n                }\r\n                // Encode UTF-8\r\n                if (codePoint < 0x80) {\r\n                    utf8.push(codePoint);\r\n                }\r\n                else {\r\n                    if (codePoint < 0x800) {\r\n                        utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\r\n                    }\r\n                    else {\r\n                        if (codePoint < 0x10000) {\r\n                            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\r\n                        }\r\n                        else {\r\n                            utf8.push(((codePoint >> 18) & 0x07) | 0xF0, ((codePoint >> 12) & 0x3F) | 0x80);\r\n                        }\r\n                        utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\r\n                    }\r\n                    utf8.push((codePoint & 0x3F) | 0x80);\r\n                }\r\n            }\r\n        }\r\n        this.addInt8(0);\r\n        this.startVector(1, utf8.length, 1);\r\n        this.bb.setPosition(this.space -= utf8.length);\r\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\r\n            bytes[offset++] = utf8[i];\r\n        }\r\n        return this.endVector();\r\n    }\r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low, high) {\r\n        return Long.create(low, high);\r\n    }\r\n    /**\r\n     * A helper function to pack an object\r\n     *\r\n     * @returns offset of obj\r\n     */\r\n    createObjectOffset(obj) {\r\n        if (obj === null) {\r\n            return 0;\r\n        }\r\n        if (typeof obj === 'string') {\r\n            return this.createString(obj);\r\n        }\r\n        else {\r\n            return obj.pack(this);\r\n        }\r\n    }\r\n    /**\r\n     * A helper function to pack a list of object\r\n     *\r\n     * @returns list of offsets of each non null object\r\n     */\r\n    createObjectOffsetList(list) {\r\n        const ret = [];\r\n        for (let i = 0; i < list.length; ++i) {\r\n            const val = list[i];\r\n            if (val !== null) {\r\n                ret.push(this.createObjectOffset(val));\r\n            }\r\n            else {\r\n                throw new Error('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    createStructOffsetList(list, startFunc) {\r\n        startFunc(this, list.length);\r\n        this.createObjectOffsetList(list);\r\n        return this.endVector();\r\n    }\r\n}\r\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n */\nexport class KeyValue {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):KeyValue {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsKeyValue(bb:flatbuffers.ByteBuffer, obj?:KeyValue):KeyValue {\n  return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsKeyValue(bb:flatbuffers.ByteBuffer, obj?:KeyValue):KeyValue {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nkey():string|null\nkey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nkey(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nvalue():string|null\nvalue(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nvalue(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startKeyValue(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, keyOffset, 0);\n}\n\nstatic addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, valueOffset, 0);\n}\n\nstatic endKeyValue(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createKeyValue(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {\n  KeyValue.startKeyValue(builder);\n  KeyValue.addKey(builder, keyOffset);\n  KeyValue.addValue(builder, valueOffset);\n  return KeyValue.endKeyValue(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class Int {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Int {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsInt(bb:flatbuffers.ByteBuffer, obj?:Int):Int {\n  return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsInt(bb:flatbuffers.ByteBuffer, obj?:Int):Int {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Int()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nbitWidth():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\nisSigned():boolean {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n}\n\nstatic startInt(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addBitWidth(builder:flatbuffers.Builder, bitWidth:number) {\n  builder.addFieldInt32(0, bitWidth, 0);\n}\n\nstatic addIsSigned(builder:flatbuffers.Builder, isSigned:boolean) {\n  builder.addFieldInt8(1, +isSigned, +false);\n}\n\nstatic endInt(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createInt(builder:flatbuffers.Builder, bitWidth:number, isSigned:boolean):flatbuffers.Offset {\n  Int.startInt(builder);\n  Int.addBitWidth(builder, bitWidth);\n  Int.addIsSigned(builder, isSigned);\n  return Int.endInt(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { DictionaryKind } from './dictionary-kind.js';\nimport { Int } from './int.js';\n\n\nexport class DictionaryEncoding {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):DictionaryEncoding {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsDictionaryEncoding(bb:flatbuffers.ByteBuffer, obj?:DictionaryEncoding):DictionaryEncoding {\n  return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsDictionaryEncoding(bb:flatbuffers.ByteBuffer, obj?:DictionaryEncoding):DictionaryEncoding {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new DictionaryEncoding()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * The known dictionary id in the application where this data is used. In\n * the file or streaming formats, the dictionary ids are found in the\n * DictionaryBatch messages\n */\nid():flatbuffers.Long {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n}\n\n/**\n * The dictionary indices are constrained to be non-negative integers. If\n * this field is null, the indices must be signed int32. To maximize\n * cross-language compatibility and performance, implementations are\n * recommended to prefer signed integer types over unsigned integer types\n * and to avoid uint64 indices unless they are required by an application.\n */\nindexType(obj?:Int):Int|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Int()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n}\n\n/**\n * By default, dictionaries are not ordered, or the order does not have\n * semantic meaning. In some statistical, applications, dictionary-encoding\n * is used to represent ordered categorical data, and we provide a way to\n * preserve that metadata here\n */\nisOrdered():boolean {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n}\n\ndictionaryKind():DictionaryKind {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : DictionaryKind.DenseArray;\n}\n\nstatic startDictionaryEncoding(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n}\n\nstatic addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {\n  builder.addFieldInt64(0, id, builder.createLong(0, 0));\n}\n\nstatic addIndexType(builder:flatbuffers.Builder, indexTypeOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, indexTypeOffset, 0);\n}\n\nstatic addIsOrdered(builder:flatbuffers.Builder, isOrdered:boolean) {\n  builder.addFieldInt8(2, +isOrdered, +false);\n}\n\nstatic addDictionaryKind(builder:flatbuffers.Builder, dictionaryKind:DictionaryKind) {\n  builder.addFieldInt16(3, dictionaryKind, DictionaryKind.DenseArray);\n}\n\nstatic endDictionaryEncoding(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { DictionaryEncoding } from './dictionary-encoding.js';\nimport { KeyValue } from './key-value.js';\nimport { Type } from './type.js';\n\n\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n */\nexport class Field {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Field {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsField(bb:flatbuffers.ByteBuffer, obj?:Field):Field {\n  return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsField(bb:flatbuffers.ByteBuffer, obj?:Field):Field {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Field()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Name is not required, in i.e. a List\n */\nname():string|null\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nname(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\n/**\n * Whether or not this field can contain nulls. Should be true in general.\n */\nnullable():boolean {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n}\n\ntypeType():Type {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : Type.NONE;\n}\n\n/**\n * This is the type of the decoded value if the field is dictionary encoded.\n */\n// @ts-ignore\ntype<T extends flatbuffers.Table>(obj:any):any|null {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n}\n\n/**\n * Present only if the field is dictionary encoded.\n */\ndictionary(obj?:DictionaryEncoding):DictionaryEncoding|null {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new DictionaryEncoding()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n}\n\n/**\n * children apply only to nested data types like Struct, List and Union. For\n * primitive types children will have length 0.\n */\nchildren(index: number, obj?:Field):Field|null {\n  const offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? (obj || new Field()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\nchildrenLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 14);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\n/**\n * User-defined metadata\n */\ncustomMetadata(index: number, obj?:KeyValue):KeyValue|null {\n  const offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\ncustomMetadataLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 16);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startField(builder:flatbuffers.Builder) {\n  builder.startObject(7);\n}\n\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, nameOffset, 0);\n}\n\nstatic addNullable(builder:flatbuffers.Builder, nullable:boolean) {\n  builder.addFieldInt8(1, +nullable, +false);\n}\n\nstatic addTypeType(builder:flatbuffers.Builder, typeType:Type) {\n  builder.addFieldInt8(2, typeType, Type.NONE);\n}\n\nstatic addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, typeOffset, 0);\n}\n\nstatic addDictionary(builder:flatbuffers.Builder, dictionaryOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, dictionaryOffset, 0);\n}\n\nstatic addChildren(builder:flatbuffers.Builder, childrenOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(5, childrenOffset, 0);\n}\n\nstatic createChildrenVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startChildrenVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic addCustomMetadata(builder:flatbuffers.Builder, customMetadataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(6, customMetadataOffset, 0);\n}\n\nstatic createCustomMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startCustomMetadataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic endField(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { Endianness } from './endianness.js';\nimport { Field } from './field.js';\nimport { KeyValue } from './key-value.js';\n\n\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n */\nexport class Schema {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Schema {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsSchema(bb:flatbuffers.ByteBuffer, obj?:Schema):Schema {\n  return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsSchema(bb:flatbuffers.ByteBuffer, obj?:Schema):Schema {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Schema()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * endianness of the buffer\n * it is Little Endian by default\n * if endianness doesn't match the underlying system then the vectors need to be converted\n */\nendianness():Endianness {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : Endianness.Little;\n}\n\nfields(index: number, obj?:Field):Field|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Field()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\nfieldsLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\ncustomMetadata(index: number, obj?:KeyValue):KeyValue|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\ncustomMetadataLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\n/**\n * Features used in the stream/file.\n */\nfeatures(index: number):flatbuffers.Long|null {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);\n}\n\nfeaturesLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startSchema(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n}\n\nstatic addEndianness(builder:flatbuffers.Builder, endianness:Endianness) {\n  builder.addFieldInt16(0, endianness, Endianness.Little);\n}\n\nstatic addFields(builder:flatbuffers.Builder, fieldsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, fieldsOffset, 0);\n}\n\nstatic createFieldsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startFieldsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic addCustomMetadata(builder:flatbuffers.Builder, customMetadataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, customMetadataOffset, 0);\n}\n\nstatic createCustomMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startCustomMetadataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic addFeatures(builder:flatbuffers.Builder, featuresOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, featuresOffset, 0);\n}\n\nstatic createFeaturesVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {\n  builder.startVector(8, data.length, 8);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addInt64(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startFeaturesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(8, numElems, 8);\n}\n\nstatic endSchema(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic finishSchemaBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n}\n\nstatic finishSizePrefixedSchemaBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, undefined, true);\n}\n\nstatic createSchema(builder:flatbuffers.Builder, endianness:Endianness, fieldsOffset:flatbuffers.Offset, customMetadataOffset:flatbuffers.Offset, featuresOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Schema.startSchema(builder);\n  Schema.addEndianness(builder, endianness);\n  Schema.addFields(builder, fieldsOffset);\n  Schema.addCustomMetadata(builder, customMetadataOffset);\n  Schema.addFeatures(builder, featuresOffset);\n  return Schema.endSchema(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { Block } from './block.js';\nimport { KeyValue } from './key-value.js';\nimport { MetadataVersion } from './metadata-version.js';\nimport { Schema } from './schema.js';\n\n\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n */\nexport class Footer {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Footer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsFooter(bb:flatbuffers.ByteBuffer, obj?:Footer):Footer {\n  return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsFooter(bb:flatbuffers.ByteBuffer, obj?:Footer):Footer {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nversion():MetadataVersion {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : MetadataVersion.V1;\n}\n\nschema(obj?:Schema):Schema|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new Schema()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n}\n\ndictionaries(index: number, obj?:Block):Block|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Block()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n}\n\ndictionariesLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nrecordBatches(index: number, obj?:Block):Block|null {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new Block()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n}\n\nrecordBatchesLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\n/**\n * User-defined metadata\n */\ncustomMetadata(index: number, obj?:KeyValue):KeyValue|null {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\ncustomMetadataLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startFooter(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n}\n\nstatic addVersion(builder:flatbuffers.Builder, version:MetadataVersion) {\n  builder.addFieldInt16(0, version, MetadataVersion.V1);\n}\n\nstatic addSchema(builder:flatbuffers.Builder, schemaOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, schemaOffset, 0);\n}\n\nstatic addDictionaries(builder:flatbuffers.Builder, dictionariesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, dictionariesOffset, 0);\n}\n\nstatic startDictionariesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(24, numElems, 8);\n}\n\nstatic addRecordBatches(builder:flatbuffers.Builder, recordBatchesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, recordBatchesOffset, 0);\n}\n\nstatic startRecordBatchesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(24, numElems, 8);\n}\n\nstatic addCustomMetadata(builder:flatbuffers.Builder, customMetadataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, customMetadataOffset, 0);\n}\n\nstatic createCustomMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startCustomMetadataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic endFooter(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic finishFooterBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n}\n\nstatic finishSizePrefixedFooterBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, undefined, true);\n}\n\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { Block as _Block } from '../../fb/block.js';\nimport { Footer as _Footer } from '../../fb/footer.js';\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\n\nimport { Schema } from '../../schema.js';\nimport { MetadataVersion } from '../../enum.js';\nimport { toUint8Array } from '../../util/buffer.js';\nimport { ArrayBufferViewInput } from '../../util/buffer.js';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        for (const rb of [...footer.recordBatches()].slice().reverse()) {\n            FileBlock.encode(b, rb);\n        }\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        for (const db of [...footer.dictionaryBatches()].slice().reverse()) {\n            FileBlock.encode(b, db);\n        }\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    declare protected _recordBatches: FileBlock[];\n    declare protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n        public version: MetadataVersion = MetadataVersion.V4,\n        recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer.js';\n\nimport { ReadableDOMStreamOptions } from './interfaces.js';\n\ntype Uint8ArrayGenerator = Generator<Uint8Array, null, { cmd: 'peek' | 'read'; size: number }>;\ntype AsyncUint8ArrayGenerator = AsyncGenerator<Uint8Array, null, { cmd: 'peek' | 'read'; size: number }>;\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): Uint8ArrayGenerator {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncUint8ArrayGenerator {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncUint8ArrayGenerator {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncUint8ArrayGenerator {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Uint8ArrayGenerator | AsyncUint8ArrayGenerator>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): Uint8ArrayGenerator {\n\n    let done: boolean | undefined, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any>null);\n\n    // initialize the iterator\n    const it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = Number.isNaN(size - bufferLength) ?\n                it.next() : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return(null!));\n    }\n    return null;\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncUint8ArrayGenerator {\n\n    let done: boolean | undefined, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = (yield <any>null)!);\n\n    // initialize the iterator\n    const it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = Number.isNaN(size - bufferLength)\n                ? await it.next()\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return(new Uint8Array(0)));\n    }\n    return null;\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncUint8ArrayGenerator {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any>null);\n\n    // initialize the reader and lock the stream\n    const it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = Number.isNaN(size - bufferLength)\n                ? await it['read']()\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n    return null;\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private reader: ReadableStreamDefaultReader<T> | null = null;\n\n    constructor(private source: ReadableStream<T>) {\n        this.reader = this.source['getReader']();\n        // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n        // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n        // about why these errors are raised, but I'm sure there's some important spec reason that\n        // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n        // only solution in this case :/\n        this.reader['closed'].catch(() => { });\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => { }));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadValueResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) } as ReadableStreamReadValueResult<Uint8Array>;\n        }\n        const result = await this.reader!.read() as ReadableStreamReadValueResult<any>;\n        !result.done && (result.value = toUint8Array(result));\n        return result;\n    }\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    const handler = (_: any) => resolve([event, _]);\n    let resolve: (value: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncUint8ArrayGenerator {\n\n    const events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any>null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) {\n        yield new Uint8Array(0);\n        return null;\n    }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!Number.isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read']());\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if ((buffer as Uint8Array).byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read']());\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if ((buffer as Uint8Array).byteLength > 0) {\n                    buffers.push(buffer as Uint8Array);\n                    bufferLength += (buffer as Uint8Array).byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    return null;\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any>null;\n        return new Promise<void>((resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e as T || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters.js';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[] };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined; autoAllocateChunkSize?: number; highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    constructor(private _json: ArrowJSONLike) { }\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: StreamPipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>; readable: R }, options?: StreamPipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value: T | PromiseLike<T>) => void; reject: (reason?: any) => void };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`AsyncQueue is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters.js';\nimport { decodeUtf8 } from '../util/utf8.js';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces.js';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer.js';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat.js';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            const buffers = [];\n            let byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    declare private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    declare private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ntype ByteStreamSourceIterator<T> = Generator<T, null, { cmd: 'peek' | 'read'; size?: number | null }>;\n/** @ignore */\ntype AsyncByteStreamSourceIterator<T> = AsyncGenerator<T, null, { cmd: 'peek' | 'read'; size?: number | null }>;\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) { }\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor(protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces.js';\nimport { ByteStream, AsyncByteStream } from './stream.js';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer.js';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer!.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Number.POSITIVE_INFINITY; }\n            this.position = Math.min(size,\n                position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    declare public size: number;\n    public position = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Number.POSITIVE_INFINITY; }\n            let pos = position, offset = 0, bytesRead = 0;\n            const end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            const buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [\n    1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000\n];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor(protected buffer: Uint32Array) { }\n\n    public high(): number { return this.buffer[1]; }\n    public low(): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n    }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof (val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        const out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string | number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        const rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        const rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        // eslint-disable-next-line unicorn/prefer-math-trunc\n        const this_high = this.buffer[1] << 0;\n        // eslint-disable-next-line unicorn/prefer-math-trunc\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof (val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        const out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string | number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        const rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        const rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor(private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        const sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        const high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        const sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        const rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        const rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof (val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        const out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([Number.parseInt(str.slice(posn, posn + group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string | number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data, makeData } from '../data.js';\nimport * as type from '../type.js';\nimport { Field } from '../schema.js';\nimport { Vector } from '../vector.js';\nimport { DataType } from '../type.js';\nimport { Visitor } from '../visitor.js';\nimport { packBools } from '../util/bit.js';\nimport { encodeUtf8 } from '../util/utf8.js';\nimport { Int64, Int128 } from '../util/int.js';\nimport { UnionMode, DateUnit } from '../enum.js';\nimport { toArrayBufferView } from '../util/buffer.js';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message.js';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull<T extends type.Null>(type: T, { length } = this.nextFieldNode()) {\n        return makeData({ type, length });\n    }\n    public visitBool<T extends type.Bool>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitInt<T extends type.Int>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitFloat<T extends type.Float>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitUtf8<T extends type.Utf8>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    public visitBinary<T extends type.Binary>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitDate<T extends type.Date_>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitTimestamp<T extends type.Timestamp>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitTime<T extends type.Time>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitDecimal<T extends type.Decimal>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitList<T extends type.List>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n    public visitStruct<T extends type.Struct>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), children: this.visitMany(type.children) });\n    }\n    public visitUnion<T extends type.Union>(type: T) {\n        return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);\n    }\n    public visitDenseUnion<T extends type.DenseUnion>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), valueOffsets: this.readOffsets(type), children: this.visitMany(type.children) });\n    }\n    public visitSparseUnion<T extends type.SparseUnion>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), children: this.visitMany(type.children) });\n    }\n    public visitDictionary<T extends type.Dictionary>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type.indices), dictionary: this.readDictionary(type) });\n    }\n    public visitInterval<T extends type.Interval>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), 'child': this.visit(type.children[0]) });\n    }\n    public visitMap<T extends type.Map_>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = Number.parseInt(joined.slice(i, i + 2), 16);\n    }\n    return data;\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\n/**\n * Provided for forward compatibility in case we need to support different\n * strategies for compressing the IPC message body (like whole-body\n * compression rather than buffer-level) in the future\n */\nexport enum BodyCompressionMethod{\n  /**\n   * Each constituent buffer is first compressed with the indicated\n   * compressor, and then written with the uncompressed length in the first 8\n   * bytes as a 64-bit little-endian signed integer followed by the compressed\n   * buffer bytes (and then padding as required by the protocol). The\n   * uncompressed length may be set to -1 to indicate that the data that\n   * follows is not compressed, which can be useful for cases where\n   * compression does not yield appreciable savings.\n   */\n  BUFFER = 0\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport enum CompressionType{\n  LZ4_FRAME = 0,\n  ZSTD = 1\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport enum Precision{\n  HALF = 0,\n  SINGLE = 1,\n  DOUBLE = 2\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport enum DateUnit{\n  DAY = 0,\n  MILLISECOND = 1\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport enum TimeUnit{\n  SECOND = 0,\n  MILLISECOND = 1,\n  MICROSECOND = 2,\n  NANOSECOND = 3\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport enum IntervalUnit{\n  YEAR_MONTH = 0,\n  DAY_TIME = 1,\n  MONTH_DAY_NANO = 2\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nexport enum UnionMode{\n  Sparse = 0,\n  Dense = 1\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { DictionaryBatch } from './dictionary-batch.js';\nimport { RecordBatch } from './record-batch.js';\nimport { Schema } from './schema.js';\nimport { SparseTensor } from './sparse-tensor.js';\nimport { Tensor } from './tensor.js';\n\n\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n */\nexport enum MessageHeader{\n  NONE = 0,\n  Schema = 1,\n  DictionaryBatch = 2,\n  RecordBatch = 3,\n  Tensor = 4,\n  SparseTensor = 5\n}\n\nexport function unionToMessageHeader(\n  type: MessageHeader,\n  accessor: (obj:DictionaryBatch|RecordBatch|Schema|SparseTensor|Tensor) => DictionaryBatch|RecordBatch|Schema|SparseTensor|Tensor|null\n): DictionaryBatch|RecordBatch|Schema|SparseTensor|Tensor|null {\n  switch(MessageHeader[type]) {\n    case 'NONE': return null;\n    case 'Schema': return accessor(new Schema())! as Schema;\n    case 'DictionaryBatch': return accessor(new DictionaryBatch())! as DictionaryBatch;\n    case 'RecordBatch': return accessor(new RecordBatch())! as RecordBatch;\n    case 'Tensor': return accessor(new Tensor())! as Tensor;\n    case 'SparseTensor': return accessor(new SparseTensor())! as SparseTensor;\n    default: return null;\n  }\n}\n\nexport function unionListToMessageHeader(\n  type: MessageHeader,\n  accessor: (index: number, obj:DictionaryBatch|RecordBatch|Schema|SparseTensor|Tensor) => DictionaryBatch|RecordBatch|Schema|SparseTensor|Tensor|null,\n  index: number\n): DictionaryBatch|RecordBatch|Schema|SparseTensor|Tensor|null {\n  switch(MessageHeader[type]) {\n    case 'NONE': return null;\n    case 'Schema': return accessor(index, new Schema())! as Schema;\n    case 'DictionaryBatch': return accessor(index, new DictionaryBatch())! as DictionaryBatch;\n    case 'RecordBatch': return accessor(index, new RecordBatch())! as RecordBatch;\n    case 'Tensor': return accessor(index, new Tensor())! as Tensor;\n    case 'SparseTensor': return accessor(index, new SparseTensor())! as SparseTensor;\n    default: return null;\n  }\n}\n\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { BodyCompressionMethod } from './body-compression-method.js';\nimport { CompressionType } from './compression-type.js';\n\n\n/**\n * Optional compression for the memory buffers constituting IPC message\n * bodies. Intended for use with RecordBatch but could be used for other\n * message types\n */\nexport class BodyCompression {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):BodyCompression {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsBodyCompression(bb:flatbuffers.ByteBuffer, obj?:BodyCompression):BodyCompression {\n  return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsBodyCompression(bb:flatbuffers.ByteBuffer, obj?:BodyCompression):BodyCompression {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new BodyCompression()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Compressor library.\n * For LZ4_FRAME, each compressed buffer must consist of a single frame.\n */\ncodec():CompressionType {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : CompressionType.LZ4_FRAME;\n}\n\n/**\n * Indicates the way the record batch body was compressed\n */\nmethod():BodyCompressionMethod {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readInt8(this.bb_pos + offset) : BodyCompressionMethod.BUFFER;\n}\n\nstatic startBodyCompression(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addCodec(builder:flatbuffers.Builder, codec:CompressionType) {\n  builder.addFieldInt8(0, codec, CompressionType.LZ4_FRAME);\n}\n\nstatic addMethod(builder:flatbuffers.Builder, method:BodyCompressionMethod) {\n  builder.addFieldInt8(1, method, BodyCompressionMethod.BUFFER);\n}\n\nstatic endBodyCompression(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createBodyCompression(builder:flatbuffers.Builder, codec:CompressionType, method:BodyCompressionMethod):flatbuffers.Offset {\n  BodyCompression.startBodyCompression(builder);\n  BodyCompression.addCodec(builder, codec);\n  BodyCompression.addMethod(builder, method);\n  return BodyCompression.endBodyCompression(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n */\nexport class Buffer {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Buffer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\n/**\n * The relative offset into the shared memory page where the bytes for this\n * buffer starts\n */\noffset():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos);\n}\n\n/**\n * The absolute length (in bytes) of the memory buffer. The memory is found\n * from offset (inclusive) to offset + length (non-inclusive). When building\n * messages using the encapsulated IPC message, padding bytes may be written\n * after a buffer, but such padding bytes do not need to be accounted for in\n * the size here.\n */\nlength():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos + 8);\n}\n\nstatic sizeOf():number {\n  return 16;\n}\n\nstatic createBuffer(builder:flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long):flatbuffers.Offset {\n  builder.prep(8, 16);\n  builder.writeInt64(length);\n  builder.writeInt64(offset);\n  return builder.offset();\n}\n\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values `[[1, 2, 3], null, [4], [5, 6], null]`\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n */\nexport class FieldNode {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):FieldNode {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\n/**\n * The number of value slots in the Arrow array at this level of a nested\n * tree\n */\nlength():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos);\n}\n\n/**\n * The number of observed nulls. Fields with null_count == 0 may choose not\n * to write their physical validity bitmap out as a materialized buffer,\n * instead setting the length of the bitmap buffer to 0.\n */\nnullCount():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos + 8);\n}\n\nstatic sizeOf():number {\n  return 16;\n}\n\nstatic createFieldNode(builder:flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long):flatbuffers.Offset {\n  builder.prep(8, 16);\n  builder.writeInt64(null_count);\n  builder.writeInt64(length);\n  return builder.offset();\n}\n\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { BodyCompression } from './body-compression.js';\nimport { Buffer } from './buffer.js';\nimport { FieldNode } from './field-node.js';\n\n\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n */\nexport class RecordBatch {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):RecordBatch {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsRecordBatch(bb:flatbuffers.ByteBuffer, obj?:RecordBatch):RecordBatch {\n  return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsRecordBatch(bb:flatbuffers.ByteBuffer, obj?:RecordBatch):RecordBatch {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new RecordBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * number of records / rows. The arrays in the batch should all have this\n * length\n */\nlength():flatbuffers.Long {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n}\n\n/**\n * Nodes correspond to the pre-ordered flattened logical schema\n */\nnodes(index: number, obj?:FieldNode):FieldNode|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new FieldNode()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n}\n\nnodesLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\n/**\n * Buffers correspond to the pre-ordered flattened buffer tree\n *\n * The number of buffers appended to this list depends on the schema. For\n * example, most primitive arrays will have 2 buffers, 1 for the validity\n * bitmap and 1 for the values. For struct arrays, there will only be a\n * single buffer for the validity (nulls) bitmap\n */\nbuffers(index: number, obj?:Buffer):Buffer|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? (obj || new Buffer()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n}\n\nbuffersLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\n/**\n * Optional compression of the message body\n */\ncompression(obj?:BodyCompression):BodyCompression|null {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? (obj || new BodyCompression()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n}\n\nstatic startRecordBatch(builder:flatbuffers.Builder) {\n  builder.startObject(4);\n}\n\nstatic addLength(builder:flatbuffers.Builder, length:flatbuffers.Long) {\n  builder.addFieldInt64(0, length, builder.createLong(0, 0));\n}\n\nstatic addNodes(builder:flatbuffers.Builder, nodesOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, nodesOffset, 0);\n}\n\nstatic startNodesVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(16, numElems, 8);\n}\n\nstatic addBuffers(builder:flatbuffers.Builder, buffersOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, buffersOffset, 0);\n}\n\nstatic startBuffersVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(16, numElems, 8);\n}\n\nstatic addCompression(builder:flatbuffers.Builder, compressionOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(3, compressionOffset, 0);\n}\n\nstatic endRecordBatch(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { RecordBatch } from './record-batch.js';\n\n\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n */\nexport class DictionaryBatch {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):DictionaryBatch {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsDictionaryBatch(bb:flatbuffers.ByteBuffer, obj?:DictionaryBatch):DictionaryBatch {\n  return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsDictionaryBatch(bb:flatbuffers.ByteBuffer, obj?:DictionaryBatch):DictionaryBatch {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new DictionaryBatch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nid():flatbuffers.Long {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n}\n\ndata(obj?:RecordBatch):RecordBatch|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? (obj || new RecordBatch()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n}\n\n/**\n * If isDelta is true the values in the dictionary are to be appended to a\n * dictionary with the indicated id. If isDelta is false this dictionary\n * should replace the existing dictionary.\n */\nisDelta():boolean {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n}\n\nstatic startDictionaryBatch(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n}\n\nstatic addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {\n  builder.addFieldInt64(0, id, builder.createLong(0, 0));\n}\n\nstatic addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, dataOffset, 0);\n}\n\nstatic addIsDelta(builder:flatbuffers.Builder, isDelta:boolean) {\n  builder.addFieldInt8(2, +isDelta, +false);\n}\n\nstatic endDictionaryBatch(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { Precision } from './precision.js';\n\n\nexport class FloatingPoint {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):FloatingPoint {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsFloatingPoint(bb:flatbuffers.ByteBuffer, obj?:FloatingPoint):FloatingPoint {\n  return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsFloatingPoint(bb:flatbuffers.ByteBuffer, obj?:FloatingPoint):FloatingPoint {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new FloatingPoint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nprecision():Precision {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : Precision.HALF;\n}\n\nstatic startFloatingPoint(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addPrecision(builder:flatbuffers.Builder, precision:Precision) {\n  builder.addFieldInt16(0, precision, Precision.HALF);\n}\n\nstatic endFloatingPoint(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createFloatingPoint(builder:flatbuffers.Builder, precision:Precision):flatbuffers.Offset {\n  FloatingPoint.startFloatingPoint(builder);\n  FloatingPoint.addPrecision(builder, precision);\n  return FloatingPoint.endFloatingPoint(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * Exact decimal value represented as an integer value in two's\n * complement. Currently only 128-bit (16-byte) and 256-bit (32-byte) integers\n * are used. The representation uses the endianness indicated\n * in the Schema.\n */\nexport class Decimal {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Decimal {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsDecimal(bb:flatbuffers.ByteBuffer, obj?:Decimal):Decimal {\n  return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsDecimal(bb:flatbuffers.ByteBuffer, obj?:Decimal):Decimal {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Decimal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Total number of decimal digits\n */\nprecision():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\n/**\n * Number of digits after the decimal point \".\"\n */\nscale():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\n/**\n * Number of bits per value. The only accepted widths are 128 and 256.\n * We use bitWidth for consistency with Int::bitWidth.\n */\nbitWidth():number {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 128;\n}\n\nstatic startDecimal(builder:flatbuffers.Builder) {\n  builder.startObject(3);\n}\n\nstatic addPrecision(builder:flatbuffers.Builder, precision:number) {\n  builder.addFieldInt32(0, precision, 0);\n}\n\nstatic addScale(builder:flatbuffers.Builder, scale:number) {\n  builder.addFieldInt32(1, scale, 0);\n}\n\nstatic addBitWidth(builder:flatbuffers.Builder, bitWidth:number) {\n  builder.addFieldInt32(2, bitWidth, 128);\n}\n\nstatic endDecimal(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createDecimal(builder:flatbuffers.Builder, precision:number, scale:number, bitWidth:number):flatbuffers.Offset {\n  Decimal.startDecimal(builder);\n  Decimal.addPrecision(builder, precision);\n  Decimal.addScale(builder, scale);\n  Decimal.addBitWidth(builder, bitWidth);\n  return Decimal.endDecimal(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { DateUnit } from './date-unit.js';\n\n\n/**\n * Date is either a 32-bit or 64-bit signed integer type representing an\n * elapsed time since UNIX epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n */\nexport class Date {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Date {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsDate(bb:flatbuffers.ByteBuffer, obj?:Date):Date {\n  return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsDate(bb:flatbuffers.ByteBuffer, obj?:Date):Date {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Date()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nunit():DateUnit {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : DateUnit.MILLISECOND;\n}\n\nstatic startDate(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addUnit(builder:flatbuffers.Builder, unit:DateUnit) {\n  builder.addFieldInt16(0, unit, DateUnit.MILLISECOND);\n}\n\nstatic endDate(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createDate(builder:flatbuffers.Builder, unit:DateUnit):flatbuffers.Offset {\n  Date.startDate(builder);\n  Date.addUnit(builder, unit);\n  return Date.endDate(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { TimeUnit } from './time-unit.js';\n\n\n/**\n * Time is either a 32-bit or 64-bit signed integer type representing an\n * elapsed time since midnight, stored in either of four units: seconds,\n * milliseconds, microseconds or nanoseconds.\n *\n * The integer `bitWidth` depends on the `unit` and must be one of the following:\n * * SECOND and MILLISECOND: 32 bits\n * * MICROSECOND and NANOSECOND: 64 bits\n *\n * The allowed values are between 0 (inclusive) and 86400 (=24*60*60) seconds\n * (exclusive), adjusted for the time unit (for example, up to 86400000\n * exclusive for the MILLISECOND unit).\n * This definition doesn't allow for leap seconds. Time values from\n * measurements with leap seconds will need to be corrected when ingesting\n * into Arrow (for example by replacing the value 86400 with 86399).\n */\nexport class Time {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Time {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsTime(bb:flatbuffers.ByteBuffer, obj?:Time):Time {\n  return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsTime(bb:flatbuffers.ByteBuffer, obj?:Time):Time {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Time()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nunit():TimeUnit {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : TimeUnit.MILLISECOND;\n}\n\nbitWidth():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n}\n\nstatic startTime(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addUnit(builder:flatbuffers.Builder, unit:TimeUnit) {\n  builder.addFieldInt16(0, unit, TimeUnit.MILLISECOND);\n}\n\nstatic addBitWidth(builder:flatbuffers.Builder, bitWidth:number) {\n  builder.addFieldInt32(1, bitWidth, 32);\n}\n\nstatic endTime(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createTime(builder:flatbuffers.Builder, unit:TimeUnit, bitWidth:number):flatbuffers.Offset {\n  Time.startTime(builder);\n  Time.addUnit(builder, unit);\n  Time.addBitWidth(builder, bitWidth);\n  return Time.endTime(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { TimeUnit } from './time-unit.js';\n\n\n/**\n * Timestamp is a 64-bit signed integer representing an elapsed time since a\n * fixed epoch, stored in either of four units: seconds, milliseconds,\n * microseconds or nanoseconds, and is optionally annotated with a timezone.\n *\n * Timestamp values do not include any leap seconds (in other words, all\n * days are considered 86400 seconds long).\n *\n * Timestamps with a non-empty timezone\n * ------------------------------------\n *\n * If a Timestamp column has a non-empty timezone value, its epoch is\n * 1970-01-01 00:00:00 (January 1st 1970, midnight) in the *UTC* timezone\n * (the Unix epoch), regardless of the Timestamp's own timezone.\n *\n * Therefore, timestamp values with a non-empty timezone correspond to\n * physical points in time together with some additional information about\n * how the data was obtained and/or how to display it (the timezone).\n *\n *   For example, the timestamp value 0 with the timezone string \"Europe/Paris\"\n *   corresponds to \"January 1st 1970, 00h00\" in the UTC timezone, but the\n *   application may prefer to display it as \"January 1st 1970, 01h00\" in\n *   the Europe/Paris timezone (which is the same physical point in time).\n *\n * One consequence is that timestamp values with a non-empty timezone\n * can be compared and ordered directly, since they all share the same\n * well-known point of reference (the Unix epoch).\n *\n * Timestamps with an unset / empty timezone\n * -----------------------------------------\n *\n * If a Timestamp column has no timezone value, its epoch is\n * 1970-01-01 00:00:00 (January 1st 1970, midnight) in an *unknown* timezone.\n *\n * Therefore, timestamp values without a timezone cannot be meaningfully\n * interpreted as physical points in time, but only as calendar / clock\n * indications (\"wall clock time\") in an unspecified timezone.\n *\n *   For example, the timestamp value 0 with an empty timezone string\n *   corresponds to \"January 1st 1970, 00h00\" in an unknown timezone: there\n *   is not enough information to interpret it as a well-defined physical\n *   point in time.\n *\n * One consequence is that timestamp values without a timezone cannot\n * be reliably compared or ordered, since they may have different points of\n * reference.  In particular, it is *not* possible to interpret an unset\n * or empty timezone as the same as \"UTC\".\n *\n * Conversion between timezones\n * ----------------------------\n *\n * If a Timestamp column has a non-empty timezone, changing the timezone\n * to a different non-empty value is a metadata-only operation:\n * the timestamp values need not change as their point of reference remains\n * the same (the Unix epoch).\n *\n * However, if a Timestamp column has no timezone value, changing it to a\n * non-empty value requires to think about the desired semantics.\n * One possibility is to assume that the original timestamp values are\n * relative to the epoch of the timezone being set; timestamp values should\n * then adjusted to the Unix epoch (for example, changing the timezone from\n * empty to \"Europe/Paris\" would require converting the timestamp values\n * from \"Europe/Paris\" to \"UTC\", which seems counter-intuitive but is\n * nevertheless correct).\n *\n * Guidelines for encoding data from external libraries\n * ----------------------------------------------------\n *\n * Date & time libraries often have multiple different data types for temporal\n * data. In order to ease interoperability between different implementations the\n * Arrow project has some recommendations for encoding these types into a Timestamp\n * column.\n *\n * An \"instant\" represents a physical point in time that has no relevant timezone\n * (for example, astronomical data). To encode an instant, use a Timestamp with\n * the timezone string set to \"UTC\", and make sure the Timestamp values\n * are relative to the UTC epoch (January 1st 1970, midnight).\n *\n * A \"zoned date-time\" represents a physical point in time annotated with an\n * informative timezone (for example, the timezone in which the data was\n * recorded).  To encode a zoned date-time, use a Timestamp with the timezone\n * string set to the name of the timezone, and make sure the Timestamp values\n * are relative to the UTC epoch (January 1st 1970, midnight).\n *\n *  (There is some ambiguity between an instant and a zoned date-time with the\n *   UTC timezone.  Both of these are stored the same in Arrow.  Typically,\n *   this distinction does not matter.  If it does, then an application should\n *   use custom metadata or an extension type to distinguish between the two cases.)\n *\n * An \"offset date-time\" represents a physical point in time combined with an\n * explicit offset from UTC.  To encode an offset date-time, use a Timestamp\n * with the timezone string set to the numeric timezone offset string\n * (e.g. \"+03:00\"), and make sure the Timestamp values are relative to\n * the UTC epoch (January 1st 1970, midnight).\n *\n * A \"naive date-time\" (also called \"local date-time\" in some libraries)\n * represents a wall clock time combined with a calendar date, but with\n * no indication of how to map this information to a physical point in time.\n * Naive date-times must be handled with care because of this missing\n * information, and also because daylight saving time (DST) may make\n * some values ambiguous or non-existent. A naive date-time may be\n * stored as a struct with Date and Time fields. However, it may also be\n * encoded into a Timestamp column with an empty timezone. The timestamp\n * values should be computed \"as if\" the timezone of the date-time values\n * was UTC; for example, the naive date-time \"January 1st 1970, 00h00\" would\n * be encoded as timestamp value 0.\n */\nexport class Timestamp {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Timestamp {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsTimestamp(bb:flatbuffers.ByteBuffer, obj?:Timestamp):Timestamp {\n  return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsTimestamp(bb:flatbuffers.ByteBuffer, obj?:Timestamp):Timestamp {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Timestamp()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nunit():TimeUnit {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : TimeUnit.SECOND;\n}\n\n/**\n * The timezone is an optional string indicating the name of a timezone,\n * one of:\n *\n * * As used in the Olson timezone database (the \"tz database\" or\n *   \"tzdata\"), such as \"America/New_York\".\n * * An absolute timezone offset of the form \"+XX:XX\" or \"-XX:XX\",\n *   such as \"+07:30\".\n *\n * Whether a timezone string is present indicates different semantics about\n * the data (see above).\n */\ntimezone():string|null\ntimezone(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\ntimezone(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startTimestamp(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addUnit(builder:flatbuffers.Builder, unit:TimeUnit) {\n  builder.addFieldInt16(0, unit, TimeUnit.SECOND);\n}\n\nstatic addTimezone(builder:flatbuffers.Builder, timezoneOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, timezoneOffset, 0);\n}\n\nstatic endTimestamp(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createTimestamp(builder:flatbuffers.Builder, unit:TimeUnit, timezoneOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Timestamp.startTimestamp(builder);\n  Timestamp.addUnit(builder, unit);\n  Timestamp.addTimezone(builder, timezoneOffset);\n  return Timestamp.endTimestamp(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { IntervalUnit } from './interval-unit.js';\n\n\nexport class Interval {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Interval {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsInterval(bb:flatbuffers.ByteBuffer, obj?:Interval):Interval {\n  return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsInterval(bb:flatbuffers.ByteBuffer, obj?:Interval):Interval {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Interval()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nunit():IntervalUnit {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : IntervalUnit.YEAR_MONTH;\n}\n\nstatic startInterval(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addUnit(builder:flatbuffers.Builder, unit:IntervalUnit) {\n  builder.addFieldInt16(0, unit, IntervalUnit.YEAR_MONTH);\n}\n\nstatic endInterval(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createInterval(builder:flatbuffers.Builder, unit:IntervalUnit):flatbuffers.Offset {\n  Interval.startInterval(builder);\n  Interval.addUnit(builder, unit);\n  return Interval.endInterval(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { UnionMode } from './union-mode.js';\n\n\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child `typeIds[offset]` is the id used in the type vector\n */\nexport class Union {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Union {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsUnion(bb:flatbuffers.ByteBuffer, obj?:Union):Union {\n  return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsUnion(bb:flatbuffers.ByteBuffer, obj?:Union):Union {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Union()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nmode():UnionMode {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : UnionMode.Sparse;\n}\n\ntypeIds(index: number):number|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n}\n\ntypeIdsLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\ntypeIdsArray():Int32Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n}\n\nstatic startUnion(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addMode(builder:flatbuffers.Builder, mode:UnionMode) {\n  builder.addFieldInt16(0, mode, UnionMode.Sparse);\n}\n\nstatic addTypeIds(builder:flatbuffers.Builder, typeIdsOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, typeIdsOffset, 0);\n}\n\nstatic createTypeIdsVector(builder:flatbuffers.Builder, data:number[]|Int32Array):flatbuffers.Offset;\n/**\n * @deprecated This Uint8Array overload will be removed in the future.\n */\nstatic createTypeIdsVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset;\nstatic createTypeIdsVector(builder:flatbuffers.Builder, data:number[]|Int32Array|Uint8Array):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addInt32(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startTypeIdsVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic endUnion(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createUnion(builder:flatbuffers.Builder, mode:UnionMode, typeIdsOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Union.startUnion(builder);\n  Union.addMode(builder, mode);\n  Union.addTypeIds(builder, typeIdsOffset);\n  return Union.endUnion(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class FixedSizeBinary {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):FixedSizeBinary {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsFixedSizeBinary(bb:flatbuffers.ByteBuffer, obj?:FixedSizeBinary):FixedSizeBinary {\n  return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsFixedSizeBinary(bb:flatbuffers.ByteBuffer, obj?:FixedSizeBinary):FixedSizeBinary {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new FixedSizeBinary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Number of bytes per value\n */\nbyteWidth():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\nstatic startFixedSizeBinary(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addByteWidth(builder:flatbuffers.Builder, byteWidth:number) {\n  builder.addFieldInt32(0, byteWidth, 0);\n}\n\nstatic endFixedSizeBinary(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createFixedSizeBinary(builder:flatbuffers.Builder, byteWidth:number):flatbuffers.Offset {\n  FixedSizeBinary.startFixedSizeBinary(builder);\n  FixedSizeBinary.addByteWidth(builder, byteWidth);\n  return FixedSizeBinary.endFixedSizeBinary(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class FixedSizeList {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):FixedSizeList {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsFixedSizeList(bb:flatbuffers.ByteBuffer, obj?:FixedSizeList):FixedSizeList {\n  return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsFixedSizeList(bb:flatbuffers.ByteBuffer, obj?:FixedSizeList):FixedSizeList {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Number of list items per value\n */\nlistSize():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\nstatic startFixedSizeList(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addListSize(builder:flatbuffers.Builder, listSize:number) {\n  builder.addFieldInt32(0, listSize, 0);\n}\n\nstatic endFixedSizeList(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createFixedSizeList(builder:flatbuffers.Builder, listSize:number):flatbuffers.Offset {\n  FixedSizeList.startFixedSizeList(builder);\n  FixedSizeList.addListSize(builder, listSize);\n  return FixedSizeList.endFixedSizeList(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entries: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field.\n *\n * In a field with Map type, the field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entries\", \"key\", and \"value\", but this is\n * not enforced.\n *\n * Map\n * ```text\n *   - child[0] entries: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n * ```\n * Neither the \"entries\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n */\nexport class Map {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Map {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsMap(bb:flatbuffers.ByteBuffer, obj?:Map):Map {\n  return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsMap(bb:flatbuffers.ByteBuffer, obj?:Map):Map {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Map()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Set to true if the keys within each value are sorted\n */\nkeysSorted():boolean {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n}\n\nstatic startMap(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addKeysSorted(builder:flatbuffers.Builder, keysSorted:boolean) {\n  builder.addFieldInt8(0, +keysSorted, +false);\n}\n\nstatic endMap(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createMap(builder:flatbuffers.Builder, keysSorted:boolean):flatbuffers.Offset {\n  Map.startMap(builder);\n  Map.addKeysSorted(builder, keysSorted);\n  return Map.endMap(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { KeyValue } from './key-value.js';\nimport { MessageHeader } from './message-header.js';\nimport { MetadataVersion } from './metadata-version.js';\n\n\nexport class Message {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Message {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsMessage(bb:flatbuffers.ByteBuffer, obj?:Message):Message {\n  return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsMessage(bb:flatbuffers.ByteBuffer, obj?:Message):Message {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nversion():MetadataVersion {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt16(this.bb_pos + offset) : MetadataVersion.V1;\n}\n\nheaderType():MessageHeader {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : MessageHeader.NONE;\n}\n\n// @ts-ignore\nheader<T extends flatbuffers.Table>(obj:any):any|null {\n  const offset = this.bb!.__offset(this.bb_pos, 8);\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n}\n\nbodyLength():flatbuffers.Long {\n  const offset = this.bb!.__offset(this.bb_pos, 10);\n  return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n}\n\ncustomMetadata(index: number, obj?:KeyValue):KeyValue|null {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? (obj || new KeyValue()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n}\n\ncustomMetadataLength():number {\n  const offset = this.bb!.__offset(this.bb_pos, 12);\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n}\n\nstatic startMessage(builder:flatbuffers.Builder) {\n  builder.startObject(5);\n}\n\nstatic addVersion(builder:flatbuffers.Builder, version:MetadataVersion) {\n  builder.addFieldInt16(0, version, MetadataVersion.V1);\n}\n\nstatic addHeaderType(builder:flatbuffers.Builder, headerType:MessageHeader) {\n  builder.addFieldInt8(1, headerType, MessageHeader.NONE);\n}\n\nstatic addHeader(builder:flatbuffers.Builder, headerOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(2, headerOffset, 0);\n}\n\nstatic addBodyLength(builder:flatbuffers.Builder, bodyLength:flatbuffers.Long) {\n  builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n}\n\nstatic addCustomMetadata(builder:flatbuffers.Builder, customMetadataOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(4, customMetadataOffset, 0);\n}\n\nstatic createCustomMetadataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\n  builder.startVector(4, data.length, 4);\n  for (let i = data.length - 1; i >= 0; i--) {\n    builder.addOffset(data[i]!);\n  }\n  return builder.endVector();\n}\n\nstatic startCustomMetadataVector(builder:flatbuffers.Builder, numElems:number) {\n  builder.startVector(4, numElems, 4);\n}\n\nstatic endMessage(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic finishMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset);\n}\n\nstatic finishSizePrefixedMessageBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\n  builder.finish(offset, undefined, true);\n}\n\nstatic createMessage(builder:flatbuffers.Builder, version:MetadataVersion, headerType:MessageHeader, headerOffset:flatbuffers.Offset, bodyLength:flatbuffers.Long, customMetadataOffset:flatbuffers.Offset):flatbuffers.Offset {\n  Message.startMessage(builder);\n  Message.addVersion(builder, version);\n  Message.addHeaderType(builder, headerType);\n  Message.addHeader(builder, headerOffset);\n  Message.addBodyLength(builder, bodyLength);\n  Message.addCustomMetadata(builder, customMetadataOffset);\n  return Message.endMessage(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * These are stored in the flatbuffer in the Type union below\n */\nexport class Null {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Null {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsNull(bb:flatbuffers.ByteBuffer, obj?:Null):Null {\n  return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsNull(bb:flatbuffers.ByteBuffer, obj?:Null):Null {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Null()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startNull(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endNull(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createNull(builder:flatbuffers.Builder):flatbuffers.Offset {\n  Null.startNull(builder);\n  return Null.endNull(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * Opaque binary data\n */\nexport class Binary {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Binary {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsBinary(bb:flatbuffers.ByteBuffer, obj?:Binary):Binary {\n  return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsBinary(bb:flatbuffers.ByteBuffer, obj?:Binary):Binary {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Binary()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startBinary(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endBinary(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createBinary(builder:flatbuffers.Builder):flatbuffers.Offset {\n  Binary.startBinary(builder);\n  return Binary.endBinary(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class Bool {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Bool {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsBool(bb:flatbuffers.ByteBuffer, obj?:Bool):Bool {\n  return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsBool(bb:flatbuffers.ByteBuffer, obj?:Bool):Bool {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Bool()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startBool(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endBool(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createBool(builder:flatbuffers.Builder):flatbuffers.Offset {\n  Bool.startBool(builder);\n  return Bool.endBool(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * Unicode with UTF-8 encoding\n */\nexport class Utf8 {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Utf8 {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsUtf8(bb:flatbuffers.ByteBuffer, obj?:Utf8):Utf8 {\n  return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsUtf8(bb:flatbuffers.ByteBuffer, obj?:Utf8):Utf8 {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Utf8()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startUtf8(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endUtf8(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createUtf8(builder:flatbuffers.Builder):flatbuffers.Offset {\n  Utf8.startUtf8(builder);\n  return Utf8.endUtf8(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class List {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):List {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsList(bb:flatbuffers.ByteBuffer, obj?:List):List {\n  return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsList(bb:flatbuffers.ByteBuffer, obj?:List):List {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new List()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startList(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endList(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createList(builder:flatbuffers.Builder):flatbuffers.Offset {\n  List.startList(builder);\n  return List.endList(builder);\n}\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n */\nexport class Struct_ {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Struct_ {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsStruct_(bb:flatbuffers.ByteBuffer, obj?:Struct_):Struct_ {\n  return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsStruct_(bb:flatbuffers.ByteBuffer, obj?:Struct_):Struct_ {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new Struct_()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic startStruct_(builder:flatbuffers.Builder) {\n  builder.startObject(0);\n}\n\nstatic endStruct_(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createStruct_(builder:flatbuffers.Builder):flatbuffers.Offset {\n  Struct_.startStruct_(builder);\n  return Struct_.endStruct_(builder);\n}\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as flatbuffers from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\n\nimport * as type from '../type.js';\nimport { Visitor } from '../visitor.js';\n\nimport { Null } from '../fb/null.js';\nimport { Int } from '../fb/int.js';\nimport { FloatingPoint } from '../fb/floating-point.js';\nimport { Binary } from '../fb/binary.js';\nimport { Bool } from '../fb/bool.js';\nimport { Utf8 } from '../fb/utf8.js';\nimport { Decimal } from '../fb/decimal.js';\nimport { Date } from '../fb/date.js';\nimport { Time } from '../fb/time.js';\nimport { Timestamp } from '../fb/timestamp.js';\nimport { Interval } from '../fb/interval.js';\nimport { List } from '../fb/list.js';\nimport { Struct_ as Struct } from '../fb/struct_.js';\nimport { Union } from '../fb/union.js';\nimport { DictionaryEncoding } from '../fb/dictionary-encoding.js';\nimport { FixedSizeBinary } from '../fb/fixed-size-binary.js';\nimport { FixedSizeList } from '../fb/fixed-size-list.js';\nimport { Map as Map_ } from '../fb/map.js';\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        Decimal.addBitWidth(b, node.bitWidth);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* eslint-disable brace-style */\n\nimport { Schema, Field } from '../../schema.js';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type.js';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message.js';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum.js';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: Record<string, string>) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE': return new Null();\n        case 'null': return new Null();\n        case 'binary': return new Binary();\n        case 'utf8': return new Utf8();\n        case 'bool': return new Bool();\n        case 'list': return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision'], t['bitWidth']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* eslint-disable brace-style */\n\nimport * as flatbuffers from 'flatbuffers';\n\nimport { Schema as _Schema } from '../../fb/schema.js';\nimport { Int as _Int } from '../../fb/int.js';\nimport { RecordBatch as _RecordBatch } from '../../fb/record-batch.js';\nimport { DictionaryBatch as _DictionaryBatch } from '../../fb/dictionary-batch.js';\nimport { Buffer as _Buffer } from '../../fb/buffer.js';\nimport { Field as _Field } from '../../fb/field.js';\nimport { FieldNode as _FieldNode } from '../../fb/field-node.js';\nimport { DictionaryEncoding as _DictionaryEncoding } from '../../fb/dictionary-encoding.js';\nimport { Type } from '../../fb/type.js';\nimport { KeyValue as _KeyValue } from '../../fb/key-value.js';\nimport { Endianness as _Endianness } from '../../fb/endianness.js';\nimport { FloatingPoint as _FloatingPoint } from '../../fb/floating-point.js';\nimport { Decimal as _Decimal } from '../../fb/decimal.js';\nimport { Date as _Date } from '../../fb/date.js';\nimport { Time as _Time } from '../../fb/time.js';\nimport { Timestamp as _Timestamp } from '../../fb/timestamp.js';\nimport { Interval as _Interval } from '../../fb/interval.js';\nimport { Union as _Union } from '../../fb/union.js';\nimport { FixedSizeBinary as _FixedSizeBinary } from '../../fb/fixed-size-binary.js';\nimport { FixedSizeList as _FixedSizeList } from '../../fb/fixed-size-list.js';\nimport { Map as _Map } from '../../fb/map.js';\nimport { Message as _Message } from '../../fb/message.js';\n\nimport { Schema, Field } from '../../schema.js';\nimport { toUint8Array } from '../../util/buffer.js';\nimport { ArrayBufferViewInput } from '../../util/buffer.js';\nimport { MessageHeader, MetadataVersion } from '../../enum.js';\nimport { instance as typeAssembler } from '../../visitor/typeassembler.js';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json.js';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type.js';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        const b = new Builder();\n        let headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    declare protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    if (batch.compression() !== null) {\n        throw new Error('Record batch compression not implemented');\n    }\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = Math.trunc(parent.customMetadataLength()); ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type['NONE']: return new Null();\n        case Type['Null']: return new Null();\n        case Type['Binary']: return new Binary();\n        case Type['Utf8']: return new Utf8();\n        case Type['Bool']: return new Bool();\n        case Type['List']: return new List((children || [])[0]);\n        case Type['Struct_']: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type['Int']: {\n            const t = f.type(new _Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type['FloatingPoint']: {\n            const t = f.type(new _FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type['Decimal']: {\n            const t = f.type(new _Decimal())!;\n            return new Decimal(t.scale(), t.precision(), t.bitWidth());\n        }\n        case Type['Date']: {\n            const t = f.type(new _Date())!;\n            return new Date_(t.unit());\n        }\n        case Type['Time']: {\n            const t = f.type(new _Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type['Timestamp']: {\n            const t = f.type(new _Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type['Interval']: {\n            const t = f.type(new _Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type['Union']: {\n            const t = f.type(new _Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type['FixedSizeBinary']: {\n            const t = f.type(new _FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type['FixedSizeList']: {\n            const t = f.type(new _FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type['Map']: {\n            const t = f.type(new _Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    const type = field.type;\n    let typeId: Type = <any>field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    for (const n of nodes.slice().reverse()) FieldNode.encode(b, n);\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    for (const b_ of buffers.slice().reverse()) BufferRegion.encode(b, b_);\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (() => {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n    : T extends MessageHeader.RecordBatch ? RecordBatch\n    : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum.js';\nimport { ByteBuffer } from 'flatbuffers';\nimport { Message } from './metadata/message.js';\nimport { isFileHandle } from '../util/compat.js';\nimport { AsyncRandomAccessFile } from '../io/file.js';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer.js';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream.js';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces.js';\n\n/** @ignore */ const invalidMessageType = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any>r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message?.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb?.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n                ? new AsyncRandomAccessFile(source, byteLength!)\n                : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any>r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message?.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb?.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message?.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1) {\n    MAGIC[i] = MAGIC_STR.codePointAt(i)!;\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { makeData } from '../data.js';\nimport { Vector } from '../vector.js';\nimport { DataType, Struct, TypeMap } from '../type.js';\nimport { MessageHeader } from '../enum.js';\nimport { Footer } from './metadata/file.js';\nimport { Schema, Field } from '../schema.js';\nimport streamAdapters from '../io/adapters.js';\nimport { Message } from './metadata/message.js';\nimport * as metadata from './metadata/message.js';\nimport { ArrayBufferViewInput } from '../util/buffer.js';\nimport { ByteStream, AsyncByteStream } from '../io/stream.js';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file.js';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader.js';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch.js';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces.js';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message.js';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat.js';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean };\n/** @ignore */ type RecordBatchReaders<T extends TypeMap = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends TypeMap = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends TypeMap = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends TypeMap = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends TypeMap = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer(): Footer | null { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>>this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>>this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends TypeMap>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>; readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends TypeMap = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends TypeMap = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends TypeMap = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends TypeMap = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends TypeMap = any>(source: FromArg4): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    public static from<T extends TypeMap = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends TypeMap = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends TypeMap = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends TypeMap = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends TypeMap = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends TypeMap = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends TypeMap = any>(source: FromArg4): AsyncIterableIterator<AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends TypeMap = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchReaders<T>>;\n    /** @nocollapse */\n    public static readAll<T extends TypeMap = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends TypeMap = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super(_impl); }\n    public readAll() { return [...this]; }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends TypeMap = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super(_impl); }\n    public async readAll() {\n        const batches = new Array<RecordBatch<T>>();\n        for await (const batch of this) { batches.push(batch); }\n        return batches;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends TypeMap = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super(_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends TypeMap = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super(_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends TypeMap = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends TypeMap = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends TypeMap = any> extends RecordBatchStreamReader<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends TypeMap = any> extends AsyncRecordBatchStreamReader<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends TypeMap = any> =\n    RecordBatchJSONReaderImpl<T> |\n    RecordBatchFileReaderImpl<T> |\n    RecordBatchStreamReaderImpl<T> |\n    AsyncRecordBatchFileReaderImpl<T> |\n    AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends TypeMap = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends TypeMap = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends TypeMap = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends TypeMap = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends TypeMap = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends TypeMap = any> implements RecordBatchReaderImpl<T> {\n\n    declare public schema: Schema<T>;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any>schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        const children = this._loadVectors(header, body, this.schema.fields);\n        const data = makeData({ type: new Struct(this.schema.fields), length: header.length, children });\n        return new RecordBatch(this.schema, data);\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            const data = this._loadVectors(header.data, body, [type]);\n            return (dictionary && isDelta ? dictionary.concat(\n                new Vector(data)) :\n                new Vector(data)).memoize() as Vector;\n        }\n        return dictionary.memoize();\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends TypeMap = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any>null;\n            this.dictionaries = <any>null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null;\n        const { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends TypeMap = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any>null;\n            this.dictionaries = <any>null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null;\n        const { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends TypeMap = any> extends RecordBatchStreamReaderImpl<T> {\n\n    protected _footer?: Footer;\n    declare protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer?.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message?.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer?.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message?.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer?.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends TypeMap = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    declare protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number>rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>>rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer?.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message?.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer?.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message?.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends TypeMap = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends TypeMap = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any>source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends TypeMap = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any>source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends TypeMap>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends TypeMap>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function* (): any { }()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends TypeMap>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function* (): any { }()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends TypeMap>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding && checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n        return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Vector } from '../vector.js';\nimport { Visitor } from '../visitor.js';\nimport { Type, UnionMode } from '../enum.js';\nimport { RecordBatch } from '../recordbatch.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport { rebaseValueOffsets } from '../util/buffer.js';\nimport { packBools, truncateBitmap } from '../util/bit.js';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message.js';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type.js';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends DataType>(node: Vector<T> | Data<T>): this;\n    visitMany<T extends DataType>(nodes: readonly Data<T>[]): this[];\n    getVisitFn<T extends Type>(node: T): (data: Data<TypeToDataType<T>>) => this;\n    getVisitFn<T extends DataType>(node: Vector<T> | Data<T> | T): (data: Data<T>) => this;\n\n    visitBool<T extends Bool>(data: Data<T>): this;\n    visitInt<T extends Int>(data: Data<T>): this;\n    visitFloat<T extends Float>(data: Data<T>): this;\n    visitUtf8<T extends Utf8>(data: Data<T>): this;\n    visitBinary<T extends Binary>(data: Data<T>): this;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(data: Data<T>): this;\n    visitDate<T extends Date_>(data: Data<T>): this;\n    visitTimestamp<T extends Timestamp>(data: Data<T>): this;\n    visitTime<T extends Time>(data: Data<T>): this;\n    visitDecimal<T extends Decimal>(data: Data<T>): this;\n    visitList<T extends List>(data: Data<T>): this;\n    visitStruct<T extends Struct>(data: Data<T>): this;\n    visitUnion<T extends Union>(data: Data<T>): this;\n    visitInterval<T extends Interval>(data: Data<T>): this;\n    visitFixedSizeList<T extends FixedSizeList>(data: Data<T>): this;\n    visitMap<T extends Map_>(data: Data<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const unwrap = (nodes: (T | T[])[]): Data[] =>\n            nodes.flatMap((node: T | T[]) => Array.isArray(node) ? unwrap(node) :\n                (node instanceof RecordBatch) ? node.data.children : node.data);\n        const assembler = new VectorAssembler();\n        assembler.visitMany(unwrap(args));\n        return assembler;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends DataType>(data: Vector<T> | Data<T>): this {\n        if (data instanceof Vector) {\n            this.visitMany(data.data);\n            return this;\n        }\n        const { type } = data;\n        if (!DataType.isDictionary(type)) {\n            const { length, nullCount } = data;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(data);\n    }\n\n    public visitNull<T extends Null>(_null: Data<T>) {\n        return this;\n    }\n\n    public visitDictionary<T extends Dictionary>(data: Data<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(data.clone(data.type.indices));\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, data: Data<T>) {\n    const { type, length, typeIds, valueOffsets } = data;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, data);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (data.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, data);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Data | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = data.children[childIndex]) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, data: Data<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (data.nullCount >= data.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = data.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(data.offset, data.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(data.values));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, data: Data<T>) {\n    return addBuffer.call(this, data.values.subarray(0, data.length * data.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, data: Data<T>) {\n    const { length, values, valueOffsets } = data;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, data: Data<T>) {\n    const { length, valueOffsets } = data;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(data.children[0]);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, data: Data<T>) {\n    return this.visitMany(data.type.children.map((_, i) => data.children[i]).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Table } from '../table.js';\nimport { MAGIC } from './message.js';\nimport { Vector } from '../vector.js';\nimport { DataType, TypeMap } from '../type.js';\nimport { Schema, Field } from '../schema.js';\nimport { Message } from './metadata/message.js';\nimport * as metadata from './metadata/message.js';\nimport { FileBlock, Footer } from './metadata/file.js';\nimport { MessageHeader, MetadataVersion } from '../enum.js';\nimport { compareSchemas } from '../visitor/typecomparator.js';\nimport { WritableSink, AsyncByteQueue } from '../io/stream.js';\nimport { VectorAssembler } from '../visitor/vectorassembler.js';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler.js';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler.js';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer.js';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch.js';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces.js';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat.js';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends TypeMap = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends TypeMap>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number; size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>; readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any>input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(compareSchemas(schema, this._schema))) {\n            if (schema == null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload == null) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !compareSchemas(schema, this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.batches);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.numRows, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Data, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(new Vector([dictionary]));\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary?.slice(offset)).length > 0) {\n                for (const data of dictionary.data) {\n                    this._writeDictionaryBatch(data, id, offset > 0);\n                    offset += data.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends TypeMap = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends TypeMap = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends TypeMap = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends TypeMap = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends TypeMap = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends TypeMap = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends TypeMap = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends TypeMap = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends TypeMap = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends TypeMap = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends TypeMap = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends TypeMap = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends TypeMap = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends TypeMap = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends TypeMap = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends TypeMap = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends TypeMap = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends TypeMap = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(field => fieldToJSON(field)) }, null, 2)}`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Data, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends TypeMap = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.batches;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends TypeMap = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): Record<string, unknown> {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map((field: any) => fieldToJSON(field)),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Data, id: number, isDelta = false) {\n    const [columns] = JSONVectorAssembler.assemble(new RecordBatch({ [id]: dictionary }));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    const [columns] = JSONVectorAssembler.assemble(records);\n    return JSON.stringify({\n        'count': records.numRows,\n        'columns': columns\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table.js';\nimport { TypeMap } from '../type.js';\nimport { isPromise } from '../util/compat.js';\nimport {\n    FromArg0, FromArg1, FromArg2, FromArg3, FromArg4, FromArg5,\n    RecordBatchReader,\n    RecordBatchFileReader, RecordBatchStreamReader,\n    AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader\n} from './reader.js';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './writer.js';\n\ntype RecordBatchReaders<T extends TypeMap = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\ntype AsyncRecordBatchReaders<T extends TypeMap = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n\n/**\n * Deserialize the IPC format into a {@link Table}. This function is a\n * convenience wrapper for {@link RecordBatchReader}. Opposite of {@link tableToIPC}.\n */\nexport function tableFromIPC<T extends TypeMap = any>(source: FromArg0 | FromArg2): Table<T>;\nexport function tableFromIPC<T extends TypeMap = any>(source: FromArg1): Promise<Table<T>>;\nexport function tableFromIPC<T extends TypeMap = any>(source: FromArg3 | FromArg4 | FromArg5): Promise<Table<T>>;\nexport function tableFromIPC<T extends TypeMap = any>(source: RecordBatchReaders<T>): Table<T>;\nexport function tableFromIPC<T extends TypeMap = any>(source: AsyncRecordBatchReaders<T>): Promise<Table<T>>;\nexport function tableFromIPC<T extends TypeMap = any>(source: RecordBatchReader<T>): Table<T> | Promise<Table<T>>;\nexport function tableFromIPC<T extends TypeMap = any>(input: any): Table<T> | Promise<Table<T>> {\n    const reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n    if (isPromise<RecordBatchReader<T>>(reader)) {\n        return reader.then((reader) => tableFromIPC(reader)) as Promise<Table<T>>;\n    }\n    if (reader.isAsync()) {\n        return (reader as AsyncRecordBatchReaders<T>).readAll().then((xs) => new Table(xs));\n    }\n    return new Table((reader as RecordBatchReaders<T>).readAll());\n}\n\n/**\n * Serialize a {@link Table} to the IPC format. This function is a convenience\n * wrapper for {@link RecordBatchStreamWriter} and {@link RecordBatchFileWriter}.\n * Opposite of {@link tableFromIPC}.\n *\n * @param table The Table to serialize.\n * @param type Whether to serialize the Table as a file or a stream.\n */\nexport function tableToIPC<T extends TypeMap = any>(table: Table, type: 'file' | 'stream' = 'stream'): Uint8Array {\n    return (type === 'stream' ? RecordBatchStreamWriter : RecordBatchFileWriter)\n        .writeAll<T>(table)\n        .toUint8Array(true);\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { tableToIPC, tableFromIPC, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\".concat(_this.uuid, \"level\").concat(columnIndex, \"_row\").concat(dataRowIndex),\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\".concat(_this.uuid, \"row\").concat(dataRowIndex, \"_col\").concat(dataColumnIndex),\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getChildAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = tableFromIPC(dataBuffer);\n        this.indexTable = tableFromIPC(indexBuffer);\n        this.columnsTable = tableFromIPC(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: tableFromIPC(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.numRows + this.columnsTable.numCols;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.numRows;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.numRows;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: tableToIPC(this.dataTable),\n            index: tableToIPC(this.indexTable),\n            columns: tableToIPC(this.columnsTable)\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nexport var Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targeting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a;\n        var data = (_a = df.data, _a.data), index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \".concat(theme.primaryColor, \";\\n      --background-color: \").concat(theme.backgroundColor, \";\\n      --secondary-background-color: \").concat(theme.secondaryBackgroundColor, \";\\n      --text-color: \").concat(theme.textColor, \";\\n      --font: \").concat(theme.font, \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \");\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * Copyright (c) Streamlit Inc. (2018-2022) Snowflake Inc. (2022)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                _this.setState({ renderData: event.detail });\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        ComponentWrapper.prototype.render = function () {\n            // If our wrapped component threw an error, display it.\n            if (this.state.componentError != null) {\n                return (React.createElement(\"div\", null,\n                    React.createElement(\"h1\", null, \"Component Error\"),\n                    React.createElement(\"span\", null, this.state.componentError.message)));\n            }\n            // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n            if (this.state.renderData == null) {\n                return null;\n            }\n            return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: this.state.renderData.disabled, args: this.state.renderData.args, theme: this.state.renderData.theme }));\n        };\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport {\n    BrowserConfiguration,\n    buildConfiguration,\n    Configuration,\n} from \"../config/Configuration\";\nimport { version, name } from \"../packageMetadata\";\n\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nexport abstract class BaseOperatingContext {\n    protected logger: Logger;\n    protected config: BrowserConfiguration;\n    protected available: boolean;\n    protected browserEnvironment: boolean;\n\n    constructor(config: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n\n        this.config = buildConfiguration(config, this.browserEnvironment);\n        this.logger = new Logger(\n            this.config.system.loggerOptions,\n            name,\n            version\n        );\n        this.available = false;\n    }\n\n    /**\n     * returns the name of the module containing the API controller associated with this operating context\n     */\n    abstract getModuleName(): string;\n\n    /**\n     * returns the string identifier of this operating context\n     */\n    abstract getId(): string;\n\n    /**\n     * returns a boolean indicating whether this operating context is present\n     */\n    abstract initialize(): Promise<boolean>;\n\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    isAvailable(): boolean {\n        return this.available;\n    }\n\n    isBrowserEnvironment(): boolean {\n        return this.browserEnvironment;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseOperatingContext } from \"./BaseOperatingContext\";\n\nexport class StandardOperatingContext extends BaseOperatingContext {\n    /*\n     * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n     * containing the implementation for this operating context\n     */\n    static readonly MODULE_NAME: string = \"\";\n\n    /**\n     * Unique identifier for the operating context\n     */\n    static readonly ID: string = \"StandardOperatingContext\";\n\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName(): string {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId(): string {\n        return StandardOperatingContext.ID;\n    }\n\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize(): Promise<boolean> {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\nimport { IController } from \"../controllers/IController\";\nimport {\n    PerformanceCallbackFunction,\n    AccountInfo,\n    AccountFilter,\n    Logger,\n} from \"@azure/msal-common\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport * as ControllerFactory from \"../controllers/ControllerFactory\";\nimport { StandardController } from \"../controllers/StandardController\";\nimport { BrowserConfiguration, Configuration } from \"../config/Configuration\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication implements IPublicClientApplication {\n    protected controller: IController;\n\n    public static async createPublicClientApplication(\n        configuration: Configuration\n    ): Promise<IPublicClientApplication> {\n        const controller = await ControllerFactory.createV3Controller(\n            configuration\n        );\n        const pca = new PublicClientApplication(configuration, controller);\n\n        return pca;\n    }\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    public constructor(configuration: Configuration, controller?: IController) {\n        if (controller) {\n            this.controller = controller;\n        } else {\n            const standardOperatingContext = new StandardOperatingContext(\n                configuration\n            );\n            this.controller = new StandardController(standardOperatingContext);\n        }\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize(): Promise<void> {\n        return this.controller.initialize();\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(\n        request: PopupRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenPopup(request);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        return this.controller.acquireTokenRedirect(request);\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenByCode(request);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.controller.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        return this.controller.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.controller.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.controller.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.controller.disableAccountStorageEvents();\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        return this.controller.getAccount(accountFilter);\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId: string): AccountInfo | null {\n        return this.controller.getAccountByLocalId(localId);\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName: string): AccountInfo | null {\n        return this.controller.getAccountByUsername(userName);\n    }\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(\n        hash?: string | undefined\n    ): Promise<AuthenticationResult | null> {\n        return this.controller.handleRedirectPromise(hash);\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(\n        request?: PopupRequest | undefined\n    ): Promise<AuthenticationResult> {\n        return this.controller.loginPopup(request);\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request?: RedirectRequest | undefined): Promise<void> {\n        return this.controller.loginRedirect(request);\n    }\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logout(logoutRequest);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        return this.controller.ssoSilent(request);\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.controller.getTokenCache();\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.controller.getLogger();\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.controller.setLogger(logger);\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.controller.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.controller.getActiveAccount();\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.controller.setNavigationClient(navigationClient);\n    }\n\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.controller.getConfiguration();\n    }\n\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        return this.controller.hydrateCache(result, request);\n    }\n\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n","import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport React, { ReactNode } from \"react\";\r\nimport * as msal from \"@azure/msal-browser\";\r\n\r\ninterface Props {\r\n  login: boolean;\r\n  logout: boolean;\r\n  revalidate: boolean;\r\n  clientId: string;\r\n  authority: string;\r\n  scopes: string[];\r\n}\r\n\r\nlet previousLogin = false;\r\nlet previousLogout = false;\r\nlet previousRevalidate = false;\r\n\r\nconst isDev = !window.location.href.includes(\"index.html\");\r\n\r\nlet href = decodeURIComponent(window.location.href);\r\nhref = href.split(\"?\").slice(0, -1).join(\"?\");\r\n\r\nconst redirectUri = isDev ? href : \"/\";\r\n\r\nconst accountSelectRequest = (scopes: any[] = []) => ({\r\n  scopes,\r\n  prompt: \"select_account\",\r\n});\r\n\r\nconst authorizeAccountRequest = (account: any, scopes: any[] = []) => ({\r\n  scopes,\r\n  account,\r\n  prompt: \"none\",\r\n});\r\n\r\nfunction saveAuthData(clientId: string, authData: any, store: boolean = true) {\r\n  let _str = JSON.stringify(authData);\r\n  if (!store) return;\r\n  localStorage.setItem(clientId, _str);\r\n}\r\n\r\nfunction retrieveAuthData(clientId: string) {\r\n  const raw = localStorage.getItem(clientId);\r\n  if (!raw) return null;\r\n  return JSON.parse(raw);\r\n}\r\n\r\nclass Component extends StreamlitComponentBase {\r\n  public getClientId = () => {\r\n    const { args } = this.props;\r\n    const { clientId }: Props = args;\r\n\r\n    return clientId;\r\n  };\r\n\r\n  public handleAuthenticationResult = (data: any) => {\r\n    const clientId = this.getClientId();\r\n\r\n    saveAuthData(clientId, data);\r\n    Streamlit.setComponentValue({ data });\r\n    sessionStorage.setItem(\"msal.revalidated\", \"1\");\r\n  };\r\n\r\n  public handleAuthenticationError = (error: any) => {\r\n    this.signOut();\r\n  };\r\n\r\n  public authenticate = async (\r\n    clientId: string,\r\n    authority: string,\r\n    account: any = null,\r\n    scopes: string[] = []\r\n  ) => {\r\n    sessionStorage.removeItem(\"msal.interaction.status\");\r\n\r\n    Streamlit.setComponentValue({ in_interaction: true });\r\n\r\n    const client = new msal.PublicClientApplication({\r\n      auth: {\r\n        clientId,\r\n        authority,\r\n        redirectUri,\r\n      },\r\n    });\r\n\r\n    await client.initialize();\r\n\r\n    client\r\n      .acquireTokenPopup(\r\n        account\r\n          ? authorizeAccountRequest(account, scopes)\r\n          : accountSelectRequest(scopes)\r\n      )\r\n      .then(this.handleAuthenticationResult)\r\n      .catch(this.handleAuthenticationError);\r\n  };\r\n\r\n  public signOut = () => {\r\n    const clientId = this.getClientId();\r\n\r\n    localStorage.removeItem(clientId);\r\n    Streamlit.setComponentValue({ data: null });\r\n  };\r\n\r\n  public revalidate = () => {\r\n    const { args } = this.props;\r\n    const { clientId, authority, scopes }: Props = args;\r\n\r\n    const authData = retrieveAuthData(clientId);\r\n    if (authData === null) return Streamlit.setComponentValue({ data: null });\r\n\r\n    this.authenticate(clientId, authority, authData.account, scopes);\r\n  };\r\n\r\n  public hideComponent = () => {\r\n    if (isDev) return; // Doesn't work in dev mode\r\n\r\n    const parentWindow = window.parent;\r\n\r\n    if (parentWindow.onbeforeunload === null) {\r\n      parentWindow.onbeforeunload = () => {\r\n        sessionStorage.removeItem(\"msal.revalidated\");\r\n      };\r\n    }\r\n\r\n    const doc = parentWindow.document;\r\n    const root = doc.querySelector(\"div[id='root']\");\r\n    const msals = doc.querySelectorAll('iframe[title=\"streamlit_msal.msal\"]');\r\n\r\n    if (msals !== null && root !== null) {\r\n      msals.forEach((msal) => {\r\n        const msalParent = msal.parentElement;\r\n        if (msalParent !== null) {\r\n          msalParent.style.display = \"none\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  public componentDidMount = () => {\r\n    this.hideComponent();\r\n\r\n    Streamlit.setComponentReady();\r\n\r\n    const clientId = this.getClientId();\r\n\r\n    const authData = retrieveAuthData(clientId);\r\n\r\n    if (authData === null) return this.handleAuthenticationError(null);\r\n    if (!sessionStorage.getItem(\"msal.revalidated\")) return this.revalidate();\r\n    if (authData.expiresOn <= new Date()) return this.revalidate();\r\n\r\n    this.handleAuthenticationResult(authData);\r\n  };\r\n\r\n  public render = (): ReactNode => {\r\n    const { args } = this.props;\r\n    const { login, logout, revalidate, clientId, authority, scopes }: Props =\r\n      args;\r\n\r\n    if (login && !previousLogin) {\r\n      this.signOut();\r\n      this.authenticate(clientId, authority, null, scopes);\r\n    }\r\n    previousLogin = login;\r\n\r\n    if (logout && !previousLogout) {\r\n      this.signOut();\r\n    }\r\n    previousLogout = logout;\r\n\r\n    if (revalidate && !previousRevalidate) {\r\n      this.revalidate();\r\n    }\r\n    previousRevalidate = revalidate;\r\n\r\n    return null;\r\n  };\r\n}\r\n\r\nexport default withStreamlitConnection(Component);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Msal from \"./Msal\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Msal />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"names":["reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","assign","test1","String","test2","fromCharCode","map","n","join","test3","split","forEach","letter","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","s","call","aa","r","u","a","b","c","encodeURIComponent","Error","ba","d","f","g","h","k","l","Array","slice","apply","m","this","onError","da","ea","fa","ha","ia","ja","la","ma","na","oa","currentTarget","ka","pa","qa","ra","indexOf","sa","extractEvents","eventTypes","ta","phasedRegistrationNames","ua","registrationName","va","wa","dependencies","xa","ya","window","document","createElement","za","Aa","Ba","Ca","stateNode","Da","push","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","Pa","Qa","v","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","C","toLowerCase","Ua","Va","toUpperCase","replace","xlinkHref","Wa","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Xa","Sa","isNaN","Ta","test","Ra","removeAttribute","setAttribute","setAttributeNS","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","suspense","Ya","E","Symbol","for","Za","$a","ab","bb","cb","db","eb","fb","gb","hb","ib","jb","kb","lb","mb","iterator","nb","pb","$$typeof","_status","_result","qb","tag","_debugOwner","_debugSource","fileName","lineNumber","return","rb","sb","nodeName","xb","_valueTracker","constructor","get","set","configurable","enumerable","getValue","setValue","stopTracking","tb","yb","checked","value","zb","defaultChecked","defaultValue","_wrapperState","initialChecked","Ab","initialValue","controlled","Bb","Cb","Db","Eb","ownerDocument","activeElement","Gb","children","Children","Fb","Hb","options","selected","defaultSelected","disabled","Ib","dangerouslySetInnerHTML","Jb","isArray","Kb","Lb","textContent","Mb","Nb","Ob","Pb","Qb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","Rb","lastChild","nodeType","nodeValue","Sb","Tb","animationend","animationiteration","animationstart","transitionend","Ub","Vb","Wb","style","animation","transition","Xb","Yb","Zb","$b","ac","bc","WeakMap","Map","cc","dc","alternate","effectTag","ec","memoizedState","dehydrated","fc","hc","child","sibling","gc","ic","jc","kc","lc","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","mc","nc","srcElement","correspondingUseElement","parentNode","oc","pc","qc","topLevelType","nativeEvent","targetInst","ancestors","rc","pop","eventSystemFlags","sc","containerInfo","tc","uc","has","vc","F","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Kc","blockedOn","container","Lc","delete","pointerId","Mc","Nc","Pc","unstable_runWithPriority","priority","hydrate","Qc","Rc","Sc","Tc","shift","Uc","unstable_scheduleCallback","unstable_NormalPriority","Vc","Wc","Yc","Zc","$c","ad","bubbled","captured","eventPriority","bd","cd","dd","unstable_UserBlockingPriority","ed","fd","gd","bind","hd","id","addEventListener","Oc","jd","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","kd","ld","trim","md","setProperty","charAt","substring","nd","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","od","pd","is","qd","rd","sd","td","body","ud","vd","node","offset","nextSibling","wd","contains","compareDocumentPosition","xd","HTMLIFrameElement","contentWindow","location","href","yd","contentEditable","zd","Ad","Bd","Cd","Dd","Ed","Fd","autoFocus","Gd","__html","Hd","setTimeout","Id","clearTimeout","Jd","Kd","previousSibling","data","Ld","Math","random","Md","Nd","Od","Pd","Qd","Rd","Sd","Td","dispatchConfig","Ud","_targetInst","Vd","Wd","Xd","Yd","Zd","$d","ae","be","ce","G","Interface","isDefaultPrevented","defaultPrevented","returnValue","ee","eventPool","fe","destructor","de","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","extend","ge","he","ie","je","ke","documentMode","le","me","ne","oe","beforeInput","compositionEnd","compositionStart","compositionUpdate","pe","qe","keyCode","re","detail","se","ve","locale","which","te","ctrlKey","altKey","metaKey","char","ue","we","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","xe","ye","change","ze","Ae","Be","Ce","De","Ee","Fe","Ge","detachEvent","He","Ie","attachEvent","Je","Ke","Le","Me","_isInputEventSupported","Ne","view","Oe","Alt","Control","Meta","Shift","Pe","getModifierState","Qe","Re","Se","Te","Ue","Ve","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","We","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Xe","mouseEnter","mouseLeave","pointerEnter","pointerLeave","Ye","defaultView","parentWindow","p","$e","af","bf","cf","df","select","ef","ff","gf","hf","jf","start","selectionStart","end","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","kf","onSelect","lf","animationName","elapsedTime","pseudoElement","mf","clipboardData","nf","of","charCode","pf","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","qf","rf","repeat","sf","dataTransfer","tf","touches","targetTouches","changedTouches","uf","vf","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","wf","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","yf","zf","H","I","Af","J","K","Bf","Cf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","L","Df","Ef","Ff","getChildContext","Gf","__reactInternalMemoizedMergedChildContext","Hf","If","Jf","Kf","unstable_cancelCallback","Lf","unstable_requestPaint","Mf","unstable_now","Nf","unstable_getCurrentPriorityLevel","Of","unstable_ImmediatePriority","Pf","Qf","Rf","unstable_LowPriority","Sf","unstable_IdlePriority","Tf","Uf","unstable_shouldYield","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","_context","_currentValue","pg","childExpirationTime","qg","firstContext","expirationTime","rg","sg","context","observedBits","next","responders","tg","ug","updateQueue","baseState","baseQueue","shared","pending","effects","vg","wg","suspenseConfig","payload","callback","xg","yg","zg","x","z","ca","Ag","D","t","Bg","Cg","Dg","Eg","Component","refs","Fg","Jg","isMounted","_reactInternalFiber","enqueueSetState","Gg","Hg","Ig","enqueueReplaceState","enqueueForceUpdate","Kg","shouldComponentUpdate","isPureReactComponent","Lg","state","updater","Mg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ng","props","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Og","Pg","ref","_owner","_stringRef","Qg","Rg","lastEffect","nextEffect","firstEffect","index","Sg","Tg","mode","elementType","Ug","implementation","Vg","Wg","y","A","q","done","Xg","Yg","Zg","$g","ah","bh","ch","dh","documentElement","tagName","eh","fh","gh","M","hh","memoizedProps","revealOrder","ih","responder","jh","kh","lh","N","O","P","mh","Q","nh","oh","ph","qh","rh","sh","th","queue","uh","vh","wh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","xh","yh","zh","Ah","create","destroy","deps","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","readContext","useCallback","useContext","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useResponder","useDeferredValue","useTransition","Oh","Ph","Qh","Rh","Sh","Th","pendingProps","Uh","Vh","Wh","Xh","Yh","ReactCurrentOwner","R","Zh","$h","ai","bi","ci","di","ei","fi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","gi","hi","pendingContext","ni","oi","pi","qi","ii","retryTime","ji","fallback","unstable_avoidThisFallback","ki","li","isBackwards","rendering","renderingStartTime","last","tail","tailExpiration","tailMode","mi","ri","si","wasMultiple","multiple","onClick","onclick","size","createElementNS","createTextNode","S","ti","ui","vi","wi","T","xi","U","yi","zi","Ai","stack","Bi","WeakSet","Set","Ci","console","error","Fi","Ei","Gi","__reactInternalSnapshotBeforeUpdate","Hi","Ii","Ji","focus","Ki","Li","componentWillUnmount","Di","Mi","Ni","Oi","Pi","Qi","Ri","instance","insertBefore","_reactRootContainer","Si","Ti","display","Ui","Vi","add","then","Wi","Xi","element","Yi","Zi","$i","componentDidCatch","aj","componentStack","Rj","bj","ceil","cj","dj","V","ej","fj","gj","hj","ij","jj","W","X","kj","lj","mj","nj","oj","pj","Y","qj","rj","sj","tj","uj","vj","wj","timeoutMs","xj","yj","Z","zj","lastExpiredTime","Aj","firstPendingTime","lastPingedTime","nextKnownPendingLevel","callbackExpirationTime","callbackPriority","callbackNode","Bj","timeout","Cj","Dj","Ej","Fj","Gj","Hj","finishedWork","finishedExpirationTime","lastSuspendedTime","Ij","timeoutHandle","Jj","busyMinDurationMs","busyDelayMs","Kj","Mj","Nj","pingCache","Oj","w","ub","Pj","Xc","Qj","Sj","firstSuspendedTime","rangeCount","wb","activeElementDetached","focusedElem","selectionRange","Tj","B","min","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","vb","Uj","Vj","Wj","hidden","_ctor","default","ob","Xj","_calculateChangedBits","unstable_observedBits","Zj","isReactComponent","pendingChildren","ak","bk","ck","dk","ek","fk","Jc","_internalRoot","gk","ik","hasAttribute","hk","kk","jk","unmount","querySelectorAll","JSON","stringify","form","Lj","lk","Events","findFiberByHostInstance","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Yj","overrideHookState","overrideProps","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","bundleType","version","rendererPackageName","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","checkDCE","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","__self","__source","jsx","setState","forceUpdate","result","keyPrefix","func","count","escape","IsSomeRendererActing","toArray","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","memo","MessageChannel","unstable_forceFrameRate","performance","cancelAnimationFrame","requestAnimationFrame","floor","port2","port1","onmessage","postMessage","sortIndex","startTime","priorityLevel","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","MemoryStorage","cache","getItem","StubbedNetworkModule","sendGetRequestAsync","Promise","reject","createClientAuthError","methodNotImplemented","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","correlationId","discard","NavigationClient","defaultNavigateWindow","FetchClient","response","headers","getFetchHeaders","DEFAULT_POPUP_TIMEOUT_MS","DEFAULT_IFRAME_TIMEOUT_MS","DEFAULT_REDIRECT_TIMEOUT_MS","buildConfiguration","_ref","isBrowserEnvironment","auth","userInputAuth","userInputCache","system","userInputSystem","telemetry","userInputTelemetry","clientId","Constants","EMPTY_STRING","authority","DEFAULT_AUTHORITY","knownAuthorities","authorityMetadata","redirectUri","postLogoutRedirectUri","clientCapabilities","protocolMode","ProtocolMode","AAD","OIDCOptions","defaultScopes","OPENID_SCOPE","PROFILE_SCOPE","azureCloudOptions","tenant","skipAuthorityMetadataCache","DEFAULT_CACHE_OPTIONS","temporaryCacheLocation","BrowserCacheLocation","SessionStorage","storeAuthStateInCookie","secureCookies","cacheMigrationEnabled","cacheLocation","LocalStorage","claimsBasedCachingEnabled","loggerCallback","logLevel","LogLevel","Info","piiLoggingEnabled","DEFAULT_SYSTEM_OPTIONS","loggerOptions","DEFAULT_LOGGER_OPTIONS","networkClient","navigationClient","loadFrameTimeout","windowHashTimeout","iframeHashTimeout","navigateFrameWait","asyncPopups","allowRedirectInIframe","allowNativeBroker","DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS","pollIntervalMilliseconds","BrowserConstants","DEFAULT_POLL_INTERVAL_MS","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","OIDC","Logger","providedSystemOptions","warning","createClientConfigurationError","ClientConfigurationErrorCodes","DEFAULT_AUTH_OPTIONS","AuthorityMetadataEntity","expiresAt","TimeUtils","nowSeconds","REFRESH_TIME_SECONDS","preferred_network","metadata","aliasesFromNetwork","fromNetwork","updateEndpointMetadata","end_session_endpoint","issuer","endpointsFromNetwork","updateCanonicalAuthority","canonical_authority","resetExpiresAt","logger","trace","eventName","RegionDiscovery","networkInterface","performanceClient","autodetectedRegionName","IMDS_OPTIONS","ResponseCodes","httpSuccess","localIMDSVersionResponse","regionDiscoveryMetadata","region_source","Authority","cacheManager","authorityOptions","canonicalAuthority","_canonicalAuthority","validateAsUri","region_outcome","regionDiscovery","authorityUri","HostNameAndPort","endsWith","CIAM_AUTH_URL","AuthorityType","Ciam","pathSegments","PathSegments","Adfs","DSTS","Dsts","authorityType","urlString","UrlString","_canonicalAuthorityUrlComponents","canonicalAuthorityUrlComponents","getUrlComponents","authorizationEndpoint","discoveryComplete","replacePath","authorization_endpoint","token_endpoint","endpointResolutionError","jwksUri","jwks_uri","canReplaceTenant","replaceTenant","cachedAuthorityUrlComponents","cachedAuthorityParts","cachedPart","tenantId","currentPart","endpoint","defaultOpenIdConfigurationEndpoint","AppMetadataEntity","generateAppMetadataCacheKey","environment","APP_METADATA","Separators","CACHE_KEY_SEPARATOR","ThrottlingEntity","isThrottlingEntity","entity","validateKey","ProtocolUtils","setRequestState","cryptoObj","userState","libraryState","generateLibraryState","RESOURCE_DELIM","noCryptoObject","stateObj","CcsCredentialType","CacheRecord","accountEntity","idTokenEntity","accessTokenEntity","refreshTokenEntity","appMetadataEntity","account","idToken","accessToken","refreshToken","appMetadata","BrowserConfigurationAuthErrorMessages","storageNotSupported","BrowserStorage","validateWindowStorage","windowStorage","extractBrowserRequestState","browserCrypto","BrowserCacheManager","CacheManager","cacheConfig","cryptoImpl","staticAuthorityOptions","COOKIE_LIFE_MULTIPLIER","internalStorage","migrateCacheEntries","verbose","idTokenKey","CACHE_PREFIX","PersistentCacheKeys","ID_TOKEN","clientInfoKey","CLIENT_INFO","browserStorage","errorKey","cacheKey","migrateCacheEntry","values","setTemporaryCache","newKey","accountKeys","StaticCacheKeys","ACCOUNT_KEYS","tokenKeys","TOKEN_KEYS","getKeys","credObj","validateAndParseJson","CredentialType","CacheHelpers","updateCredentialCacheKey","addTokenKey","tracePii","ACCESS_TOKEN_WITH_AUTH_SCHEME","ACCESS_TOKEN","REFRESH_TOKEN","isAccountKey","addAccountKeyToMap","parsedJson","parse","jsonValue","accountKey","parsedAccount","AccountEntity","isAccountEntity","generateAccountKey","setItem","getAccountKeys","splice","removalIndex","removeAccount","removeAccountKeyFromMap","removeIdToken","removeTokenKey","removeRefreshToken","item","getTokenKeys","isInIframe","parent","opener","POPUP_NAME_PREFIX","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","_value$errorCodes","throttleTime","removeItem","ServerError","errorCodes","errorMessage","subError","checkResponseStatus","checkResponseForRetryAfter","calculateThrottleTime","parseInt","HeaderNames","RETRY_AFTER","NetworkManager","sendPostRequest","tokenEndpoint","preProcess","sendPostRequestAsync","networkError","RequestValidator","validateRedirectUri","redirectUriEmpty","PromptValue","promptValues","validateClaims","claims","RequestParameterBuilder","parameters","addResponseTypeCode","AADServerParamKeys","RESPONSE_TYPE","CODE_RESPONSE_TYPE","addResponseTypeForTokenAndIdToken","RESPONSE_MODE","responseMode","ResponseMode","QUERY","addNativeBroker","NATIVE_BROKER","addOidcScopes","includes","scopes","requestScopes","addClientId","CLIENT_ID","addRedirectUri","addPostLogoutRedirectUri","POST_LOGOUT_URI","addDomainHint","domainHint","SSOTypes","DOMAIN_HINT","addLoginHint","loginHint","CCS_HEADER","addCcsOid","clientInfo","uid","utid","addSid","sid","SID","mergedClaims","CLAIMS","addCorrelationId","X_CLIENT_SKU","libraryInfo","sku","X_CLIENT_VER","cpu","X_CLIENT_CPU","appTelemetry","X_APP_NAME","addPrompt","prompt","validatePrompt","STATE","addNonce","nonce","addCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","addAuthorizationCode","code","addDeviceCode","DEVICE_CODE","acquireTokenAuthority","BaseClient","configuration","config","buildClientConfiguration","cryptoUtils","cryptoInterface","storageInterface","networkManager","CONTENT_TYPE","URL_FORM_CONTENT_TYPE","systemOptions","preventCorsPreflight","ccsCred","buildClientInfoFromHomeAccountId","credential","PopTokenGenerator","generateCnf","request","_this$performanceClie","addQueueMeasurement","PerformanceEvents","PopTokenGenerateCnf","reqCnf","invokeAsync","generateKid","reqCnfString","base64Encode","kid","_this$performanceClie2","PopTokenGenerateKid","getPublicKeyThumbprint","TokenCacheContext","tokenCache","hasChanged","ResponseHandler","cacheStorage","serializableCache","persistencePlugin","serverResponse","stateNotFound","decodedServerResponseState","decodeURIComponent","decodedRequestState","requestState","suberror","isInteractionRequiredError","error_description","InteractionRequiredAuthError","timestamp","trace_id","correlation_id","includeRedirectUri","queryString","createAuthCodeUrlQueryString","AuthClientCreateQueryString","appendQueryString","acquireToken","authCodePayload","_response$headers","requestCannotBeMade","reqTimestamp","requestId","X_MS_REQUEST_ID","responseHandler","authOptions","handleFragmentResponse","serverParams","cachedState","ServerTelemetryManager","telemetryRequest","cacheOutcome","CacheOutcome","NOT_APPLICABLE","apiId","wrapperSKU","wrapperVer","telemetryCacheKey","SERVER_TELEM_CONSTANTS","CACHE_KEY","VALUE_SEPARATOR","platformFields","getRegionDiscoveryFields","requestWithRegionDiscoveryFields","CATEGORY_SEPARATOR","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errors","errorCount","OVERFLOW_TRUE","OVERFLOW_FALSE","BaseInteractionClient","storageImpl","eventHandler","nativeMessageHandler","createNewGuid","clone","MSAL_SKU","clearCacheOnLogout","accountInfoIsEqual","getActiveAccount","setActiveAccount","generateAccountCacheKey","clear","StandardInteractionClientInitializeAuthorizationCodeRequest","generatedPkceParams","generatePkceCodes","GeneratePkceCodes","authCodeRequest","codeVerifier","verifier","challenge","logoutRequest","logoutHint","validLogoutRequest","NativeAuthErrorMessages","NativeAuthError","AuthError","errorCode","description","ext","setPrototypeOf","status","executeTokenRequest","RefreshTokenClientExecuteTokenRequest","SilentFlowClient","authResponse","acquireCachedToken","SilentCacheClientAcquireToken","silentRequest","serverTelemetryManager","initializeServerTelemetryManager","ApiId","acquireTokenSilent_silentFlow","silentAuthClient","SilentFlowClientAcquireCachedToken","addFields","fromCache","BrokerServerParamKeys","NativeInteractionClient","provider","accountId","nativeStorageImpl","nativeStorageManager","nativeRequest","initializeNativeRequest","success","isNativeBroker","messageBody","sendMessage","validatedResponse","validateNativeResponse","subErrorCode","createSilentCacheRequest","cachedAccount","acquireTokensFromCache","nativeAccountId","idTokenClaims","NativeMessageHandler","handshakeTimeoutMs","extensionId","resolvers","handshakeResolvers","messageChannel","handshakeEvent","NativeMessageHandlerHandshake","req","channel","NativeConstants","CHANNEL_ID","resolve","responseId","createProvider","preferredProvider","sendHandshakeRequest","InteractionHandler","authCodeModule","authModule","userCancelled","PopupClient","StandardInteractionClient","unloadWindow","nativeStorage","popupWindowAttributes","popup","openSizedPopup","popupName","acquireTokenPopupAsync","logout","initializeLogoutRequest","generateLogoutPopupName","acquireTokenPopup","initializeAuthorizationCodeRequest","validRequest","fetchNativeAccountIdMeasurement","navigateUrl","authClient","getAuthCodeUrl","RedirectHandler","requestUrl","TemporaryCacheKeys","ORIGIN_URI","params","redirectStartPage","CORRELATION_ID","cacheCodeRequest","infoPii","initializeAuthorizationRequest","StandardInteractionClientInitializeAuthorizationRequest","InteractionType","Redirect","updateCacheEntries","event","persisted","cleanRequestByState","interactionHandler","getRedirectStartPage","verbosePii","urlParts","hash","urlComponents","Protocol","history","replaceState","origin","pathname","initiateAuthRequest","SilentIframeClient","username","SilentRefreshClient","baseRequest","TokenCache","storage","info","id_token","createBrowserAuthError","unableToLoadToken","cacheRecord","cacheRecordAccount","loadIdToken","homeAccountId","loadAccessToken","loadRefreshToken","authorityUrl","loadAccount","client_info","hostnameAndPort","generateAuthenticationResult","SilentAuthCodeClient","authCodeRequired","StandardController","operatingContext","atsAsyncMeasurement","CryptoOps","DEFAULT_CRYPTO_IMPLEMENTATION","EventHandler","DEFAULT_BROWSER_CACHE_MANAGER","nativeCacheOptions","nativeInternalStorage","trackPageVisibilityWithMeasurement","createController","initMeasurement","InitializeClientApplication","emitEvent","EventType","INITIALIZE_START","INITIALIZE_END","loggedInAccounts","getAllAccounts","redirectResponseKey","redirectResponse","getCachedNativeRequest","handleRedirectPromise","nativeExtensionProvider","getTemporaryCache","createRedirectClient","LOGIN_SUCCESS","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE","preflightBrowserEnvironmentCheck","isLoggedIn","canUseNative","isFatalNativeAuthError","getBrowserStorage","setInteractionInProgress","getRequestCorrelationId","atPopupMeasurement","AcquireTokenPopup","Popup","ACQUIRE_TOKEN_START","acquireTokenNative","catch","createPopupClient","idTokenSize","LOGIN_FAILURE","measurement","increment","visibilityChangeCount","ssoSilent","_this$ssoSilentMeasur","S256_HASH_ALG","modulusLength","publicExponent","PUBLIC_EXPONENT","validateCryptoAvailable","cryptoNonExistent","JoseHeaderErrorMessages","missingAlgError","JoseHeaderError","JoseHeader","typ","alg","getShrHeaderString","shrHeaderOptions","DatabaseStorage","dbName","DB_NAME","tableName","DB_TABLE_NAME","dbOpen","open","openDB","createObjectStore","closeConnection","close","validateDbIsOpen","AsyncMemoryStorage","storeName","inMemoryCache","handleDatabaseAccessError","BrowserAuthError","CryptoKeyStore","asymmetricKeys","CryptoKeyStoreNames","symmetricKeys","base64Decode","keyPair","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","kty","publicKeyJwk","privateKeyJwk","exportJwk","privateKey","urlEncode","nativeExtensionNotInstalled","nativeConnectionNotEstablished","ErrorLink","invalidBase64String","pkceNotCreated","emptyNavigateUri","hashEmptyError","noStateInHash","hashDoesNotContainKnownProperties","unableToParseState","stateInteractionTypeMismatch","interactionInProgress","popupWindowError","emptyWindowError","monitorPopupTimeout","monitorWindowTimeout","redirectInIframe","blockIframeReload","blockNestedPopups","iframeClosedPrematurely","silentLogoutUnsupported","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSetError","invalidCacheType","nonBrowserEnvironment","databaseNotOpen","noNetworkConnectivity","postRequestFailed","getRequestFailed","failedToParseResponse","cryptoKeyNotFound","authCodeOrNativeAccountIdRequired","spaCodeAndNativeAccountIdPresent","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","eventCallbacks","handleAccountCacheChange","addEventCallback","callbackId","enableAccountStorageEvents","LOGOUT_SUCCESS","LOGOUT_FAILURE","INTERACTION_IN_PROGRESS_VALUE","INVALID_GRANT_ERROR","POPUP_WIDTH","POPUP_HEIGHT","PREFERRED_EXTENSION_ID","HandshakeResponse","GetToken","Response","POST","WRAPPER_SKU","WRAPPER_VER","DEFAULT_REQUEST","OIDC_DEFAULT_SCOPES","KEY_FORMAT_JWK","DB_VERSION","Default","jswPayload","getJWSPayload","encodedToken","base64Decoded","rawClientInfo","clientInfoEmptyError","decodedClientInfo","scopes_supported","msgraph_host","rbac_url","tenant_discovery_endpoint","preferred_cache","aliases","AzureCloudInstance","None","AzurePublic","AzurePpe","AzureChina","AzureGermany","AzureUsGovernment","accountFilter","accountInfo","getAccountInfoFromEntity","validAccounts","getAccountInfoFilteredBy","allAccounts","getBaseAccountInfo","accountEntities","getAccountsFilteredBy","getAccountInfo","getIdToken","idTokenClaimsMatchAccountFilter","secret","matchLoginHint","invalidCacheRecord","storeInCache","setIdTokenCredential","setAppMetadata","accessTokenFilter","credentialType","realm","tokenType","currentScopes","ScopeSet","fromString","accessTokenKeyMatchesFilter","tokenEntity","getAccessTokenCredential","credentialMatchesFilter","setAccessTokenCredential","allAccountKeys","matchingAccounts","getAccount","matchHomeAccountId","matchLocalAccountId","localAccountId","matchEnvironment","matchNativeAccountId","matchAuthorityType","lowerCaseKey","clientIdValidation","familyIdValidation","THE_FAMILY_ID","filter","matchClientId","userAssertionHash","matchUserAssertionHash","familyId","matchFamilyId","requestedClaimsHash","matchTokenType","AuthenticationScheme","SSH","keyId","matchKeyId","getAppMetadataFilteredByInternal","allCacheKeys","matchingAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","host","isAuthorityMetadata","getAuthorityMetadata","matchedEntity","removeAllAccounts","removeAccountContext","allTokenKeys","removedCredentials","removeAccessToken","POP","removeTokenBindingKey","bindingKeyNotRemoved","removeAppMetadata","isAppMetadata","generateAccountId","accountInterface","CacheAccountType","ADFS_ACCOUNT_TYPE","GENERIC_ACCOUNT_TYPE","env","accountDetails","getPreferredCache","generateTarget","credentialEntity","generateClaimsHash","generateScheme","createIdTokenEntity","atEntity","extendedExpiresOn","extExpiresOn","DEFAULT_NETWORK_IMPLEMENTATION","DEFAULT_LIBRARY_INFO","SKU","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","DEFAULT_COMMON_TENANT","DEFAULT_LOGGER_IMPLEMENTATION","userLoggerOption","userAuthOptions","userSystemOptions","cacheOptions","userCacheOptions","storageImplementation","clientCredentials","isOidcProtocolMode","clearKeystore","hashString","AuthErrorMessages","setCorrelationId","endSessionEndpointNotSupported","keyIdMissing","missingTenantIdError","nestedAppAuthBridgeDisabled","clientInfoDecodingError","tokenParsingError","nullOrEmptyToken","openIdConfigError","hashNotDeserialized","invalidState","stateMismatch","nonceMismatch","authTimeNotFound","maxAgeTranspired","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noAccountInSilentRequest","invalidCacheEnvironment","noAccountFound","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsCnfRequiredForSignedJwt","authorizationCodeMissingFromServerResponse","invalidAuthenticationHeader","cannotSetOIDCOptions","authorityMismatch","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyInputScopesError","invalidPromptValue","invalidClaims","tokenRequestEmpty","logoutRequestEmpty","invalidCodeChallengeMethod","pkceParamsMissing","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","InteractionRequiredServerErrorMessage","interactionRequired","noTokensFound","nativeAccountUnavailable","InteractionRequiredAuthErrorMessages","traceId","packageName","packageVersion","level","setLoggerOptions","createDefaultLoggerOptions","defaultLoggerCallback","localCallback","logMessage","containsPii","logHeader","log","executeCallback","message","inputScopes","filteredInput","scopeArr","StringUtils","removeEmptyStringsFromArray","scope","scopeSet","inputScopeString","containsOnlyOIDCScopes","removeScope","OFFLINE_ACCESS_SCOPE","removeOIDCScopes","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","asArray","every","containsScope","AcquireTokenByCode","AcquireTokenByRefreshToken","AcquireTokenSilent","AcquireTokenSilentAsync","CryptoOptsGetPublicKeyThumbprint","CryptoOptsSignJwt","SilentIframeClientAcquireToken","SilentRefreshClientAcquireToken","SsoSilent","StandardInteractionClientGetDiscoveredAuthority","FetchAccountIdWithNativeBroker","RefreshTokenClientExecutePostToTokenEndpoint","RefreshTokenClientCreateTokenRequestBody","SilentFlowClientGenerateResultFromCacheRecord","InitializeSilentRequest","SilentHandlerInitiateAuthRequest","SilentHandlerLoadFrame","StandardInteractionClientCreateAuthCodeClient","HandleCodeResponse","AuthClientAcquireToken","AuthClientCreateTokenRequestBody","HandleServerTokenResponse","AuthorityUpdateCloudDiscoveryMetadata","AuthorityUpdateEndpointMetadata","UsernamePasswordClientAcquireToken","NativeGenerateAuthResult","ClearTokensAndKeysWithClaims","GenerateCodeVerifier","GenerateCodeChallengeFromVerifier","Sha256Digest","NotStarted","InProgress","Completed","_urlString","canonicalizeUri","lowerCaseUrl","AUTHORIZATION_PENDING","NOT_DEFINED","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","TOKEN_RESPONSE_TYPE","REDIRECT","CLIENT_ERROR_RANGE_START","CLIENT_ERROR_RANGE_END","SERVER_ERROR_RANGE_END","X_MS_HTTP_VERSION","X_CLIENT_LAST_TELEM","X_MS_LIB_CAPABILITY","ID_TOKEN_HINT","CLIENT_ASSERTION","CLIENT_ASSERTION_TYPE","TOKEN_TYPE","ON_BEHALF_OF","FOCI","XMS_CC","CONSENT","NONE","CREATE","ACCOUNT","LOGIN_HINT","CONSUMERS","ACCOUNT_ID","HOMEACCOUNT_ID","S256","ServerResponseType","FORM_POST","RESOURCE_OWNER_PASSWORD_GRANT","REFRESH_TOKEN_GRANT","DEVICE_CODE_GRANT","MSSTS_ACCOUNT_TYPE","CLIENT_INFO_SEPARATOR","AUTHORITY_METADATA_CONSTANTS","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","BEARER","DEFAULT_THROTTLE_TIME_SECONDS","THROTTLING_PREFIX","Errors","PasswordGrantConstants","RegionDiscoverySources","FAILED_AUTO_DETECTION","RegionDiscoveryOutcomes","CONFIGURED_NO_AUTO_DETECTION","CONFIGURED_NOT_DETECTED","NO_CACHED_ACCESS_TOKEN","obj","strObj","startsWith","str","lastIndexOf","decode","pair","round","getTime","isTokenExpired","expiresOn","expirationSec","stripLeadingHashOrQuery","responseString","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","src","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","MessageHeader","Type","BufferType","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isNumber","isBoolean","isFunction","isObject","isPromise","isIterable","isAsyncIterable","asyncIterator","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isReadableInterop","isReadableNodeStream","isFlatbuffersByteBuffer","valueToString","toPrimitive","ArrayBuffer","isView","_","__awaiter","thisArg","_arguments","generator","fulfilled","step","rejected","__values","__await","__asyncGenerator","verb","resume","fulfill","settle","__asyncDelegator","__asyncValues","SuppressedError","decoder","TextDecoder","decodeUtf8","buffer","encoder","TextEncoder","encodeUtf8","encode","SharedArrayBuf","SharedArrayBuffer","memcpy","targetByteOffset","sourceByteLength","byteLength","targetByteLength","dst","Uint8Array","byteOffset","joinUint8Arrays","chunks","xOffset","yOffset","xLen","yLen","collapseContiguousByteRanges","sliced","Number","POSITIVE_INFINITY","subarray","toArrayBufferView","ArrayBufferViewCtor","bytes","toInt32Array","Int32Array","toUint8Array","pump","toArrayBufferViewIterator","ArrayCtor","wrap","buffers","it","toArrayBufferViewAsyncIterator","emit","rebaseValueOffsets","valueOffsets","isArrowBigNumSymbol","BigNum","_len","xs","_key","SignedBigNum","_len2","args","_key2","UnsignedBigNum","_len3","_key3","DecimalBigNum","_len4","_key4","bignumToNumber","bn","signed","words","negative","word","bignumToString","bignumToBigInt","decimalToString","digits","base64","Uint32Array","base32","Uint16Array","checks","reverse","toJSON","BN","new","num","isSigned","Int8Array","Int16Array","unsigned","decimal","proto","DataType","isNull","typeId","Null","isInt","Int","isFloat","Float","isBinary","Binary","isUtf8","Utf8","isBool","Bool","isDecimal","Decimal","isDate","isTime","Time","isTimestamp","Timestamp","isInterval","Interval","isList","List","isStruct","Struct","isUnion","Union","isFixedSizeBinary","FixedSizeBinary","isFixedSizeList","FixedSizeList","isMap","isDictionary","Dictionary","isDenseUnion","Dense","isSparseUnion","Sparse","_a","ArrayType","_b","Int_","bitWidth","super","_c","Int32","precision","HALF","SINGLE","Float32Array","DOUBLE","Float64Array","_d","_e","_f","_g","scale","_h","Date_","unit","_j","Time_","_k","Timestamp_","timezone","_l","Interval_","_m","valueType","valueField","_o","_p","Union_","typeIds","typeIdToChildIndex","idx","_q","byteWidth","_r","listSize","_s","Map_","keysSorted","keyType","childType","_t","getId","atomicDictionaryId","dictionary","indices","isOrdered","low","strideForType","_u","Visitor","visitMany","nodes","visit","getVisitFn","visitor","throwIfNotFound","getVisitFnByTypeId","inferDType","visitNull","_node","visitBool","visitInt","visitFloat","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","visitTimestamp","visitTime","visitDecimal","visitList","visitStruct","visitUnion","visitDictionary","visitInterval","visitFixedSizeList","visitMap","dtype","Int8","visitInt8","Int16","visitInt16","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","SECOND","MILLISECOND","MICROSECOND","NANOSECOND","DAY","DAY_TIME","YEAR_MONTH","f64","u32","uint16ToFloat64","expo","sigf","sign","pow","NaN","SetVisitor","wrapSet","_1","_2","setValid","setEpochMsToMillisecondsLong","epochMs","trunc","setVariableWidthBytes","setInt","_ref2","setFloat","_ref3","setFloat16","_ref4","float64ToUint16","setDateDay","_ref5","setEpochMsToDays","setDateMillisecond","_ref6","setTimestampSecond","_ref10","setTimestampMillisecond","_ref11","setTimestampMicrosecond","_ref12","setEpochMsToMicrosecondsLong","setTimestampNanosecond","_ref13","setEpochMsToNanosecondsLong","setTimeSecond","_ref14","setTimeMillisecond","_ref15","setTimeMicrosecond","_ref16","setTimeNanosecond","_ref17","setDenseUnion","childIndex","setSparseUnion","setIntervalDayTime","_ref19","setIntervalYearMonth","_ref20","setBool","setAnyFloat","setUtf8","_ref9","setBinary","_ref8","setFixedSizeBinary","_ref7","stride","setDate","setTimestamp","setTime","setDecimal","_ref18","setList","itr","setStruct","childSetters","Vector","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","_setStructMapValue","setUnion","setDictionary","setIntervalValue","setFixedSizeList","setMap","entries","kParent","kRowIndex","StructRow","rowIndex","Proxy","StructRowProxyHandler","json","getVisitor","StructRowIterator","childFields","numChildren","defineProperties","writable","isExtensible","deleteProperty","preventExtensions","ownKeys","row","findIndex","Reflect","setVisitor","GetVisitor","wrapGet","getValid","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToDate","epochDaysToMs","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","_ref21","getIntervalYearMonth","_ref22","interval","int32s","getNull","_data","_index","getBool","getInt","getFloat","getFloat16","getUtf8","getBinary","getFixedSizeBinary","getDate","getTimestamp","getDecimal","getList","begin","getStruct","getUnion","getDictionary","getInterval","getFixedSizeList","getMap","MapRow","kKeys","kVals","memoize","MapRowProxyHandler","MapRowIterator","vals","keyIndex","numKeys","tmp","clampRange","len","lhs","rhs","isNaNFast","createElementComparator","valueOfSearch","compareArrayLike","comparators","createSubElementsComparator","createMapComparator","createArrayLikeComparator","createVectorComparator","allowEmpty","createObjectComparator","arr","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","ChunkedIterator","numChunks","getChunkIterator","chunkIndex","chunkIterator","computeChunkNullCounts","nullCount","chunk","computeChunkOffsets","offsets","sliceChunks","slices","max","binarySearch","mid","isChunkedValid","wrapChunkedCall1","chunkedFn","_offsets","wrapChunkedCall2","wrapChunkedIndexOf","chunkedIndexOf","fromIndex","total","byte","bit","getBit","truncateBitmap","bitmap","alignedSize","packBools","BitIterator","byteIndex","popcnt_bit_range","sum","rhsInside","lhsInside","cnt","pos","DataView","popcnt_uint32","getUint32","getUint16","getUint8","popcnt_array","uint32","IndexOfVisitor","indexOfValue","searchElement","nullBitmap","isValid","indexOfNull","indexOfUnion","IteratorVisitor","vectorIterator","vector","inner","VectorIterator","GetByteLengthVisitor","____","getByteLength","getDenseUnionByteLength","getSparseUnionByteLength","getUtf8ByteLength","getBinaryByteLength","getListByteLength","getFixedSizeListByteLength","getUnionByteLength","visitorsByTypeId","vectorPrototypesByTypeId","flatMap","Data","unchunkedData","_byteLength","_nullCount","VectorName","iteratorVisitor","others","flat","chunk_length","array","getChild","getChildAt","isMemoized","MemoizedVector","newData","cloned","unmemoize","isConcatSpreadable","indexOfVisitor","byteLengthVisitor","cachedValue","nullable","_changeLengthAndBackfillNullBitmap","childStride","_sliceBuffers","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","freeze","MakeDataVisitor","makeData","Schema","fields","dictionaries","generateDictionaryMap","names","fieldNames","selectAt","fieldIndices","Boolean","other","curFields","mergeMaps","newFields","f2","newDictionaries","Field","m1","m2","TypeComparator","compareSchemas","schema","compareManyFields","compareFields","field","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","compareTime","compareUnion","compareInterval","RecordBatch","ensureSameLengthData","_dictionaries","collectDictionaries","numCols","numRows","Table","setChild","setChildAt","columnNames","columnIndices","subset","maxLength","nullBitmapSize","_InternalEmptyPlaceholderRecordBatch","distributeVectorsIntoRecordBatches","vecs","cols","batches","numBatches","batchLength","numColumns","isFinite","distributeChildren","uniformlyDistributeChunksAcrossRecordBatches","unshift","unwrap","batch","empty","nameToIndex","columnName","oldToNew","newIdx","Block","bb_pos","__init","readInt64","metaDataLength","readInt32","bodyLength","sizeOf","createBlock","builder","prep","writeInt64","pad","writeInt32","int32","float32","float64","isLittleEndian","Long","high","ZERO","toFloat64","equals","Encoding","Endianness","DictionaryKind","ByteBuffer","bytes_","position_","allocate","byte_size","position","setPosition","capacity","readInt8","readUint8","readInt16","readUint16","readUint32","readUint64","readFloat32","readFloat64","writeInt8","writeUint8","writeInt16","writeUint16","writeUint32","writeUint64","writeFloat32","writeFloat64","getBufferIdentifier","__offset","vtable_offset","vtable","__union","__string","opt_encoding","UTF8_BYTES","codePoint","__union_with_string","__indirect","__vector","__vector_len","__has_identifier","ident","charCodeAt","createLong","createScalarList","listAccessor","listLength","ret","createObjList","unpack","Builder","opt_initial_size","initial_size","minalign","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","string_maps","space","forceDefaults","dataBuffer","asUint8Array","additional_bytes","align_size","old_buf_size","growByteBuffer","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","finishSizePrefixed","requiredField","table","table_start","vtable_start","startVector","elem_size","num_elems","alignment","endVector","createSharedString","createString","utf8","createObjectOffset","pack","createObjectOffsetList","list","createStructOffsetList","startFunc","KeyValue","getRootAsKeyValue","getSizePrefixedRootAsKeyValue","optionalEncoding","startKeyValue","addKey","keyOffset","addValue","valueOffset","endKeyValue","createKeyValue","getRootAsInt","getSizePrefixedRootAsInt","startInt","addBitWidth","addIsSigned","endInt","createInt","DictionaryEncoding","getRootAsDictionaryEncoding","getSizePrefixedRootAsDictionaryEncoding","indexType","dictionaryKind","DenseArray","startDictionaryEncoding","addId","addIndexType","indexTypeOffset","addIsOrdered","addDictionaryKind","endDictionaryEncoding","getRootAsField","getSizePrefixedRootAsField","typeType","childrenLength","customMetadata","customMetadataLength","startField","addName","nameOffset","addNullable","addTypeType","addType","typeOffset","addDictionary","dictionaryOffset","addChildren","childrenOffset","createChildrenVector","startChildrenVector","numElems","addCustomMetadata","customMetadataOffset","createCustomMetadataVector","startCustomMetadataVector","endField","getRootAsSchema","getSizePrefixedRootAsSchema","endianness","Little","fieldsLength","features","featuresLength","startSchema","addEndianness","fieldsOffset","createFieldsVector","startFieldsVector","addFeatures","featuresOffset","createFeaturesVector","startFeaturesVector","endSchema","finishSchemaBuffer","finishSizePrefixedSchemaBuffer","createSchema","Footer","getRootAsFooter","getSizePrefixedRootAsFooter","V1","dictionariesLength","recordBatches","recordBatchesLength","startFooter","addVersion","addSchema","schemaOffset","addDictionaries","dictionariesOffset","startDictionariesVector","addRecordBatches","recordBatchesOffset","startRecordBatchesVector","endFooter","finishFooterBuffer","finishSizePrefixedFooterBuffer","flatbuffers","Footer_","V4","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","_Footer","OffHeapFooter","numRecordBatches","FileBlock","numDictionaries","dictionaryBatchesOffset","block","getRecordBatch","getDictionaryBatch","_footer","fileBlock","_Block","fromIterable","cmd","threw","bufferLength","byteRange","throw","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","stream","events","onEvent","race","cleanup","evt","toDOMStream","toNodeStream","reader","closed","cancel","reason","read","handler","ITERATOR_DONE","ArrowJSON","_json","ReadableInterop","tee","_getDOMStream","pipe","_getNodeStream","pipeTo","pipeThrough","duplex","_DOMStream","_nodeStream","AsyncQueue","_values","_closedPromise","_closedPromiseResolve","write","_ensureOpen","abort","_error","streamAdapters","peek","AsyncByteQueue","ByteStream","ByteStreamSource","AsyncByteStream","AsyncByteStreamSource","RandomAccessFile","readAt","getInt32","seek","nBytes","AsyncRandomAccessFile","file","_handle","_pending","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","_times","product","_plus","lessThan","greaterThan","hex","times","plus","out_buffer","fromNumber","out","posn","group","convertArray","multiply","right","negate","this_high","other_high","Int128","L0","L1","L2","L3","R0","R1","R2","R3","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","readTypeIds","readDictionary","nextBufferRange","_type","JSONVectorLoader","sources","joined","binaryDataFromJSON","BodyCompressionMethod","CompressionType","BodyCompression","getRootAsBodyCompression","getSizePrefixedRootAsBodyCompression","codec","LZ4_FRAME","method","BUFFER","startBodyCompression","addCodec","addMethod","endBodyCompression","createBodyCompression","Buffer","createBuffer","FieldNode","createFieldNode","null_count","getRootAsRecordBatch","getSizePrefixedRootAsRecordBatch","nodesLength","buffersLength","compression","startRecordBatch","addLength","addNodes","nodesOffset","startNodesVector","addBuffers","buffersOffset","startBuffersVector","addCompression","compressionOffset","endRecordBatch","DictionaryBatch","getRootAsDictionaryBatch","getSizePrefixedRootAsDictionaryBatch","isDelta","startDictionaryBatch","addData","dataOffset","addIsDelta","endDictionaryBatch","FloatingPoint","getRootAsFloatingPoint","getSizePrefixedRootAsFloatingPoint","startFloatingPoint","addPrecision","endFloatingPoint","createFloatingPoint","getRootAsDecimal","getSizePrefixedRootAsDecimal","startDecimal","addScale","endDecimal","createDecimal","getRootAsDate","getSizePrefixedRootAsDate","startDate","addUnit","endDate","createDate","getRootAsTime","getSizePrefixedRootAsTime","endTime","createTime","getRootAsTimestamp","getSizePrefixedRootAsTimestamp","startTimestamp","addTimezone","timezoneOffset","endTimestamp","createTimestamp","getRootAsInterval","getSizePrefixedRootAsInterval","startInterval","endInterval","createInterval","getRootAsUnion","getSizePrefixedRootAsUnion","typeIdsLength","typeIdsArray","startUnion","addMode","addTypeIds","typeIdsOffset","createTypeIdsVector","startTypeIdsVector","endUnion","createUnion","getRootAsFixedSizeBinary","getSizePrefixedRootAsFixedSizeBinary","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","createFixedSizeBinary","getRootAsFixedSizeList","getSizePrefixedRootAsFixedSizeList","startFixedSizeList","addListSize","endFixedSizeList","createFixedSizeList","getRootAsMap","getSizePrefixedRootAsMap","startMap","addKeysSorted","endMap","createMap","Message","getRootAsMessage","getSizePrefixedRootAsMessage","headerType","header","startMessage","addHeaderType","addHeader","headerOffset","addBodyLength","endMessage","finishMessageBuffer","finishSizePrefixedMessageBuffer","createMessage","getRootAsNull","getSizePrefixedRootAsNull","startNull","endNull","createNull","getRootAsBinary","getSizePrefixedRootAsBinary","startBinary","endBinary","createBinary","getRootAsBool","getSizePrefixedRootAsBool","startBool","endBool","createBool","getRootAsUtf8","getSizePrefixedRootAsUtf8","startUtf8","endUtf8","createUtf8","getRootAsList","getSizePrefixedRootAsList","startList","endList","createList","Struct_","getRootAsStruct_","getSizePrefixedRootAsStruct_","startStruct_","endStruct_","createStruct_","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","_field","fromJSON","fieldNodes","column","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_version","_headerType","_createHeader","_bodyLength","msg","messageHeaderFromJSON","_message","_Message","_Schema","_RecordBatch","_DictionaryBatch","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","_nodes","_buffers","_length","_isDelta","_id","decodeFieldChildren","decodeCustomMetadata","entry","decodeIndexType","decodeFieldType","_Int","_FloatingPoint","_Decimal","_Date","_Time","_Timestamp","_Interval","_Union","_FixedSizeBinary","_FixedSizeList","_Map","typeAssembler","childOffsets","childrenVectorOffset","_Field","metadataOffset","_KeyValue","dictType","dictMeta","fieldOffsets","fieldsVectorOffset","platformIsLittleEndian","_Endianness","Big","_schema","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","nodesVectorOffset","b_","buffersVectorOffset","decodeFieldNodes","bufferRegions","decodeBuffers","dictionaryBatch","_FieldNode","_Buffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","readMessage","readMessageBody","readSchema","throwIfNull","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC_STR","MAGIC","codePointAt","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","RecordBatchReader","impl","_impl","autoDestroy","isFile","isSync","isAsync","isStream","reset","opening","readRecordBatch","objectMode","throughNode","throughDOM","writableStrategy","readableStrategy","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAll","readAllSync","readAllAsync","RecordBatchReaderImpl","_recordBatchIndex","_loadRecordBatch","_loadVectors","_loadDictionaryBatch","types","_reader","shouldAutoDestroy","_readNextMessageAndValidate","_readFooter","_readDictionaryBatch","rest","_super","VectorAssembler","_bufferRegions","assemble","assembler","RangeError","addBuffer","_null","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","sync","writeAll","writeAllAsync","sink","isWritableNodeStream","_writeFooter","_writeSchema","_writeRecordBatch","_writeMessage","flatbufferSize","prefixSize","nPaddingBytes","_write","_writePadding","_writeMagic","_writeDictionaries","_writeBodyBuffers","_writeDictionaryBatch","padding","RecordBatchStreamWriter","writer","RecordBatchFileWriter","batches_1","batches_1_1","tableFromIPC","tableToIPC","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","EventTarget","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","Uint8ClampedArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","theme","_injectTheme","eventData","CustomEvent","dispatchEvent","argsDataframe","argsDataframeArrow","toArrowTable","fromEntries","isStreamlitMessage","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__proto__","__","StreamlitComponentBase","React","BaseOperatingContext","browserEnvironment","getConfig","getLogger","StandardOperatingContext","getModuleName","MODULE_NAME","PublicClientApplication","createPublicClientApplication","controller","createV3Controller","standardOperatingContext","acquireTokenRedirect","acquireTokenByCode","removeEventCallback","addPerformanceCallback","disableAccountStorageEvents","getAccountByHomeId","getAccountByUsername","userName","loginRedirect","logoutRedirect","logoutPopup","previousLogin","previousLogout","previousRevalidate","isDev","retrieveAuthData","raw","localStorage","WrappedComponent","ComponentWrapper","onRenderEvent","componentError","removeEventListener","renderData","innerWidth","getClientId","handleAuthenticationResult","authData","store","_str","saveAuthData","sessionStorage","handleAuthenticationError","signOut","authenticate","async","in_interaction","client","msal","initialize","authorizeAccountRequest","accountSelectRequest","revalidate","hideComponent","onbeforeunload","doc","root","querySelector","msals","msalParent","parentElement","login","ReactDOM","_jsx","Msal","getElementById"],"sourceRoot":""}